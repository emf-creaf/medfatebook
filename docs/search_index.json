[["index.html", "The medfate reference book Preface How to use this book An ongoing project Acknowledgements", " The medfate reference book Miquel De Cáceres Centre de Recerca en Ecologia i Aplicacions Forestals (CREAF) miquelcaceres@gmail.com 2021-06-11 Preface This is a reference book for the models implemented in medfate and medfateland, two R packages that provide functions for the simulation of functioning and dynamics of Mediterranean forests and landscapes. How to use this book This reference book is meant to help you understand the static and dynamic models included in packages medfate (ver. 2.2.1) and medfateland (ver. 0.2.5). Hands-on user guides to run simulation functions and static functions can be found as package vignettes within the packages. As any reference book, you are not expected to read the book linearly, but to jump to specific book sections whenever you have doubts about the design or implementation of certain processes or calculations. The first part of the book present the main functions of the package and describes the soil, vegetation and meteorology inputs that apply to all simulation models. After that, the book presents each simulation model using a set of chapters. The first of them provides an overview of the model design and the remaining ones describe the details of formulations by processes. Those process formulations that are common to more than one model (like hydrology) are described only once to avoid repeating material already presented, but links are provided whenever needed. Static models and their corresponding R functions are presented grouped at the end of the book, before the appendices, which include parametrization information and a list of all symbols for reference. In this book we use objectname or variablename to refer to an R objects or a variable within data frames, and functionname() to refer to a package function. Whenever relevant, we indicate the correspondence between mathematical symbols, their units and the names used within the R package. Our aim is to continuously update this reference book along with package developments, so that users have detailed and up-to-date information about the models at the time functions are run. Since the book evolves with the package, after any model application we recommend users to store a PDF version of the reference book to be sure it matches the version the package reported in their application report or article. An ongoing project You should look at medfate and medfateland as both R packages and an ongoing research project for the development of forest ecosystem modelling tools. The models included in the package may contain bugs, and provide wrong predictions (all models are wrong). Some package functions may evolve in the future, so that you may have to modify your scripts after package updates (hopefully not too often). Nevertheless, we feel the tool is mature enough to become useful for applications and that is why we made an effort to document it thoroughly. The R packages are the result of collaborative work between modellers and experts in different disciplines. If your own expertise includes any of the processes that are modelled in the package and you feel that your expertise could be helpful to improve the package, you are more than welcome to contact us! Acknowledgements I have been intensively working on medfate since 2013, when I obtained a Ramon y Cajal research fellowship from the Spanish government. An investment on a long-term modelling project could not have started with this initial financial help, that of other competitive research projects and the support of CTFC, the research institution until March 2021, and CREAF, my current institution where I coordinate its Ecosystem Modelling Facility. The idea of an R package devoted to Mediterranean vegetation evolved after a previous attempt at modelling the dynamics of plant cohorts within a landscape model that tried to extend the MEDFIRE model. I made these initial efforts when I was still a post-doc at CTFC under the supervision of Lluís Brotons, to whom I am grateful for having greatly expanded my view of ecology and its applications. Undertaking this initial endeavour made us contact two excellent researchers in fire and drought ecology respectively, Juli G. Pausas (CIDE-CSIC, Spain) and Jordi Martínez-Vilalta (CREAF-UAB, Spain). While interacting with Juli was rewarding and fostered my interest in wildfires, Jordi had a profound influence on the project. Collaborating with him caused a slow but steady drift of my research interests towards the soil water balance, plant hydraulics and physiological responses to drought. His influence on my work was not so apparent when we published water balance model (and launched the R package) with the help of the forest hydrologist Pilar Llorens (CSIC, Spain) and other researchers (Rafa Poyatos, Lluís Coll and Pere Casals). However, it became undeniable when I started studying plant hydraulics, trying to understand and implement Sperry’s model in the package. Jordi made me interact with people in his research group and introduced me to Maurizio Mencuccini, another great ecophysiologist with whom he had been working for a long time. I have to thank Maurizio and Jordi for encouraging me to continue working on this development project and overcome the difficulty that entails learning scientific disciplines quite far from my previous experience. The development of the package has benefited from many colleagues who have provided me with ideas or have struggled to use the models within it. Asaf Karavani was among the first package users besides me. Together, we used the package to predict soil moisture dynamics in forest plots where mushroom production was being monitored. Antoine Cabon (CTFC, Spain) was also an early user of the package. I have enjoyed endless discussions with him about several processes and how to implement them. While he was the Ph.D. student and I one of his advisors, I felt we both learned together. Moreover, Antoine has contributed with some functions to the package (and I hope he will contribute more!). Another key person for the development of medfate was working with Victor Granda (Ecosystem Modelling Facility at CREAF, Spain), whose great programming skills and profound knowledge about R technologies has encouraged me to embrace new programming habits and skills. I owe the idea of separating packages meteoland and medfate to Roberto Molowny (Ecosystem Modelling Facility at CREAF, Spain) an excellent modeller. More recently, collaboration with another ecophysiologist, Nicolas Martin-StPaul (INRA, France), has stimulated improvements both in meteoland and medfate. In fact, Nicolas has became another key person in my research, with whom I share the interest for one of the interfaces between fire and drought, namely fuel moisture dynamics. Recently, collaboration with Shengli Huang (Forest Service, US) on adapting the package for the US Forest Inventory and Analysis (FIA) program has expanded the horizons of its application. I would not like to finish the acknowledgements without thanking my former colleagues at CTFC (located in the small town of Solsona, Catalonia, Spain), for their collaboration and support. Particularly, Lluís Coll and Pere Casals have been continuously supporting my efforts and finding new model applications. Moreover, they have contributed to the knowledge within the package with their expertise in forest dynamics, soils and fire issues. I also thank Mario Beltrán and Assu Gil for teaching me forestry. Finally, I would like to thank José Manuel, who takes care of me and has to endure my endless talking about the package and its models, to my family for being there at difficult times, including my three nephews from whom I learn the joy of life. "],["intro.html", "Chapter 1 Introduction 1.1 Purpose 1.2 Package installation 1.3 Data structures and functions in medfate 1.4 Data structures and functions in medfateland", " Chapter 1 Introduction This chapter provides an overview of the purpose of developing the medfate an medfateland R packages, their main simulation functions and expected applications. 1.1 Purpose Being able to anticipate the impact of global change on forests is one of the major environmental challenges in contemporary societies. However, uncertainties in how forest ecosystems function and practical constraints in how to integrate available information still hinder the availability of robust and reliable predictive models. Despite the amount of knowledge accumulated about the functioning and dynamics of forest ecosystems and the plethora of modelling tools already available, further efforts are necessary to achieve the challenge of integrating different global change drivers into simulation tools useful for research and applications. 1.1.1 Package medfate The R package medfate has been designed as a platform to simulate the functioning and dynamics of individual forest stands at temporal scales from days to years. Climate is the main environmental driver covered by the package and the ecological, hydrological and physiological processes surrounding these are fundamental for the simulation models included in the package. In particular, the package allows the simulation of water balance of soils and plants within forest stands. It also allows simulating plant growth, mortality and recruitment processes of a set of cohorts competing for light and water within a forest stand. Finally, additional package functions allow relating the amount of plant biomass and the water status of plant tissues to fuel characteristics and, hence, fire hazard. The version of the reference manual that you are reading is intended to reflect version 2.2.1 of the package. 1.1.2 Package medfateland The R package medfateland has been designed to extend the capabilities of medfate to the landscape level. It allows running the stand-level models available in medfate on points and cells within landscape. More importantly, the package allows considering spatial hydrological processes in forested watersheds. Hence, medfateland can be used as a tool for eco-hydrological applications. The version of the reference manual that you are reading is intended to reflect version 0.2.5 of the package. 1.2 Package installation 1.2.1 medfate Package medfate can be found at CRAN, where it is updated every few months. Hence, it can be installed using: install.packages(&quot;medfate&quot;) Users can also download and install the latest stable versions GitHub as follows (required package devtools should be installed/updated first): devtools::install_github(&quot;emf-creaf/medfate&quot;) When installing from GitHub, one may force the installation of package vignettes by using: devtools::install_github(&quot;emf-creaf/medfate&quot;, build_opts = c(&quot;--no-resave-data&quot;, &quot;--no-manual&quot;), build_vignettes = TRUE) Among other dependencies, installing medfate requires package meteoland, as it links to some of its C++ functions. Note that some package dependencies are only suggested, so that they are not automatically installed when installing medfate. 1.2.2 medfateland Since both packages evolve together, installing medfateland normally requires an up-to-date version of medfate. The package medfateland is currently only available at GitHub, and can be installed using: devtools::install_github(&quot;emf-creaf/medfateland&quot;) As with medfate, one may force the installation of package vignettes for medfateland, by using: devtools::install_github(&quot;emf-creaf/medfateland&quot;, build_opts = c(&quot;--no-resave-data&quot;, &quot;--no-manual&quot;), build_vignettes = TRUE) 1.2.3 Installation from sources Both packages have a user interface in R, but actual calculations have been implemented as C++ functions and linked to R via the Rcpp package. This means that you will need a compiler to install medfate and medfateland packages from sources (i.e. Rtools in Windows). 1.3 Data structures and functions in medfate 1.3.1 Data structures Package medfate deals with simulations at stand level and, hence, the data structures defined in the package are meant to encapsulate information about a target forest stands and the properties of the soil where it grows: S3 class soil is a list of soil physical and hydraulic properties, including both parameters and state variables. Soil objects are described in subsection 2.2.3. S3 class forest is a list of forest inventory data (i.e. mainly tree and shrub measurements) corresponding to a single forest stand. Forest plot objects are described in subsection 2.3.2. S3 classes spwbInput and growthInput are lists containing all the vegetation parameters and state variables necessary to run water-balance simulations (function spwb() and alike) and forest growth simulations (function growth() and alike). Objects of classes spwbInput and growthInput can be created using functions whose input includes a forest object and a soil object. 1.3.2 Dynamic simulation functions Dynamic simulation functions in medfate include three nested simulation levels (Fig. 1.1): Forest water and energy balance can be studied for a given forest stand using function spwb() (soil-plant-water-balance). The same function is used to run two models of different degree of complexity (basic or advanced; see Fig. 1.1), from which the user should choose depending on the intended application and data availability. Water balance simulations include hydrological processes (rainfall interception, soil infiltration, percolation and evapotranspiration) and plant physiological processes related to transpiration (hydraulics, photosynthesis and stomatal regulation). Most processes are implemented at the daily scale, although some operate at subdaily time steps. Function spwb() has a closely related function spwb.day() that allows focusing on subdaily processes. Finally, one can simulate plant physiological processes only, while having soil moisture as a dynamic input like weather, using function pwb() (plant-water-balance). Changes in primary (leaf area) and secondary (wood) growth are key to evaluate the influence of climatic conditions on plant and forest structure and function. Function growth() extends the previous models because it allows simulating carbon balance, growth and mortality of a set of plant cohorts competing for light and water in a given forest stand. Analogously to the simulation of water balance, growth() has a closely related function growth.day() that allows focusing on subdaily processes (i.e. carbon balance). Finally, function fordyn() complements growth and mortality processes with recruitment (from seeds), thus completing the minimum set of demographic processes needed to simulate forest dynamics. The function splits the period to be simulated by years and makes internal calls to growth() for the simulation of growth and mortality. fordyn() is suited to simulate the interannual variation in forest structure and composition, while accounting for the biophysical and ecophysiological processes provided by the former models. Figure 1.1: Nested relationships between simulation functions and processes included in each model Importantly, growth() and fordyn() functions and the processes that they implements are still under development. 1.3.3 Sub-model functions Many of the sub-models included in medfate are implemented as C++ functions and internally called by the simulation functions implementing top-level models. Most sub-models have, however, their corresponding R function to made them directly available to the user. This facilitates understanding the different sub-models and a more creative use of the package. Sub-model functions are grouped by subject, which is included in the name of the function. The different sub-model functions are (by subject): biophysics_*: Physical and biophysical utility functions. carbon_*: Structural and non-structural carbon compartments and flows. hydraulics_*: Plant hydraulics. hydrology_*: Canopy and soil hydrology. light_*: Light extinction and absortion. moisture_*: Tissue water relations and live tissue moisture. pheno_*: Leaf phenology. photo_*: Leaf photosynthesis. root_*: Root distribution and root/rhizosphere conductance estimation. soil_*: Soil hydraulics and thermodynamics. spwb_*: Soil water balance routines. transp_*: Stomatal regulation and plant transpiration. wind_*: Canopy turbulence. 1.3.4 Static functions Package medfate includes a number of functions to examine static properties of plants conforming forest stands, summary functions at the stand level or vertical profiles of several physical properties: plant_*: Cohort-level information (species name, id, leaf area, height…). species_*: Cohort-level attributes aggregated by species (e.g. basal area). stand_*: Stand-level attributes (e.g. basal area). vprofile_*: Vertical profiles (light, wind, fuel density, leaf area density). Vegetation functioning and dynamics have strong, but complex, effects on fire hazard. On one hand, growth and death of organs and individuals changes the amount of standing live and dead fuels, as well as downed dead fuels. On the other, day-to-day changes in soil and plant water content changes the physical properties of fuel, notably fuel moisture content. Package medfate provides functions to estimate fuel properties and potential fire behaviour in forest inventory plots. Specifically, function fuel_stratification() provides a stratification of the stand into understory and canopy strata; and fuel_FCCS() calculates fuel characteristics. A fire behaviour model is implemented in function fire_FCCS() to calculate the intensity of surface fire reaction and the rate of fire spread of surface fires assuming a steady-state fire. Fuel and fire behaviour functions allow obtaining the following: Fuel characteristics by stratum. Surface fire behavior (i.e. reaction intensity, rate of spread, fireline intensity and flame length). Crown fire behavior. Fire potential ratings of surface fire behavior and crown fire behavior. 1.4 Data structures and functions in medfateland 1.4.1 Data structures Package medfateland allows simulating forest functioning and dynamics on sets forests stands distributed across space. Three S4 classes have been defined to facilitate simulations on particular locations and over grids. They extend spatial classes from package meteoland S4 class SpatialPointsLandscape contains a list of soil and forest stand descriptions along with the spatial location of stands. It extends class SpatialPointsTopography. S4 class SpatialPixelsLandscape contains a set of soil and forest stand descriptions along with the location over a grid of the corresponding set of pixels. It extends class SpatialPixelsTopography. S4 class SpatialGridLandscape contains a set of soil and forest stand descriptions along with the location over a full grid. It extends class SpatialGridTopography. While simulation functions in the package can be run sequentially on individual forest stands of the former classes, the package has been designed so that it could be part of a broader modelling infrastructure including spatial hydrological processes, notably surface and sub-surface lateral water flows. An additional S4 class has been defined for this purpose. S4 class DistributedWatershed contains a set of soil and forest stand descriptions along with the location over a grid of the corresponding set of pixels, because it extends class SpatialPixelsLandscape. In addition, however, DistributedWatershed includes many other spatial layers, such as list of discharge values to neighbors, an integer vector of cell processing order or the water content of the underlying aquifer. 1.4.2 Dynamic simulation functions Package medfateland offers sets of simulation functions for the first three S4 classes presented above. Simulations available are analogous to those of package medfate: Forest water and energy balance can be studied for a set of forest stands using functions spwbpoints(), spwbpixels() and spwbgrid() . Growth and mortality of a set of plant cohorts competing for light and water can be simulated for a set of forest stands using functions growthpoints(), growthpixels() and growthgrid() . Forest dynamics arising from competition for light and water can be simulated for a set of forest stands using functions fordynpoints(), fordynpixels() and fordyngrid() . In addition, the package offers a simulation function tailored to be used with objects of class DistributedWatershed: Function wswb() is distributed hydrological model that simulates daily water balance on the cells of a watershed while accounting for overland runoff, subsurface flow and groundwater flow between cells. "],["model-inputs.html", "Chapter 2 Model inputs 2.1 Latitude and topography 2.2 Soil description 2.3 Vegetation description 2.4 Metereological input 2.5 Control parameters", " Chapter 2 Model inputs Data input for simulation models can be grouped into four conceptually distinct categories. First, a description of the vegetation existing in the target forest stand is needed. This information should be available at a level of detail appropriate for the model design, which in our case includes not only species composition and/or structure, but also functional parameters of woody plants. Vegetation structure is considered static in spwb() calls, but becomes dynamic in calls to growth(). Hence, in this latter case the input vegetation describes to the starting point. Second, soil information is also required, because underground water resources are important for the processes included in the model. While soil features are considered static parameters in model simulations, weather is always a dynamic input that defines the temporal variation of environmental conditions in which physical and biological processes occur. Finally, topographic and geographic information is often required, since internal calculations of some physical variables (such as atmospheric pressure or potential radiation) require them. This chapter describes the requirements of medfate package with respect to each of these data input categories. The last section describes additional parameters that are used to specify global options of simulation functions (i.e., spwb(), pwb(), growth() and daily simulation functions). 2.1 Latitude and topography Topography has a relatively small direct influence in medfate simulations, because most topographic effects are assumed to be taken into account in the estimation of weather input. Nonetheless, elevation in meters is needed to estimate atmospheric pressure and air density (see 2.4), whereas aspect (in degrees from North) and slope (also in degrees) are needed in addition to latitude (also in degrees North) to estimate sunrise/sunset hours and potential radiation. Topographic variables should be readily accessible for users having access to a digital elevation model. 2.2 Soil description Soils can be described in medfate using \\(S &gt; 1\\) different soil layers (\\(s \\in \\{1, 2, ..., S\\}\\)). Here the word soil refers to depths that plant rooting systems can reach (critical zone), including cracks within the bedrock. The number and size of soil layers may reflect changes in soil properties along depth, but also can be chosen to reflect differences in plant rooting depths. The physical properties of the soil are needed to estimate soil hydraulic properties. Most soil properties are considered static parameters in simulations, except soil moisture content, variables that depend on moisture (e.g. soil water potential and soil conductivity) and soil temperature, if the soil energy balance is considered in simulations. 2.2.1 Soil physical properties Soil physical properties, such as texture (i.e. volume percent of sand, silt and clay), organic matter content, bulk density or rock fragment content, can differ between soil layers, and this has important consequences for soil water retention capacity and soil hydraulics. Specifying layers with an elevated rock fragment content (e.g. layers of weathered rock where soil particles are scarce) may be important in seasonally-arid climates like the Mediterranean, because plants often extend their roots into cracks existing in the parent rock to access water during summer (Ruffault et al. 2013). For each soil layer \\(s\\), the following physical parameters are needed: Symbol Units R Description \\(d_{s}\\) \\(mm\\) widths Width of soil layer \\(s\\) \\(P_{clay,s}\\) % clay Percent volume of clay (within soil particles fraction) in layer \\(s\\) \\(P_{sand,s}\\) % sand Percent volume of sand (within soil particles fraction) in layer \\(s\\) \\(OM_s\\) % om Percentage of organic mater per dry weight (can be missing) in layer \\(s\\) \\(BD_{s}\\) \\(g \\cdot cm^{-3}\\) bd Bulk density in layer \\(s\\) \\(P_{rocks,s}\\) % rfc Rock fragment content as percent volume (within whole soil) in layer \\(s\\) The percent volume of silt is 100% minus the percent volume of clay and sand. Whenever possible, soil physical properties should be measured in soil profiles conducted at the target forest plot (although soil profiles rarely reach rooting depths of deeply-rooted plants). Soil input data should be arranged in a data.frame with soil layers in rows and physical variables in columns (see function defaultSoilParams()). The package includes function soilgridsParams() to fetch soil information from SoilGrids.org, a global soil database currently providing soil data at 250m scale. This can be helpful to users lacking local soil measurements, but the uncertainty of SoilGrids estimates can be high for some areas and soil properties, especially soil depth and rock fragment content. The depth of a given soil layer \\(s\\) (\\(Z_s\\); in \\(mm\\)) is defined as the sum of layer widths from the surface to the target layer: \\[\\begin{equation} Z_s = \\sum_{i=1}^s{d_s} \\end{equation}\\] And the overall soil depth (\\(Z_{soil}\\); in \\(mm\\)) is the sum of soil layer widths. As it may include rocky layers, the value of \\(Z_{soil}\\) may be larger than the soil depth reported in soil profiles. 2.2.2 Water retention curves The water retention curve of a soil is the relationship between volumetric soil moisture content (\\(\\theta\\), in \\(m^3 \\cdot m^{-3}\\) of soil, excluding rock fragments) and the corresponding soil water potential (\\(\\Psi\\), in MPa), i.e. the amount of work that must be done per unit quantity of pure water in order to transport reversibly and isothermally an infinitesimal quantity of water from a reference pool. The shape of the water retention curve (also called the soil moisture characteristic curve) depends on physical properties (mainly texture and bulk density, but also organic matter content). Since soil layers usually differ in their physical properties they also normally have different water retention curves. Two water retention curve models are available in medfate (fig. 2.1): Saxton model: In this model, volumetric soil moisture \\(\\theta(\\Psi)\\) corresponding to a given water potential \\(\\Psi\\) (in MPa) below \\(\\Psi_{fc}\\) is calculated using: \\[\\begin{equation}\\theta(\\Psi) = (\\Psi/A)^{(1/B)}\\end{equation}\\] where \\(A\\) and \\(B\\) depend on the texture and, if available, organic matter in the soil. If organic matter is available, \\(A\\) and \\(B\\) are calculated from \\(P_{clay}\\), \\(P_{sand}\\) and \\(OM\\) following Saxton and Rawls (2006). Otherwise, they are calculated from \\(P_{clay}\\) and \\(P_{sand}\\) as indicated in Saxton et al. (1986). Volumetric changes between field capacity and saturation are estimated using a linear function. Van Genuchten model: The well known van Genuchten (1980) model is: \\[\\begin{equation}\\theta(\\Psi) = \\theta_{res}+\\frac{\\theta_{sat}-\\theta_{res}}{\\left[1+ (\\alpha \\cdot \\Psi)^n \\right]^{1-1/n}}\\end{equation}\\] where \\(\\theta(\\psi)\\) is the water retention, \\(\\theta_{sat}\\) is the saturated water content, \\(\\theta_{res}\\) is the residual water content, \\(\\alpha\\) is related to the inverse of the air entry pressure, and \\(n\\) is a measure of the pore-size distribution. Figure 2.1: Water retention curves under the Saxton and Van Genuchten models, for the same physical attributes (25% sand, 25% clay, 50% silt and bulk density of \\(1.5 g \\cdot cm^{-3}\\)). Parameters of the Van Genuchten curve have been estimated using pedotransfer functions given in Tóth et al. (2015). 2.2.3 Soil initialization Soil initialization is needed to estimate soil hydrological parameters for each soil layer \\(s\\) from their physical attributes. Initialization is done using function soil(), which returns an object of a class with the same name. Function soil() adds the following information to the physical soil description: Symbol Units R Description \\(P_{macro, s}\\) % macro Percentage of macroporosity corresponding to each soil layers \\(\\gamma_{soil}\\) \\(mm \\cdot day^{-1}\\) Gsoil The maximum daily evaporation rate from soil (see 5.5) \\(\\kappa_{soil}\\) Ksoil Extinction parameter to regulate the amount of water extracted from each soil layer when simulating evaporation from bare soil (see 5.5) \\(\\theta_{sat, s}\\) \\(m^3 \\cdot m^{-3}\\) VG_theta_sat Volumetric soil moisture at saturation \\(\\theta_{res, s}\\) \\(m^3 \\cdot m^{-3}\\) VG_theta_res Residual volumetric soil moisture \\(n_s\\) VG_n Parameter \\(n\\) of the Van Genuchten (1980) model \\(\\alpha_s\\) \\(MPa^{-1}\\) VG_alpha Parameter \\(\\alpha\\) of the Van Genuchten (1980) model \\(K_{sat,s}\\) \\(mmol \\cdot s^{-1} \\cdot m^{-1} \\cdot MPa^{-1}\\) Ksat Saturated soil conductivity \\(K_{drain}\\) \\(mm \\cdot d^{-1}\\) Kdrain Hydraulic conductivity for deep drainage. Macroporosity values are calculated using the equations given in Stolf et al. (2011), while \\(\\gamma_{soil}\\) and \\(\\kappa_{soil}\\) are derived from texture. Parameters of the van Genuchten model for each layer are estimated from the physical description of the layer using one of two pedotransfer functions (see help for soil()): Using the USDA texture classification and the average texture class parameters given by Carsel and Parrish (1988). Directly from the soil texture, organic matter and bulk density, using the pedotransfer functions in Tóth et al. (2015). Saturated soil conductivity values are estimated using Saxton and Rawls (2006) or Saxton et al. (1986), depending on whether an estimate of organic mater is available. Besides defining soil parameters, function soil() also initializes soil state variables: soil moisture content, soil temperature (although set to a missing value) and water table depth. All simulation functions need an object of class soil to be run. Users can edit the soil object manually (it is actually a list), for example to provide specific parameters of the Van Genuchten retention curve calibrated from soil measurements. \\(K_{drain}\\) is currently initialized from soil saturated conductivity in the deepest soil layer, but should be defined depending on the permeability of the bedrock material. 2.2.4 Water content and water table depth The volume of water (\\(V_s\\) in \\(mm = l \\cdot m^{-2}\\) of ground area) in a soil layer \\(s\\) is calculated from its water potential (\\(\\Psi_s\\)) and water retention curve using: \\[\\begin{equation} V_s(\\Psi_s) = d_s\\cdot ((100-P_{rocks,s})/100)\\cdot\\theta_{s}(\\Psi_s) \\end{equation}\\] where \\(d_s\\) is the depth of the soil layer (in mm) and \\(P_{rocks,s}\\) is the percentage of rock fragments. The overall volume of water in the soil (accessible by roots) is simply the sum of water content over soil layers: \\[\\begin{equation} V_{soil} = \\sum_{s=1}^S{V_s(\\Psi_s)} \\end{equation}\\] A number of fixed water volumes (and their corresponding moisture) are important to remember: Water holding capacity (\\(V_{fc, s}\\), in mm) of the soil layer \\(s\\) is defined as the volume of water at field capacity, i.e. -0.033 MPa: \\[\\begin{equation} V_{fc,s} = V_{s}(-0.033) = d_s\\cdot ((100-P_{rocks,s})/100)\\cdot\\theta_{fc,s} \\end{equation}\\] where \\(\\theta_{fc,s} = \\theta_s(-0.033)\\) is the corresponding moisture at field capacity, the amount of soil moisture held in soil after excess water has drained away. Water content at saturation is calculated anagolously, but replacing \\(\\theta_{fc,s}\\) by \\(\\theta_{sat, s} = \\theta_s(0)\\), the moisture at saturation, the amount of soil moisture when all easily drained spaces between soil particles (i.e. macropores) are also filled with water. Water content at wilting point (-1.5 MPa) is calculated replacing \\(\\theta_{fc,s}\\) by \\(\\theta_{wp,s} = \\theta_s(-1.5)\\), the moisture at wilting point, a conventional amount of soil moisture beyond which plants are assumed have problems extracting water and start to wilt. In reality, however, many plants can extract water from much drier soils. The amount of extractable water is the difference between water content at field capacity and the water content at a conventional minimum water potential, which can be set at wilting point or lower values (by default at -5 MPa in medfate). The depth of water table is the depth of saturated soil (in \\(mm\\)). In medfate, water table depth (\\(Z_{wt}\\), in mm) equals soil depth (i.e. \\(Z_{soil}\\)) when all soil layers are below field capacity. When some layers are between field capacity and saturation, water table depth is calculated as: \\[\\begin{equation} Z_{wt} = \\sum_{s}{d_s \\cdot \\min\\left[1,(\\theta_{sat,s} - \\theta(\\Psi_s))/(\\theta_{sat,s}-\\theta_{fc,s})\\right]} \\end{equation}\\] 2.3 Vegetation description The representation of plants within a target plot is done in medfate by means of cohorts of woody plants (i.e. trees and shrubs). A plant cohort respresents a set of plants that belong to the same species (or functional group) and are more or less of the same size. For example, trees in a stand may be grouped by species and diameter class. This representation is chosen so that package functions can be easily applied to forest plot data, for example from national forest inventories. The description of plant cohorts includes a measure of abundance of the cohort in the stand, which in the case of trees is density as stems per hectare and for shrubs is percent cover (shrubs are often multi-stemmed). This different abundance measure is the main motivation for distinguishing between tree cohorts and shrub cohorts, rather than their height. Note that one limitation of the representation of vegetation in medfate is that it is not spatially-explicit (i.e. plants cannot have explicit coordinates within forest stands) and hence spatial (horizontal) interactions between plant cannot be taken into account explicitly (but see 2.3.5). 2.3.1 Structural attributes of plant cohorts A plant cohort \\(i\\) is either a tree cohort or a shrub cohort, and is defined using a set of structural attributes shown in the following table, where columns spwb and growth indicate whether attributes are required by simulation functions spwb()/pwb() and growth(), respectively: Symbol Units R Description spwb growth \\(SP_i\\) Species Species identity Y Y \\(H_i\\) \\(cm\\) Height Average tree or shrub height Y Y \\(CR_i\\) CR Crown ratio (i.e. ratio between crown length and plant height) Y Y \\(N_i\\) \\(ind · ha^{-1}\\) N Density of tree individuals N Y \\(DBH_i\\) \\(cm\\) DBH Tree diameter at breast height N Y \\(Cover_i\\) % Cover Shrub percent cover N Y \\(LAI^{live}_i\\) \\(m^2 \\cdot m^{-2}\\) LAI_live (Maximum) leaf area index Y Y \\(LAI^{dead}_i\\) \\(m^2 \\cdot m^{-2}\\) LAI_dead Dead leaf area index Y Y \\(LAI^{\\phi}_i\\) \\(m^2 \\cdot m^{-2}\\) LAI_expanded Current expanded leaf area index Y Y \\(Z_{50,i}\\) mm Z50 Depth above which 50% of the fine root mass is located Y Y \\(Z_{95,i}\\) mm Z95 Depth above which 95% of the fine root mass is located Y Y Height (\\(H\\)) values refer to average height of individuals included in the cohort, and the same for crown ratio (\\(CR\\)) and diameter at breast height (\\(DBH\\)). While plant size (i.e. height or diameter) is relatively easy to tally, other measurements are not usually made in the field. Package medfate includes utility functions that provide estimates \\(CR\\) and \\(LAI\\) from forest inventory data (e.g. heights, DBH and density for measured trees), using allometric relationships calibrated for Catalonia (see chapter 21). Leaf area index \\(LAI\\) variables refer to one-sided leaf area of plants in the cohort per surface area of the stand. Leaves standing on branches can be alive or dead. We will call total leaf area index of a plant cohort \\(i\\) (\\(LAI^{all}_{i}\\)) to the sum of dead and live (and unfolded) leaves of the cohort: \\[\\begin{equation} LAI^{all}_{i} = LAI^{\\phi}_{i}+LAI^{dead}_{i} \\end{equation}\\] For simulations not involving growth, winter deciduous phenology is still simulated, and the current level of leaves unfolded may be lower than the maximum (live) amount of leaves. If there are \\(c\\) plant cohorts, the leaf area index of the whole stand can be calculated for living leaves, unfolded leaves, dead leaves and total leaf area as: \\[\\begin{eqnarray} LAI^{live}_{stand} &amp;=&amp; \\sum_{i=1}^c{LAI_{i}^{live}} \\\\ LAI^{\\phi}_{stand} &amp;=&amp; \\sum_{i=1}^c{LAI_{i}^{\\phi}} \\\\ LAI^{dead}_{stand} &amp;=&amp; \\sum_{i=1}^c{LAI_{i}^{dead}} \\\\ LAI^{all}_{stand} &amp;=&amp; \\sum_{i=1}^c{LAI_{i}^{all}} = LAI^{\\phi}_{stand}+LAI^{dead}_{stand} \\end{eqnarray}\\] For evergreen species, \\(LAI_{i}^{live} = LAI_{i}^{\\phi}\\) and the distinction does not exist. 2.3.2 Forest plot objects While the previous section described the structural forest variables required to run simulations in medfate, forest plot data input in the package is easier if one uses a format that follows closely the Spanish national forest inventory. In this format, each forest plot is represented in an object of class forest, a list that contains several elements: data(exampleforestMED) exampleforestMED ## $ID ## [1] &quot;1&quot; ## ## $patchsize ## [1] 10000 ## ## $treeData ## Species N DBH Height Z50 Z95 ## 1 54 168 37.55 800 750 3000 ## 2 68 384 14.60 660 750 3000 ## ## $shrubData ## Species Cover Height Z50 Z95 ## 1 65 3.75 80 300 1500 ## ## $herbCover ## [1] 10 ## ## $herbHeight ## [1] 20 ## ## attr(,&quot;class&quot;) ## [1] &quot;forest&quot; &quot;list&quot; Among them, the most important items are two data frames, treeData (for trees) and shrubData for shrubs. Information about herbs is currently only used for fire hazard calculations. Elements ID and patchsize are only relevant when using medfate functions in a spatial context. While not strictly necessary, forest objects are a convenient format to start calculations with medfate, because there are many static functions that take forest objects as input and calculate leaf area index for each plant cohort. Another pathway to obtain LAI estimations is by specifying foliar biomass values as additional columns of forest objects. The package also includes functions to facilitate mapping user data in into tables treeData and shrubData (see function forest_mapWoodyTables()). 2.3.3 Vertical leaf distribution The vegetation inputs for height, leaf area index and crown ratio allow the package to determine the vertical distribution of leaves in the stand. The leaf area of any plant cohort is assumed to be distributed vertically following a truncated Gaussian function whose standardized values -1.5 and 1.5 correspond to crown base height (\\(H_{crown,i}\\); in \\(cm\\)) and total plant height (\\(H_i\\)), respectively. Crown base height (\\(H_{crown,i}\\)) of cohort \\(i\\) is defined as the height corresponding to the first living branch. It is calculated from the crown ratio of the cohort (\\(CR_i\\); a proportion between 0 and 1), i.e. the ratio between plant crown length and total height (see eq. (21.5)). Simulation models in medfate divide the vertical dimension into vertical layers (by default are 1m width, but see control parameter verticalLayerSize). Let us define \\(LAI_{i,j}^{all} = LAI_{i,j}^{\\phi}+LAI_{i,j}^{dead}\\) as the leaf area index of cohort \\(i\\) in layer \\(j\\) including both functional leaves and dead leaves standing on branches. The truncated Gaussian distribution defines the \\(LAI_{i,j}^{\\phi}\\) and \\(LAI_{i,j}^{dead}\\) for all plant cohorts and vertical layers. Dividing the leaf area of a given layer by its width, one obtains the leaf area density (\\(LAD\\) in \\(m^2 \\cdot m^{-3}\\)). Figure 2.2 illustrates the leaf area density profile (see function vprofile_leafAreaDensity()) corresponding to the forest stand described in the forest object that we showed above. Figure 2.2: Leaf area density distribution in a forest stand. The left panel shows the distribution for each plant cohort separately, whereas the right panel shows the overall density distribution. The leaf area density profile determines the extinction rates of light through the forest canopy. The same truncated Gaussian distribution is used to distribute leaf and small branch biomass along the vertical dimension. 2.3.4 Vertical root distribution Roots can be distinguished functionally into two different organs. Coarse roots are responsible for transport of water and nutrients towards the stem, whereas fine roots, which are responsible for absorbing water and nutrients. Analogously to the aboveground vegetation parameters, inputs describing depths corresponding to 50% and 95% of fine roots (\\(Z_{50,i}\\) and \\(Z_{95,i}\\)) are used to completely specify the distribution of roots across soil layers. The root system of each plant cohort \\(i\\) is described using \\(FRP_{i,s}\\), the proportion of fine roots (with respect to the whole plant) in each soil layer \\(s\\). \\(FRP_{i,s}\\) values are normally defined using the linear dose response model (Schenk and Jackson 2002; Collins and Bras 2007): \\[\\begin{eqnarray} FRP_{i,s} &amp;=&amp; Y_i(Z_s) - Y_i(Z_{s-1}) \\\\ Y_i(z) &amp;=&amp; \\frac{1}{1+(z/Z_{50,i})^{c_i}} \\end{eqnarray}\\] where \\(Y_i(z)\\) is the cumulative fraction of fine root mass located between surface and depth \\(z\\); \\(Z_{50,i}\\) is the depth (in \\(mm\\)) above which 50% of the root mass is located; and \\(c_i\\) is a shape parameter related to \\(Z_{50,i}\\) and \\(Z_{95,i}\\) as \\(c_i = 2.94 / \\ln(Z_{50,i} / Z_{95,i})\\). The linear dose response model is quite flexible with respect to fine root distribution (see function root_ldrDistribution()). The following figure shows the fine root distribution profile of the same cohorts as in fig. 2.2 (see vprofile_rootDistribution()): Figure 2.3: Examples of root density profile according to the linear dose response model. The actual input to simulation functions is the matrix of \\(FRP_{i,s}\\) values - not \\(Z_{50,i}\\) and \\(Z_{95,i}\\) -, which means that the proportions of fine roots can be modified manually or be defined by another model. In fact, medfate also allows calculating \\(FRP_{i,s}\\) values assuming a conic distribution of fine roots (see root_conicDistribution()). 2.3.5 Plant water pools and root horizontal distribution By default, models in medfate assume that soil moisture under all plant cohorts is the same (i.e. water sources corresponding to vertical soil layers are shared among cohorts). However, variations in soil moisture beneath plant cohorts (and, implicitly, horizontal variation of soil moisture) can also be simulated if required by the user. Considering plant water pools involves partitioning the stand area into fractions corresponding to the abundance of each plant cohort. More specifically, the model defines as many plant water pools as plant cohorts, with proportions defined by their LAI values: \\[\\begin{equation} f_{pool,i} = \\frac{LAI^{live}_i}{LAI^{live}_{stand}} \\end{equation}\\] Models assume that the rhizosphere of each plant cohort occupies its own water pool but may extend into the water pools under other plant cohorts. In other words, the root systems of different cohorts may overlap horizontally. Moreover, the horizontal overal of root systems will vary across soil layers. A given plant cohort \\(i\\) will have its roots in layer \\(s\\) partitioned among different water pools. We thus need to define \\(fr_{i,s,j}\\), the (horizontal) proportion of fine roots of cohort \\(i\\) in layer \\(s\\) of the water pool \\(j\\), with the restriction that: \\[\\begin{equation} \\sum_{j}{fr_{i,s,j}} = 1 \\,\\, \\forall i,s \\end{equation}\\] It is important to realize that proper estimation of \\(fr_{i,s,j}\\) is challenging when we do not have explicit plant coordinates, root lateral widths, etc. At this point, we will assume we have a reasonable estimate of the soil volume \\(Vol_{i}\\) explored by coarse roots of an individual of cohort \\(i\\). Assuming that the proportion of fine roots in each layer is proportional to the proportion of total soil volume explored by coarse roots that corresponds to the same layer we have. \\[\\begin{equation} Vol_{i,s} = FRP_{i,s}\\cdot Vol_{i} \\end{equation}\\] In medfate, coarse roots are represented by axial and radial components. The length of axial component of a given layer (\\(L_{axial, i, s}\\)) is simply equivalent to its bottom depth, whereas the radial component (\\(L_{radial, i, s}\\)) is unknown. However, we can assume that the soil volume explored by coarse roots corresponds to a cylinder: \\[\\begin{equation} Vol_{i,s} = \\pi \\cdot L_{radial,i,s}^2 \\cdot L_{axial, i, s} \\end{equation}\\] and substituting the soil volume \\(Vol_{i,s}\\) we can isolate \\(L_{radial,i,s}\\) (see function root_coarseRootLengthsFromVolume()). Once we have the radial component we can estimate the area (\\(m^2\\)) covered by coarse roots of an individual of the cohort in a given layer \\(s\\): \\[\\begin{equation} Area_{i,s} = \\pi \\cdot L_{radial,i,s}^2 \\end{equation}\\] We can then compare \\(Area_{i,s}\\) to the area of the water pool for an individual of cohort \\(i\\), which in \\(m^2\\) is: \\[\\begin{equation} AreaPool_{i} = 10000 \\cdot f_{pool,i}/N_{i} \\end{equation}\\] If \\(Area_{i,s} \\leq AreaPool_{i}\\), then the roots of the individual do not exceed the area of the pool, in other words \\(fr_{i,s,i} = 1\\) and \\(fr_{i,s,j} = 0\\) for all \\(j \\neq i\\). If \\(Area_{i,s} &gt; AreaPool_{i}\\) then the excess should be counted as overlap with the other pools. Assuming that plants are randomly distributed (i.e. no clumping) the probability of finding the pool of a cohort is equal to the proportion of its water pool (see function root_horizontalProportions()). All these calculations were done assuming \\(Vol_{i}\\) were known. Estimation of \\(Vol_{i}\\) depends on the complexity of the water balance model and is explained in A.1. 2.3.6 Functional traits and vegetation initialization Besides the physical representation of vegetation, forest ecosystem models require information regarding vegetation functioning, because this influences the outcome of biophysical, physiological and hydrological processes. In the following chapters, we will indicate for each simulated process its required functional parameters. Normally, functional traits are described at the species level because infra-specific parameters are hard to get. Even at the species level, many functional (e.g. physiological) traits are hard to obtain, so in medfate we provide a default species parameter table for woody species found in Catalonia, with many of them occurring elsewhere in the Mediterranean Basin (SpParamsMED). Recently, a new parameter data set is being developed for plants in California (SpParamsUS). User can modify these data frames to account for intra-specific trait variation (see function modifySpParams()). The package provides functions spwbInput() and growthInput() that prepare the vegetation input for simulation functions spwb() and growth(), respectively. This initialization mostly consists in compiling the necessary functional traits from the species parameter table, following the \\(SP_i\\) attribute of plant cohorts. Some new model parameters are estimated from the initial ones, while taking into account the structural attributes of cohorts (an example of these derived quantities is stem conductance, which estimated from stem xylem conductivity, Huber value and plant height). Users can take the output of these initialization functions and replace parameter values for specific plant cohorts (see function modifyCohortParams()). 2.3.7 Update of structural variables during simulations Vegetation characteristics stay constant during simulations using functions spwb() or pwb(), although the actual (unfolded) leaf area and dead leaf area may vary if the species is winter deciduous. In contrast, growth simulation requires updating the structure of vegetation, i.e. heights, tree diameters and shrub cover. Function growth() can modify any of the vegetation attributes. 2.4 Metereological input Weather input data must include variables calculated at the daily scale. Weather data should be arranged in a data frame with days in rows and variables in columns. The following table indicates the symbols, units, definitions and the variable name in R. Symbol Units R param Description Basic Advanced \\(T_{mean}\\) \\(^{\\circ} \\mathrm{C}\\) MeanTemperature Mean temperature Y Y \\(T_{min}\\) \\(^{\\circ} \\mathrm{C}\\) MinTemperature Minimum temperature N Y \\(T_{max}\\) \\(^{\\circ} \\mathrm{C}\\) MaxTemperature Maximum temperature N Y \\(RH_{min}\\) % MinRelativeHumidity Minimum relative humidity N Y \\(RH_{max}\\) % MaxRelativeHumidity Maximum relative humidity N Y \\(P\\) \\(L \\cdot m^{-2} = mm\\) Precipitation Precipitation (either rainfall or snow). Y Y \\(PET\\) \\(L \\cdot m^{-2} = mm\\) PET Potential evapotranspiration, preferably calculated using Penman’s (1948) equation Y N \\(Rad\\) \\(MJ \\cdot m^{-2}\\) Radiation Solar radiation after accounting for clouds (opt.) Y \\(u\\) \\(m \\cdot s^{-1}\\) WindSpeed Wind speed Y Y Dates are needed in medfate to estimate parameters like solar declination or the day of the year (\\(DOY\\)). Importantly, dates should be included as row names (in format year-month-day) of the input meteorology data frame. Since it allows producing data frames with appropiate variable units and row/column names, we recommend meteorological input to be generated using package meteoland (De Cáceres et al. 2018), but many other sources are possible. Not all simulation models require all weather variables (see rightmost columns in the previous table). In particular, basic water balance modelling (chapter 3) requires much less information than advance water balance modelling (chapter 7). The weather input requirements for growth modelling (chapter 15) depend on the complexity of the water balance model used within it. Whereas the weather variables listed in the table above are input requirements, medfate derives other atmospheric variables from them, using also topographic information (see utility functions of the meteoland reference manual): Symbol Units R param Description \\(P_{atm}\\) \\(kPa\\) Atmospheric pressure \\(\\rho_{air}\\) \\(kg \\cdot m^{-3}\\) Air density \\(e_{atm}\\) \\(kPa\\) Atmospheric water vapor pressure 2.5 Control parameters Control parameters are a list of global parameter values, initialized using function defaultControl(), that the user can modify to change the general behavior of simulation functions. Here is the set of global control parameters currently accepted in medfate: names(defaultControl()) ## [1] &quot;modifyInput&quot; &quot;verbose&quot; ## [3] &quot;subdailyResults&quot; &quot;transpirationMode&quot; ## [5] &quot;soilFunctions&quot; &quot;defaultWindSpeed&quot; ## [7] &quot;snowpack&quot; &quot;leafPhenology&quot; ## [9] &quot;rockyLayerDrainage&quot; &quot;unlimitedSoilWater&quot; ## [11] &quot;plantWaterPools&quot; &quot;unfoldingDD&quot; ## [13] &quot;verticalLayerSize&quot; &quot;windMeasurementHeight&quot; ## [15] &quot;cavitationRefill&quot; &quot;ndailysteps&quot; ## [17] &quot;nsubsteps&quot; &quot;cochard&quot; ## [19] &quot;capacitance&quot; &quot;taper&quot; ## [21] &quot;multiLayerBalance&quot; &quot;gainModifier&quot; ## [23] &quot;costModifier&quot; &quot;costWater&quot; ## [25] &quot;klatstem&quot; &quot;klatleaf&quot; ## [27] &quot;numericParams&quot; &quot;fracLeafResistance&quot; ## [29] &quot;fracRootResistance&quot; &quot;averageFracRhizosphereResistance&quot; ## [31] &quot;Catm&quot; &quot;thermalCapacityLAI&quot; ## [33] &quot;boundaryLayerSize&quot; &quot;refillMaximumRate&quot; ## [35] &quot;allowDessication&quot; &quot;allowStarvation&quot; ## [37] &quot;allowDefoliation&quot; &quot;sinkLimitation&quot; ## [39] &quot;shrubDynamics&quot; &quot;allocationStrategy&quot; ## [41] &quot;nonStomatalPhotosynthesisLimitation&quot; &quot;phloemConductanceFactor&quot; ## [43] &quot;nonSugarConcentration&quot; &quot;equilibriumOsmoticConcentration&quot; ## [45] &quot;minimumRelativeSugarForGrowth&quot; &quot;respirationRates&quot; ## [47] &quot;turnoverRates&quot; &quot;constructionCosts&quot; ## [49] &quot;maximumRelativeGrowthRates&quot; &quot;mortalityMode&quot; ## [51] &quot;mortalityBaselineRate&quot; &quot;mortalityRelativeSugarThreshold&quot; ## [53] &quot;mortalityRWCThreshold&quot; &quot;recruitmentMode&quot; ## [55] &quot;removeDeadCohorts&quot; &quot;minimumCohortDensity&quot; ## [57] &quot;seedRain&quot; &quot;seedProductionTreeHeight&quot; ## [59] &quot;seedProductionShrubHeight&quot; &quot;minTempRecr&quot; ## [61] &quot;minMoistureRecr&quot; &quot;minFPARRecr&quot; ## [63] &quot;recrTreeDBH&quot; &quot;recrTreeDensity&quot; ## [65] &quot;recrTreeHeight&quot; &quot;recrShrubCover&quot; ## [67] &quot;recrShrubHeight&quot; &quot;recrTreeZ50&quot; ## [69] &quot;recrShrubZ50&quot; &quot;recrTreeZ95&quot; ## [71] &quot;recrShrubZ95&quot; Not all control parameters are relevant to all simulation functions (this will be indicated in the following chapters). However, there are a set of parameters that apply to all simulations: verbose [=TRUE]: Whether extra console output is desired during simulations. modifyInput [= TRUE]: Boolean flag to indicate that simulations will modify the input object. If set to FALSE, simulations will not modify the input R object but return the current (modified) state variables within the output. In function fordyn() option modifyInput is always set to FALSE. subdailyResults [=FALSE]: Boolean flag to force subdaily results to be stored in calls to spwb(). Subdaily results are returned as a list called subdaily of spwb_day objects, one by simulated date. In function fordyn() option subdailyResults is always set to FALSE and, hence, subdaily results are not possible. In addition, there is an important control parameter called transpirationMode, because it allows the user to switch between the basic and advanced water balance models (chapters 3 and 7). Another relevant control parameter is plantWaterPools, which allows considering plant water pools as explained in 2.3.5. Control parameters are employed when initializing vegetation inputs and state variables using functions spwbInput() and growthInput(), since they are needed also to make decisions at the point of initialization. Control parameters are also stored in the result of these functions, so the user does not need to specify again control parameters when calling simulation functions such as spwb() or growth(). Function fordyn() is different than the other simulation functions, because the list control parameters is directly passed to the function. Bibliography "],["basicwaterbalance.html", "Chapter 3 Basic water balance model 3.1 Design principles 3.2 State variables 3.3 Water balance 3.4 Process scheduling 3.5 Inputs and outputs 3.6 Applications", " Chapter 3 Basic water balance model This chapter provides an overview of the water balance model described in De Cáceres et al. (2015), which allows simulating water flows, soil moisture and plant drought stress dynamics on a daily step basis for a given forest stand and for the period corresponding to input weather data. The model is run using function spwb(), for a set of days, or function spwb_day(), for a single day. Alternatively, one can use function pwb() to evaluate plant transpiration and drought stress resulting from given weather and soil moisture dynamics. The information provided in this chapter should be enough to understand what the model does and when it can be useful, but the reading the following ones should provide a more detailed understanding on how the different processes are formulated. 3.1 Design principles The model considers only the vertical spatial dimension of the stand and not the horizontal distribution of plants within it. In other words, the model is not spatially explicit (i.e., plants do not have horizontal coordinates nor interact for space explicitly). Woody vegetation in the stand is divided into groups, here referred to as plant cohorts of different species, height and leaf area index (\\(LAI\\)). Height and \\(LAI\\) values determine competition for light. \\(LAI\\) values also drive competition for soil water, along with fine root distribution. The soil water balance follows the design principles of SIERRA (Mouillot, Rambal, and Lavorel 2001; Ruffault et al. 2014, 2013) and BILJOU (Granier et al. 1999, 2007), although some features are taken from other models (Kergoat 1998). Hydrological processes include water interception loss (Gash, Lloyd, and Lachaud 1995), plant transpiration, evaporation from soil (Ritchie 1972) and the partition between infiltration and runoff (Boughton 1989). Infiltrated water is either retained by capilarity or percolates through soil layers, depending on macroporosity, and water exceeding soil water holding capacity is lost beyond the rooting zone via deep drainage. Snow pack dynamics can also be simulated. Potential evapotranspiration (\\(PET\\)) is a required input and the model determines maximum canopy transpiration (\\(Tr_{\\max}\\)) using an empirical relationship between the \\(LAI\\) of the stand and the ratio \\(Tr_{\\max}/PET\\) (Granier et al. 1999). Actual plant transpiration is estimated using a function that depends not only on \\(Tr_{\\max}\\) but also on current soil moisture levels, cohort-specific drought resistance, fine root distribution and the degree of shading of the target plant cohort. By default, the model assumes that soil moisture under all plant cohorts is the same (i.e. water sources corresponding to vertical soil layers are shared among cohorts). However, variations in soil moisture beneath plant cohorts (and, implicitly, horizontal variation of soil moisture) can be simulated. In this case, hydrological processes are replicated for the fraction of soil corresponding to each cohort. Transpiration of each plant cohort depends on the soil moisture beneath itself and, depending on root overlap, on the soil moisture beneath other plant cohorts. 3.2 State variables The following are state variables in the model under all simulations: Cumulative growth degree days, \\(GDD\\) (in \\(^\\circ C\\)), are tracked by the model and determine leaf phenological status of winter deciduous species. Soil moisture content dynamics on each layer \\(s\\) are tracked daily using \\(W_s = \\theta_s(\\Psi)/ \\theta_{fc,s}\\), the proportion of soil moisture in relation to field capacity, where moisture at field capacity, \\(\\theta_{fc,s}\\), is assumed to correspond to \\(\\Psi_{fc} = -0.033\\) MPa. Note that \\(W_s\\) values larger than one are possible if the soil is between field capacity and saturation (which can happen if deep drainage is not allowed). Additional state variables depend on the activation of specific control flags: If snow accumulation/melting is considered, the model tracks \\(S_{snow}\\), the snow water equivalent (in mm) of the snow pack storage over the surface. If stem cavitation is not completely reversible, the model tracks \\(PLC_{i}\\), the proportion of conductivity lost (representing the maximum value of daily drought stress so far experienced) by plants of cohort \\(i\\). If plant water pools are considered, the model also tracks \\(W_{i,s}\\), the proportion of soil moisture in relation to field capacity for layer \\(s\\) within fraction of stand area covered by cohort \\(i\\). 3.3 Water balance Daily variations in soil water content (\\(\\Delta{V_{soil}}\\) in \\(mm\\)) can be summarized as: \\[\\begin{equation} \\Delta{V_{soil}} = Pr + Sm - In - Ru - Dd - Es -Tr \\tag{3.1} \\end{equation}\\] where \\(Pr\\) is precipitation as rainfall, \\(Sm\\) is water from melting the snow pack (if considered), \\(In\\) is the interception loss (i.e., water evaporated after being intercepted by the canopy), \\(Ru\\) is surface runoff, \\(Dd\\) is deep drainage (i.e. water percolated to layers beyond soil depth), \\(Es\\) is evaporation from soil and \\(Tr\\) is plant transpiration. While the above describes the default water balance equation, variations can occur depending on specific control flags: If snow dynamics are considered, the water balance of the snow pack (\\(\\Delta{S_{snow}}\\) in \\(mm\\) of snow water equivalents) is defined as: \\[\\begin{equation} \\Delta{S_{snow}} = Ps - Sm \\tag{3.2} \\end{equation}\\] where \\(Ps\\) is precipitation as snowfall and \\(Sm\\) is snow melt. Evaporation from bare soil cannot occur if there is a snow pack over the soil (i.e., if \\(S_{snow}&gt;0\\) then \\(Es = 0\\)). If plant water pools are considered, the water balance equation applies not only to the soil of the overall stand but also to the soil beneath each plant cohort. The fraction of stand area covered by each cohort is used to keep the water balance at the two scales aligned. Moreover, the water balances of soils beneath the different plant cohort are more or less correlated depending on root overlap. 3.4 Process scheduling For every day to be simulated, the model performs the following steps: Update leaf area values according to the phenology of species and recalculate light extinction (sections 4.1 and 4.2). If snow dynamics are included, increase snow pack from snow precipitation (\\(Ps\\)) and decrease it following snow melt (\\(Sm\\)) (section 5.2). Determine rainfall interception loss (\\(In\\)) and net rainfall (\\(Pr_{net}\\)) (section 5.3) Increase soil water content due to net rainfall (\\(Pr_{net}\\)), surface runon (\\(Ro\\)) and snow melt (\\(Sm\\)), after accounting for surface runoff (\\(Ru\\)) and deep drainage (\\(Dd\\)) (section 5.4). Decrease soil water content due to bare soil evaporation (\\(Es\\)), if snow is not present (section 5.5). Determine transpiration, photosynthesis and drought stress for each plant cohort and decrease soil water content due to plant transpiration (\\(Tr\\)) (chapter 6). Details of the formulation of each of these processes are provided within the referred chapters and sections. If plant water pools are considered, steps 4-5 are performed for each plant water pool separately, step 6 involves extracting water from different plant water pools depending on the proportion of fine roots of each cohort in each pool (see 6.1.3). 3.5 Inputs and outputs 3.5.1 Soil, vegetation and meteorology Soil Soil input requirements are fully described in section 2.2. Vegetation Vegetation input requirements are fully described in section 2.3. Trees and shrubs do not need to be characterized with different variables in soil water balance calculations, since both kinds of cohorts have a \\(LAI\\) value. In most cases, users only need to estimate the leaf area index corresponding to live leaves, i.e. \\(LAI^{live}\\), because normally at the starting point all leaves are expanded (i.e. \\(LAI^{\\phi} = LAI^{live}\\)) and one can assume no dead leaves in the canopy (i.e., \\(LAI^{dead} = 0\\)). Vegetation characteristics stay constant during simulations using function spwb(), although the actual expanded leaf area (\\(LAI^{\\phi}\\)) and dead leaf area (\\(LAI^{dead}\\)) may vary is the species is winter deciduous. Meteorology The minimum daily weather variables required to run the model are mean temperature (\\(T_{mean}\\)), precipitation (\\(P\\)) and potential evapotranspiration (\\(PET\\)). Solar radiation (\\(Rad\\)) is required if snow pack dynamics have to be simulated. Additionally, the user may also specify values of wind speed (\\(u\\)) that are used to control leaf fall in autumn. Definitions and units of these variables are given in section 2.4. 3.5.2 Vegetation functional parameters A relatively small set of functional parameters should be supplied for each plant cohort \\(i\\). A first set of parameters relate to light extinction and water interception (paramsInterception): Symbol Units R Description \\(k_{PAR,i}\\) kPAR PAR extinction coefficient (see section 4.2). \\(s_{water, i}\\) \\(mm\\,H_2O·LAI^{-1}\\) g Crown water storage capacity (i.e. depth of water that can be retained by leaves and branches) per LAI unit (see section 5.3). A second set refers to leaf phenology (paramsPhenology): Symbol Units R Description PhenologyType Leaf phenology type (oneflush-evergreen, progressive-evergreen, winter-deciduous, winter-semideciduous) \\(LD\\) years LeafDuration Average duration of leaves (in years). \\(S^*_{eco,i}\\) \\(^{\\circ} \\mathrm{C}\\) Sgdd Degree days corresponding to leaf budburst (see section 4.1.2). \\(T_{eco}\\) \\(^{\\circ} \\mathrm{C}\\) Tbgdd Base temperature for the calculation of degree days to leaf budburst (see section 4.1.2). \\(S^*_{sen,i}\\) \\(^{\\circ} \\mathrm{C}\\) Ssen Degree days corresponding to leaf senescence (see section 4.1.3). \\(Ph_{sen}\\) hours Phsen Photoperiod corresponding to start counting senescence degree-days (see section 4.1.3). \\(T_{sen}\\) \\(^{\\circ} \\mathrm{C}\\) Tbsen Base temperature for the calculation of degree days to leaf senescence (see section 4.1.3). A second set of parameters are related to transpiration and photosynthesis (paramsTranspiration): Symbol Units R Description \\(T_{max, LAI}\\) Tmax_LAI Empirical coefficient relating LAI with the ratio of maximum transpiration over potential evapotranspiration (see section 6.1.1). \\(T_{max, sqLAI}\\) Tmax_LAIsq Empirical coefficient relating squared LAI with the ratio of maximum transpiration over potential evapotranspiration (see section 6.1.1). \\(\\Psi_{extract,i}\\) \\(MPa\\) Psi_Extract The water potential at which plant transpiration is 50% of its maximum (see section 6.1.2). \\(\\Psi_{critic,i}\\) \\(MPa\\) Psi_Critic The water potential corresponding to 50% of cavitation (see section 6.2.2). \\(WUE_{\\max,i}\\) \\(g\\, C \\cdot mm^{-1}\\) WUE Maximum water use efficency (see section 6.1.4). \\(K_{rootdisc,i}\\) [0-1] pRootDisc Whole-plant relative transpiration corresponding to hydraulic disconnection from the soil (see section 6.2.2). Vegetation functional attributes are normally filled for each cohort \\(i\\) by function spwbInput() or forest2spwbInput() from species identity (i.e. \\(SP_i\\)). However, different parameters can be specified for different cohorts of the same species if desired (see section 2.3.6). 3.5.3 Control parameters Control parameters modulate the overall behaviour of water balance simulations (see section 2.5). Most importantly, transpirationMode defines the transpiration model, which in turn defines the complexity of the water balance model. If transpirationMode = \"Granier\" (the default value) then the basic water balance model is used. The other control parameters for the basic water balance model are: soilFunctions [=\"SX\"]: Soil water retention curve and conductivity functions, either ‘SX’ (for Saxton) or ‘VG’ (for Van Genuchten). defaultWindSpeed [= 2.5]: Default value for wind speed (in \\(m \\cdot s^{-1}\\)) when this is missing (only used for leaf fall, see section 4.1). snowpack [= TRUE]: Whether dynamics of snow pack are included (see section 5.2). leafPhenology [ = TRUE]: Whether leaf phenology is simulated (see section 4.1). If FALSE then all species are assumed to be evergreen. rockyLayerDrainage [= TRUE]: Whether water exceeding the field capacity of the deepest layer can be drained via macropore flow towards a non-reachable compartment, only for layers with &gt; 95% rocks (see section 5.4). unlimitedSoilWater [=FALSE]: Boolean flag to indicate the simulation of plant transpiration assuming that soil water is always at field capacity. unfoldingDD [= 300]: Degree-days for complete leaf unfolding after budburst has occurred (\\(S_{unf}^*\\); see section 4.1.2). plantWaterPools [=FALSE]: Boolean flag to indicate the simulation of water balance assuming that each cohort has its own water pools. verticalLayerSize [= 100]: Size of vertical layers (in cm) for the calculation of light extinction (see section 2.3.3). windMeasurementHeight [ = 200]: Height (in cm) over the canopy corresponding to wind measurements. cavitationRefill [= \"total\"]: A string indicating how refilling of embolized conduits is done (see section 6.2.2. Allowed values are: \"none\" - no refilling. \"annual\" - every first day of the year. \"total\" - instantaneous complete refilling. 3.5.4 Model output Functions spwb() and pwb() return a list of a class with the same name. The first four elements of this list (i.e., latitude, topography, spwbInput and soilInput) are simply copies of model inputs. The next four elements correspond to water balance flows, soil state variables, stand-level variables, and plant-level variables: Element Description WaterBalance Climatic input and water balance flows (i.e. net precipitation, infiltration, runoff, transpiration…). All of them in \\(mm = l \\cdot m^{-2}\\). Soil Soil variables for each soil layer: Moisture relative to field capacity (\\(W_s\\)), water potential (\\(\\Psi_s\\)) and volumetric water content (\\(V_s\\)). Stand Stand-level variables, such as \\(LAI^{\\phi}_{stand}\\), \\(LAI^{dead}_{stand}\\), the water retention capacity of the canopy (\\(S_{canopy}\\)) or the fraction of light reaching the ground (\\(L^{PAR}_{ground}\\) and \\(L^{SWR}_{ground}\\)). Plants Plant-level variables, such as \\(LAI^{phi}_i\\), plant transpiration, plant water potential, etc. Elements WaterBalance, Soil and Stand are data frame with dates in rows and variables in columns, whereas Plants is itself a list with several elements, with dates in rows and plant cohorts in columns: Element Symbol Units Description LAI \\(LAI^{\\phi}_i\\) \\(m^2 \\cdot m^{-2}\\) Leaf area index (expanded). AbsorbedSWRFraction \\(f_i\\) [0-1] Fraction of shortwave radiation absorbed. Transpiration \\(Tr_{i}\\) \\(mm\\) Transpiration per ground area. Photosynthesis \\(A_{n,i}\\) \\(g\\,C \\cdot m^{-2}\\) Net photosynthesis per ground area. PlantPsi \\(\\Psi_{leaf,i}\\) \\(MPa\\) Plant water potential. StemPLC \\(PLC_{i}\\) [0-1] Degree of stem embolisation. PlantStress \\(DDS_i\\) [0-1] Drought stress level suffered by each plant cohort (relative whole-plant transpiration). The output of simulations can be inspected using plot and summary functions specific to spwb objects (examples are given in the corresponding package vignette). As it simulates water balance for only one day, function spwb_day() returns a much more reduced output. This function is most useful with advanced water balance modelling (chapter 7). 3.6 Applications The basic water balance model is relatively easy to parametrize and use. Moreover, the model is quite fast. These features make it appropriate for applications that do not seek a high predictive at the plant level, but require robust estimates at the stand, landscape or regional levels. In our opinion the basic water balance model may be useful for the following applications: To monitor or forecast temporal variation in transpiration flows and soil water content in particular stands or in multiple stands across a landscape or region. Monitor or forecast temporal variation of plant drought stress in particular stands or in multiple stands across a landscape or region (for example to anticipate mortality events). For example, Karavani et al. (2018) employed the water balance to provide sound estimates of soil moisture dynamics to predict mushroom production in a network forest stands. The model is particularly interesting to test the relationship between forest structure/composition and the water balance at the stand level or the drought stress suffered by plants, as done in Ameztegui et al. (2017). See also another application in Rolo and Moreno (2019). Bibliography "],["leafphenologylight.html", "Chapter 4 Leaf phenology and light extinction 4.1 Leaf phenology 4.2 Light extinction", " Chapter 4 Leaf phenology and light extinction Leaf phenology determines seasonal variations in the surface area of leaves, hence influencing the energy and water exchange between plants and the atmosphere. Light extinction is an important process to consider in a model where plants have different heights. 4.1 Leaf phenology 4.1.1 Phenological types and leaf expanded area Plant species can have either progressive evergreen, one-flush evergreen, winter-deciduous or winter semi-deciduous leaf phenology (see Fig. 4.1). Progressive evergreen plants are assumed to shed old leaves at the same time as new leaves appear, so that the leaf area remains constant throughout the year. One-flush evergreen plants concentrate leaf unfolding and leaf senescence during similar periods, so that leaf area is also approximately constant year-round. In winter-deciduous plants, leaf shedding and leaf bud formation occurs in autumn. Buds remain under dormancy until spring, when budburst and unfolding occurs. The difference between semi-deciduous and deciduous plants is that the former retain dead leaves in the plant until next season unfolding period, so that leaf fall is retarded. Figure 4.1: Schematic representation of leaf phenology types Evergreen plants thus maintain constant leaf area over the year, whereas in deciduous plants leaf-expanded status is updated daily, represented by \\(\\phi_i\\), the fraction of maximum leaf area: \\[\\begin{equation} LAI_{i}^{\\phi}=LAI^{live}_i\\,\\cdot\\phi_i \\end{equation}\\] whereas for evergreen species \\(LAI_{i}^{\\phi}=LAI^{live}_i\\) (or equivalently \\(\\phi_i = 1\\) at all times). The general structure of process based phenological models explained in Chuine et al. (2013). These models aim determine, for a given phenological phase \\(n\\) (endodormancy, ecodormancy, maturation, etc), the day of its finalisation \\(d_n\\), such that the following equation holds: \\[\\begin{equation} S_{n,d} = \\sum_{d_{n-1}}^{d_n} R_{n,d} = S_n^* \\end{equation}\\] where \\(S_{n,d}\\) is the state of development on day \\(d\\) in phase \\(n\\), and \\(d_{n-1}\\) is the end of the previous phase. \\(R_{n,d}\\) is the rate of development during phase \\(n\\) on day \\(d\\), which depends on environmental variables (temperature, photoperiod,…) and \\(S_n^*\\) is the critical threshold to achieve the change of phase. In the water balance model leaf area index (\\(LAI\\)) values of winter (semi-)deciduous plants are adjusted for leaf phenology following a leaf development model in spring and a leaf senescence model in autumn. Function pheno_updateLeaves() updates the status of expanded leaves and dead leaves in a simulation object. 4.1.2 Bud burst and leaf unfolding Transition from ecodormancy to bud burst is estimated using a very simple one-phase ecodormancy model (also called the spring warming model) implemented in function pheno_leafDevelopmentStatus(). Given a base temperature (\\(T_{eco}\\), in \\(^{\\circ}\\mathrm{C}\\)), the rate of development during the ecodormancy phase (\\(R_{eco}\\), in \\(^{\\circ} \\mathrm{C}\\)) is zero for those days where mean temperature \\(T_{mean}\\) is below \\(T_{eco}\\) and \\(T_{mean} - T_{eco})\\) for those days where temperatures become warmer than this threshold: \\[\\begin{eqnarray} R_{eco,d}(T_d) &amp;=&amp; 0 \\,\\, &amp;if&amp; \\,\\, T_d \\leq T_{eco} \\\\ &amp;=&amp; T_d - T_{eco} \\,\\, &amp;if&amp; \\,\\, T_d &gt; T_{eco} \\\\ \\end{eqnarray}\\] Daily \\(R_{eco,d}\\) values are added to the cumulative sum \\(S_{eco,d}\\) and budburst occurs when \\(S_{eco,d} &gt; S_{eco}^*\\). Both \\(T_{eco}\\) and \\(S_{eco}^*\\) are plant-specific parameters in spwbInput. After budburst, we model progressive leaf unfolding in a similar manner, by accumulating degree days using the same definition as for \\(R_{eco,d}\\): \\[\\begin{eqnarray} R_{unf,d} &amp;=&amp; R_{eco,d} \\\\ \\end{eqnarray}\\] and then defining an unfolding development status \\(S_{unf,d} = \\sum_{d,eco}^{d} R_{unf,d}\\), which we use to determine \\(\\phi_{i,d}\\), the degree of leaf expansion of cohort \\(i\\) at day \\(d\\): \\[\\begin{equation} \\phi_{i,d} = S_{unf,d}/S_{unf}^* \\end{equation}\\] until \\(S_{unf}^*\\) is reached and the unfolding process ends, where \\(S_{unf}^*\\) is a simulation control parameter unfoldingDD. 4.1.3 Leaf senescence Leaf senescence follows the models developed by Delpierre et al. (2009). The daily rate of development of senescence \\(R_{sen,d}\\) is defined on the basis of daily photoperiod (\\(Ph_{d}\\), in hours) and temperature (\\(T_d\\), in \\(^{\\circ} \\mathrm{C}\\)): \\[\\begin{eqnarray} R_{sen,d}(Ph_d, T_d) &amp;=&amp; 0 \\,\\, &amp;if&amp; \\,\\, T_d \\geq T_{sen} \\,\\, or \\,\\, Ph_d&gt;Ph_{sen} \\\\ &amp;=&amp; (T_d - T_{sen})^2 \\cdot (Ph_d/Ph_{sen})^2 \\,\\, &amp;if&amp; \\,\\, T_d &lt; T_{sen} \\,\\,and \\,\\, Ph_d&lt;Ph_{sen}\\\\ \\end{eqnarray}\\] where \\(Ph_{sen}\\) is the maximum photoperiod to start counting the senescence. The state of development of senescence \\(S_{sen,d}\\) is defined \\[\\begin{equation} S_{sen,d} = \\sum R_{sen,d} \\end{equation}\\] and when \\(S_{sen,d} = S_{sen}^*\\) then expanded leaves are assumed to suddenly die. This model is implemented in function pheno_leafSenescenceStatus() and returns \\(\\phi_{i,d}=1\\) for all days until \\(S_{sen,d} = S_{sen}^*\\) when it returns \\(\\phi_{i,d}=0\\). Parameters \\(T_{sen}\\), \\(Ph_{sen}\\) and \\(S_{sen}^*\\) are plant-specific parameters in spwbInput. 4.1.4 Leaf absission The drop of \\(\\phi_i\\) causes live expanded leaves to become dead leaves. To avoid a sudden decrease of leaf area, dead leaves are kept in the canopy and they are reduced daily using a negative exponential function of wind speed: \\[\\begin{equation} LAI^{dead}_i=LAI^{dead}_i\\,\\cdot e^{- u/10} \\end{equation}\\] where \\(u\\) is wind speed in (\\(m \\cdot s^{-1}\\)). 4.2 Light extinction The proportion of photosynthetically active radiation (PAR) and short-wave radiation (SWR; 400-3000 nm) decreases through the canopy following the Beer-Lambert’s light extinction equation. \\(L^{PAR}_{ground}\\), the proportion of PAR that reaches the ground, is calculated as: \\[\\begin{equation} L^{PAR}_{ground}=e^{-\\sum_{i=1}^{c}{k_{PAR,i} \\cdot LAI_{i}^{all}}} \\end{equation}\\] where \\(k_{PAR,i}\\) is the PAR extinction coefficient of cohort \\(i\\). The proportion of short-wave radiation (SWR) energy absorbed by each plant cohort needs to be calculated to divide the transpiration of the stand among cohorts (chapter 6), and the radiation absorbed by the soil is needed to calculate soil evaporation (section 5.5). Foliage absorbs a higher proportion of PAR than SWR; thus, the extinction coefficient is higher for PAR than for SWR. However, values for the ratio of extinction coefficients are rather constant. Following Friend et al. (1997) it is assumed that the extinction coefficient for PAR is 1.35 times larger than that for SWR (i.e. \\(k_{SWR,i} = k_{PAR,i}/1.35\\)). Figure 4.2 shows the PAR and SWR extinction profiles (see functions vprofile_PARExtinction() and vprofile_SWRExtinction()) corresponding to the leaf area density distribution of Fig. 2.2. Figure 4.2: Light extinction in a forest stand. Note the sharper decrease of PAR (left panel) in comparison to SWR (right panel) To calculate radiation absorption, where the vertical dimension of the plot is divided into layers (as explained in 2.3.3), and the SWR absorbed is calculated for each plant cohort in each layer. Let \\(l\\) be the number of vertical layers. The fraction of radiation incident on layer \\(j\\) that is absorbed in the same layer is: \\[\\begin{equation} f_j=1 - e^{-\\sum_{i=1}^{c}{k_{SWR,i} \\cdot LAI_{i,j}^{all}}} \\end{equation}\\] where \\(LAI_{i,j}^{all}\\) is the leaf area index of cohort \\(i\\) in layer \\(j\\). Hence, the fraction transmitted is \\((1-f_j)\\). The fraction of radiation incident on layer \\(j\\) that is absorbed by expanded leaves of plant cohort \\(i\\) in that layer (\\(f_{ij}\\)) is calculated from the relative contribution of these leaves to the total absorption in the layer: \\[\\begin{equation} f_{ij} = f_j \\cdot \\frac{k_{SWR,i}\\cdot LAI_{i,j}^{\\phi}}{\\sum_{h=1}^{c}{k_{SWR,h} \\cdot LAI_{h,j}^{all}}} \\end{equation}\\] The fraction of canopy radiation absorbed by a plant cohort \\(i\\) across all layers is found by adding the fraction absorbed in each layer: \\[\\begin{equation} f_i = \\sum_{j=1}^{l}{f_{ij}\\cdot \\prod_{h&gt;j}^{l}{(1-f_h)}} \\end{equation}\\] where for each layer the fraction of the radiation incident in the canopy that reaches the layer is found by multiplying the transmitted fractions across the layers above it. For example, the fraction of SWR absorbed by each of the three cohorts of the example in Fig. 2.2 would be (see function light_cohortAbsorbedSWRFraction()): ## T1_54 T2_68 S1_65 ## 0.2337175 0.2323627 0.0103770 The proportion of (shortwave) net radiation absorbed by the ground is simply: \\[\\begin{equation} L^{SWR}_{ground} = 1 - \\sum_{j}^{l}{f_j} \\end{equation}\\] which in our example would be: ## [1] 0.5235428 as also shown in Fig. 4.2. Bibliography "],["hydrology.html", "Chapter 5 Forest hydrology 5.1 Snow and rainfall 5.2 Snow pack dynamics 5.3 Rainfall interception loss 5.4 Runoff, infiltration and percolation 5.5 Bare soil evaporation", " Chapter 5 Forest hydrology Forest hydrological processes are key for soil and plant water balances. This chapter details the design and implementation of most of the vertical hydrological processes included in package medfate. These processes determine the value of the water flows mentioned in eq. (3.1). The only process that is not described here is plant transpiration (\\(Tr\\)), as it will be covered in detail in chapter 6. Although each process can be simulated in specific sub-model functions, function hydrology_verticalInputs() allows simulating soil water input processes altogether, including canopy water interception, snow accumulation/melt, soil infiltration and percolation. 5.1 Snow and rainfall Precipitation (\\(P\\)) is considered be snow precipitation (\\(Ps\\)) when \\(T_{mean}&lt;0\\), and is considered rainfall (\\(Pr\\)) otherwise. Thus, we have: \\[\\begin{equation} P = Pr + Ps \\end{equation}\\] Interception of snow by the canopy is neglected, and all snow is assumed to accumulate in a single storage compartment \\(S_{snow}\\) over the soil (i.e. canopy snow storage capacity is neglected). Rainfall interception is described in section 5.3. 5.2 Snow pack dynamics A very simple snow submodel is used for snow pack dynamics (accumulation and melt), taken from Kergoat (1998). When mean air temperature is above 0 Celsius (\\(T_{mean}&gt;0\\)), a simple energy budget relates snow melt, \\(Sm\\) (mm), to air temperature and soil-level radiation (see function hydrology_snowMelt()): \\[\\begin{equation} Sm = \\frac{Rad\\cdot L^{SWR}_{ground}\\cdot (1-\\alpha_{ice}) + \\tau_{day} \\cdot T_{mean} \\cdot \\rho_{air} \\cdot C_p/r_{s}}{\\lambda_{ice}} \\end{equation}\\] where \\(Rad\\) is solar radiation (\\(MJ \\cdot m^{-2}\\)), \\(L^{SWR}_{ground}\\) is the fraction of (short-wave) radiation reaching the ground, \\(\\alpha_{ice} = 0.9\\) is the albedo of snow, \\(\\tau_{day} = 86400\\) is the day duration in seconds, \\(\\rho_{air}\\) is the air density (\\(kg \\cdot m^{-3}\\)), depending on temperature and elevation (see utility functions of the meteoland reference manual), \\(C_{p} = 1013.86 \\cdot 10^{-6}\\, MJ \\cdot kg^{-1} \\cdot C^{-1}\\) is the specific heat capacity of the air and \\(r_{s} = 100\\,s \\cdot m^{-1}\\) is the snow aerodynamic resistance and \\(\\lambda_{ice} = 0.33355\\, MJ \\cdot kg\\) is the (latent) heat of fusion of snow. 5.3 Rainfall interception loss As mentioned above, interception loss is only modelled for liquid precipitation (i.e. snow interception is not modelled). Rainfall interception loss, \\(In\\), is estimated using the Gash, Lloyd, and Lachaud (1995) analytical interception model for sparse canopies, where rain is assumed to fall in a single event during the day. First, the amount of rainfall needed to saturate the canopy is calculated: \\[\\begin{equation} P_G = - \\frac{S_{canopy}/C_{canopy}}{ER_{ratio}} \\cdot \\ln(1-ER_{ratio}) \\end{equation}\\] where \\(S_{canopy}\\) is the canopy water storage capacity (in \\(mm\\)) – i.e. the minimum amount of water needed to saturate the canopy –, \\(C_{canopy}\\) is the canopy cover and \\(ER_{ratio}\\) is the ratio of evaporation rate to rainfall rate during the rainfall event. Although interception models are normally applied to single-canopy stands, we apply the sparse Gash model to the whole stand (including shrubs). Moreover, in our implementation stem interception is lumped with canopy interception, so that \\(S_{canopy}\\) represents both. Following Watanabe and Mizutani (1996) we estimate \\(S_{canopy}\\), the canopy water storage capacity, from adjusted LAI values: \\[\\begin{equation} S_{canopy}=\\sum_{i}{s_{water,i}\\cdot LAI_{i}^{\\phi}} \\end{equation}\\] where \\(s_{water,i}\\) is the depth of water that can be retained by leaves, branches and stems of cohort \\(i\\) per unit of leaf area index (\\(mm \\cdot LAI^{-1}\\)). To estimate the stand cover, \\(C_{canopy}\\), we use the complement of the percentage of PAR that reaches the ground, i.e. \\(C_{canopy} = 1 - L^{PAR}_{ground}\\) (Deguchi, Hattori, and Park 2006). Simplifying assumptions are made to determine \\(ER_{ratio}\\). Values of the evaporation-to-rainfall ratio are calculated from daily potential evapotranspiration and rainfall, while accounting for seasonal variation in rainfall intensity (\\(mm \\cdot h^{-1}\\)). Minimum values for rainfall intensity are assumed for convective storms (\\(5.6\\,mm \\cdot h^{-1}\\)) and synoptic storms (\\(1.5\\,mm \\cdot h^{-1}\\)) from Miralles et al. (2010). Synoptic storms are assumed between December and June, and convective storms are assumed for the remaining months, as typical in the Mediterranean Basin. The amount of water evaporated from interception (\\(In\\), in \\(mm\\)), is calculated as: \\[\\begin{eqnarray} In = C_{canopy}\\cdot P_G+C_{canopy}\\cdot ER_{ratio}\\cdot(Pr-P_G) \\: {if}\\: Pr &gt; P_G \\\\ In = C_{canopy}\\cdot Pr\\: {if}\\: Pr \\leq P_G \\end{eqnarray}\\] where \\(Pr\\) is the daily gross rainfall (in \\(mm\\)). Net rainfall (\\(Pr_{net}\\), also in \\(mm\\)) includes throughfall and stemflow, and is calculated as the difference between gross rainfall and interception loss. Fig. 5.1 below shows examples of relative throughfall (including stemflow), calculated according to the Gash et al (1995) interception model, under different situations (see function hydrology_rainInterception()). Figure 5.1: Examples of canopy interception with different \\(S_{canopy}\\) (canopy water storage capacity), \\(ER_{ratio}\\) (ratio between evaporation and rainfall rates) and \\(p\\) (throughfall coefficient; \\(p = 1 - C_{canopy}\\)). 5.4 Runoff, infiltration and percolation The amount of water that reaches the soil is the sum of net rainfall (\\(Pr_{net}\\)), runon (\\(Ro\\), in \\(mm\\)) and melted snow (\\(Sm\\)). The amount of water infiltrating into the soil is \\(Pr_{net} + Sm + Ro - Ru\\), where \\(Ru\\) (in \\(mm\\)) is the water lost by surface runoff (see function hydrology_infiltrationAmount()). Surface runoff, is calculated using the USDA SCS curve number method, as in Boughton (1989): \\[\\begin{equation} Ru=\\frac{(Pr_{net} + Ro + Sm - 0.2 \\cdot V_{fc, soil})^2}{(Pr_{net} + Ro + Sm - 0.8 \\cdot V_{fc, soil})} \\end{equation}\\] where \\(V_{fc, soil}\\) (in mm) is the overall soil water retention capacity. Following Granier et al. (1999), part of the water reaching one soil layer percolates quickly through the macropores. The amount of water reaching each layer through macropores is modelled using an extinction function that depends on macroporosity (see function hydrology_infiltrationRepartition). The remaining water is retained by the micropores refilling the current soil layer. When this soil layer reaches its field capacity the excess of water also percolates to the soil layer below. Figure 5.2: Examples of infiltration/runoff calculation for different values of net rainfall and overall retention capacity, \\(V_{soil}\\), calculated from different soil depths (topsoil+subsoil) and assuming that soil texture is 15% clay and 25% sand. Rock fragment content was 25% and 40% for the topsoil and subsoil, respectively. Percolation in deepest layer may be treated differently in the model. If it is a rocky layer (i.e if rock fragment content &gt; 95%) and rockyLayerDrainage = FALSE, the model assumes that most cracks in the rock are not hydraulically connected to groundwater, so that they conform water pockets from which plants can extract water. Hence, in this situation the percolation excess occurs only if saturation is surpassed. Otherwise, percolation excess is estimated if field capacity is surpassed, as in the other soil layers. When a percolation excess exists, the remaining water fills soil layers over field capacity up to saturation, from bottom to top. If the soil becomes saturated and there is still an excess of water, this is assumed as infiltration excess and added to the surface runoff (\\(Ru\\)). Deep drainage (\\(Dd\\)) is estimated after percolation of soil water inputs. First, hydraulic head is estimated summing the amount of water contained in macropores across soil layers (i.e. water over field capacity). Then, an estimation of the daily maximum drainage is obtained by multiplying hydraulic head by the saturated vertical hydraulic conductivity \\(K_{drain}\\). Drainage of saturated water is then applied from top to bottom until the maximum drainage is achieved or macropores are empty in all soil layers. As before, the drainage from the deepest rocky layer may be prevented if rockyLayerDrainage = FALSE. 5.5 Bare soil evaporation Evaporation from the soil surface is the last component of the soil water balance to be calculated before calculating plant transpiration. Bare soil evaporation cannot happen if there is snow over the soil surface (i.e., if \\(S_{snow}&gt;0\\)). Potential evaporation from the soil (\\(PE_{soil}\\); in \\(mm \\cdot day^{-1}\\)) is defined as the product between \\(PET\\) and \\(L^{SWR}_{ground}\\), the proportion of SWR absorbed by the ground: \\[\\begin{equation} PE_{soil} = PET \\cdot L^{SWR}_{ground} \\end{equation}\\] Actual evaporation from the soil surface is modeled as in Mouillot, Rambal, and Lavorel (2001), who in turn followed Ritchie (1972). First, the model determines \\(t_{soil}\\), the time needed to evaporate the current water deficit (difference between field capacity and current moisture) in the surface soil layer: \\[\\begin{equation} t_{soil} = \\left \\{ \\frac{V_{fc,1}\\cdot(1- W_1)}{\\gamma_{soil}} \\right \\} \\end{equation}\\] where \\(V_{fc,1}\\) is the water retention capacity of layer 1, \\(W_1\\) is the proportion of moisture in relation to field capacity of layer 1 and \\(\\gamma_{soil}\\) is the maximum daily evaporation (\\(mm \\cdot day^{-1}\\)). The calculated time is used to determine the ‘supplied’ evaporation, \\(SE_{soil}\\): \\[\\begin{equation} SE_{soil} = \\gamma_{soil} \\cdot (\\sqrt{t_{soil}+1}-\\sqrt{1}) \\end{equation}\\] The amount of water actually evaporated from the soil, \\(Es\\), is then calculated as the minimum between supply, \\(SE_{soil}\\), and demand (Federer 1982), i.e. \\(PE_{soil}\\) (see function hydrology_soilEvaporationAmount): \\[\\begin{equation} Es = \\min(PE_{soil}, SE_{soil}) \\end{equation}\\] Finally, \\(Es\\) is distributed along the soil profile according to an exponential decay function with an extinction coefficient \\(\\kappa_{soil}\\) (Mouillot, Rambal, and Lavorel 2001). Figure 5.3 shows the cumulative evaporation from soils for different values of maximum evaporation rate and extinction coefficient. When the extinction coefficient is smaller a higher proportion of the evaporated water is removed from the subsoil and less from the topsoil. This causes more water being available to calculate \\(t\\) in the next step. Figure 5.3: Cumulative bare soil evaporation for different values of maximum evaporation rate (\\(\\gamma_{soil}\\)) and extinction coefficient (\\(\\kappa_{soil}\\)). Three soil layers (0 – 30 cm; 30 – 150 cm; 150 – 400 cm) are initialized at field capacity (\\(V_1 = 50 mm\\); \\(V_2 = 201 mm\\); \\(V_3 = 35 mm\\)). \\(PE_{soil}\\) was assumed not to be limiting. Bibliography "],["transpirationgranier.html", "Chapter 6 Transpiration, photosynthesis and drought stress under Granier’s model 6.1 Plant transpiration and photosynthesis 6.2 Plant drought stress", " Chapter 6 Transpiration, photosynthesis and drought stress under Granier’s model This chapter describes how daily plant transpiration is modelled in the basic water balance model, completing the flows needed to evaluate eq. (3.1). The model uses the approach of BILJOU (Granier et al. 1999) to estimate stand maximum transpiration, and then divides this value among the contribution of plant cohorts and estimate actual transpiration depending on soil moisture and cohort functional parameters, which determine plant drought. The chapter also describes how is daily photosynthesis estimated, a process that in this model does not influence transpiration but is necessary for growth calculations (chapter 15). 6.1 Plant transpiration and photosynthesis 6.1.1 Maximum transpiration Potential evapotranspiration (\\(PET\\), in \\(mm\\)) is assumed to represent open water evaporation potential. Maximum canopy transpiration \\(Tr_{\\max}\\) depends on both \\(PET\\) and the amount of transpirating surface, i.e. the current cumulative \\(LAI\\) of the stand, \\(LAI^{\\phi}_{stand}\\). To estimate \\(Tr_{\\max}\\) the model uses the empirical equation of Granier et al. (1999), where \\(Tr_{\\max}/PET\\) is a function of \\(LAI^{\\phi}_{stand}\\): \\[\\begin{equation} \\frac{Tr_{\\max}}{PET}= -0.006\\cdot (LAI^{\\phi}_{stand})^2+0.134\\cdot LAI^{\\phi}_{stand}+0.036 \\end{equation}\\] This equation has already been adopted for Mediterranean biomes (Fyllas and Troumbis 2009; Ruffault et al. 2013). Figure 6.1: Empirical relationship between \\(Tr_{\\max}/PET\\) and \\(LAI^{\\phi}_{stand}\\) Since medfate’s ver. 2.1, empirical coefficients can be species-specific and Granier et al. (1999) empirical equation has been generalized to: \\[\\begin{equation} \\frac{Tr_{\\max}}{PET}= T_{max,LAI} \\cdot LAI^{\\phi}_{stand} + T_{max,sqLAI} \\cdot (LAI^{\\phi}_{stand})^2 \\end{equation}\\] where \\(T_{max,LAI}\\) and \\(T_{max,sqLAI}\\) are species-specific parameters (if missing, they are given default values 0.134 and -0.006, respectively). The maximum transpiration for a given plant cohort \\(i\\) is calculated as the portion of \\(Tr_{\\max}\\) defined by \\(f_i\\) the fraction of total absorbed SWR that is due to cohort \\(i\\) (see section 4.2): \\[\\begin{equation} Tr_{\\max, i} = Tr_{\\max} \\cdot \\frac{f_i}{\\sum_{j}{f_j}} \\end{equation}\\] 6.1.2 Actual plant transpiration Actual plant transpiration depends on soil moisture and is calculated for each plant cohort and each soil layer separately. \\(Tr_{i,s}\\) (in \\(mm\\)) represents the transpiration made by cohort \\(i\\) from layer \\(s\\). Actual plant transpiration from a given layer is regulated by soil moisture and the resistance to water flow through the plant. For each plant cohort \\(i\\) and soil layer \\(s\\), the model first estimates the a whole-plant relative water transpiration, \\(K_{i,s}\\), which varies between 0 and 1 depending on \\(\\Psi_{extract,i}\\), the potential at which transpiration is 50% of maximum, and \\(\\Psi_s\\), the water potential in layer \\(s\\). This relationship is modelled using a Weibull function (see function hydraulics_psi2K()): \\[\\begin{equation} K_{i,s}=K_{i}(\\Psi_s) = \\exp \\left \\{\\ln{(0.5)}\\cdot \\left[ \\frac{\\Psi_s}{\\Psi_{extract,i}} \\right] ^r \\right \\} \\tag{6.1} \\end{equation}\\] where \\(r\\) is an exponent that modulates the steepness of the decrease in relative conductance when soil potential becomes negative (by default, \\(r = 3\\)) and \\(\\ln(0.5)\\) is used to ensure that \\(K_{i}(\\Psi_{extract,i}) = 0.5\\) (Fig. 6.2). Figure 6.2: Whole-plant relative water conductance functions for different water potential values (\\(r = 3\\) in all cases) Actual transpiration of plant cohort \\(i\\) from a given soil layer \\(s\\), \\(Tr_{i,s}\\), is defined as the product of (Mouillot, Rambal, and Lavorel 2001): the maximum transpiration of the plant cohort (\\(Tr_{\\max,i}\\)), the relative whole-plant transpiration (\\(K_{i,s}\\)) corresponding to the species and water potential in layer \\(s\\), and the proportion of plant fine roots in layer \\(s\\), \\(FRP_{i,s}\\): \\[\\begin{equation} Tr_{i,s} = Tr_{\\max,i} \\cdot K_{i,s} \\cdot FRP_{i,s} \\end{equation}\\] The total amount of water transpired by plants, \\(Tr\\) (in \\(mm\\)), is the sum of \\(Tr_{i,s}\\) values over all plant cohorts and soil layers: \\[\\begin{equation} Tr =\\sum_{s}\\sum_{i}{Tr_{i,s}} \\end{equation}\\] Assuming no water limitations (i.e. \\(K_{i,s} = 1\\)), we have that \\(Tr = Tr_{\\max}\\). Total stand transpiration will be lower than \\(Tr_{\\max}\\) if soil water potential in any layer is negative enough to cause a significant reduction in whole-plant conductance. At the plant level, the transpiration of a given plant cohort will be lower than that of others if: The cohort is under the shade (it reduces \\(f_i\\) and hence \\(Tr_{\\max,i}\\)) The cohort has a lower amount of leaf area (it reduces \\(f_i\\) and hence \\(Tr_{\\max,i}\\)) The soil layers exploited by the cohort have more negative water potentials (it reduces \\(K_{i,s}\\)). 6.1.3 Transpiration with plant water pools Considering plant water pools (i.e. setting plantWaterPools = TRUE in the control parameters) involves partitioning the stand area into fractions corresponding to the abundance of each plant cohort. More specifically, the model defines as many plant water pools as plant cohorts, with proportions defined by their LAI values: \\[\\begin{equation} f_{pool,i} = \\frac{LAI^{live}_i}{LAI^{live}_{stand}} \\end{equation}\\] Overall soil moisture is then related to moisture of plant water pools by the following equation, that is fulfilled for each soil layer \\(s\\): \\[\\begin{equation} W_{s} = \\sum_{i}{f_{pool,i} \\cdot W_{i,s}} \\end{equation}\\] where \\(W_{i,s}\\) is the soil moisture (relative to field capacity) of layer \\(s\\) in the plant water pool of cohort \\(i\\), i.e. under the area of the stand attributed to cohort \\(i\\). When transpiration occurs and plant water pools are considered, the model assumes that the rhizosphere of each plant cohort occupies its own water pool but may enter into the water pools under other plant cohorts. In other words, the root systems of different cohorts may overlap horizontally. A given plant cohort \\(i\\) will have its roots in layer \\(s\\) partitioned among different water pools. Let us assume that we know \\(fr_{i,s,j}\\), the (horizontal) proportion of fine roots of cohort \\(i\\) in layer \\(s\\) of the water pool \\(j\\) (see section 2.3.5). These proportions fulfill: \\[\\begin{equation} \\sum_{j}{fr_{i,s,j}} = 1 \\,\\, \\forall i,s \\end{equation}\\] The soil moisture sensed by plant cohort \\(i\\) in layer \\(s\\), \\(W_{rhizo,i,s}\\) is a weighted sum of moisture in water pools, with weights being the proportion of fine roots in each pool: \\[\\begin{equation} W_{rhizo,i,s} = \\sum_{j}{fr_{i,s,j} \\cdot W_{i,s}} \\end{equation}\\] This moisture determines \\(\\Psi_{s,i}\\), the corresponding water potential, which replaces \\(\\Psi_{s}\\) in eq. (6.1), so that plant conductance depends on the soil moisture sensed by the rhizosphere of the plant cohort. If the (actual) transpiration of cohort \\(i\\) from soil layer \\(s\\) is \\(Tr_{i,s}\\), the water extracted by transpiration from a water pool \\(j\\) will be: \\[\\begin{equation} Tr_{i,s,j} = \\frac{fr_{i,s,j} \\cdot Tr_{i,s}}{f_{pool,j}} \\end{equation}\\] It is easy to verify that this definition ensures the fulfillment of an equation analogous to that between \\(W_{s}\\) and \\(W_{s,i}\\): \\[\\begin{equation} Tr_{i,s} = \\sum_{j}{f_{pool,j} \\cdot Tr_{i,s,j}} \\end{equation}\\] 6.1.4 Plant photosynthesis Because it is useful for growth, and for compatibility with the ‘Sperry’ transpiration mode (chapter 7), the water balance model using ‘Granier’ transpiration mode also calculates net assimilated carbon. Assuming a constant maximum water use efficiency (\\(WUE_{\\max}\\)), net photosynthesis for a given plant cohort \\(i\\) (in \\(g\\,C \\cdot m^{-2}\\)) is estimated as a function of transpiration (Mouillot, Rambal, and Lavorel 2001): \\[\\begin{equation} A_{n,i} = \\alpha_{WUE} \\cdot WUE_{\\max,i} \\cdot Tr_i \\end{equation}\\] where \\(Tr_i\\) is the transpiration of plant cohort \\(i\\), \\(WUE_{\\max,i}\\) is the maximum water use efficiency of the cohort (in \\(g\\,C \\cdot mm^{-1}\\)) and \\(\\alpha_{WUE} = T_{mean}/20\\) is bounded between 0 and 1. 6.2 Plant drought stress 6.2.1 Daily drought stress and plant water potential Similarly to Mouillot, Rambal, and Joffre (2002), daily drought stress of a given plant cohort \\(i\\), \\(DDS_i\\), is defined as the complement of relative whole-plant transpiration and is aggregated across soil layers using the proportion of fine roots in each layer as weights: \\[\\begin{equation} DDS_i=\\phi_i \\cdot \\sum_{s}{(1-K_{i,s})\\cdot v_{i,s}} \\end{equation}\\] Leaf-phenological status is included to prevent winter deciduous plants from suffering drought stress during winter. Daily drought stress values can be later used to define drought stress indices for larger temporal scales, as presented in the main text. Granier’s transpiration model does not allow estimating a water potential drop from soil to the leaf. Moreover, in a multilayered soil it is difficult to know what would be the water potential of the plant. Despite these limitations, a gross surrogate of ‘plant’ water potential (\\(\\Psi_{i}\\); in MPa) may be obtained averaging whole-plant relative conductance values and inverting the relative transpiration function: \\[\\begin{equation} \\Psi_{i}= K_i^{-1}\\left(\\sum_{s}{K_{i,s}\\cdot v_{i,s}}\\right) \\end{equation}\\] where \\(K_i^{-1}\\) is the inverse of the relative whole-plant transpiration eq. (6.1) (see function hydraulics_K2Psi()). 6.2.2 Cavitation and hydraulic disconnection The water balance model is normally run assuming that although soil drought may reduce transpiration, embolized xylem conduits are automatically refilled when soil moisture recovers (in other words, cavitation is reversible and cavitationRefill = \"total\"). It is possible to simulate irreversible cavitation by setting cavitationRefill = \"none\" or cavitation = \"annual\" in the control parameters. Any of these options cause the model to keep track of the maximum value of cavitation so far experienced using the proportion of of lost conductance for the plant cohort \\(i\\) (\\(PLC_i\\)), which is modelled also using a Weibull function: \\[\\begin{equation} PLC_{i} = \\max \\left \\{PLC_{i}, 1 - \\exp \\left \\{ \\ln{(0.5)}\\cdot \\left[ \\frac{\\Psi_i}{\\Psi_{critic,i}} \\right] ^r \\right \\} \\right \\} \\end{equation}\\] and then \\(K_{i,s}\\) cannot be larger than the one-complement of \\(PLC_i\\): \\[\\begin{equation} K_{i,s} = \\min \\{K_{i}(\\Psi_s), 1.0 - PLC_{i} \\} \\end{equation}\\] For simulations of less than one year one can use cavitationRefill = \"none\" to keep track of the maximum cavitation. However, for simulations of several years, it is normally advisable to allow recovery. If cavitation = \"annual\", \\(PLC_{i}\\) values are set to zero at the beginning of each year, assuming that embolized plants overcome the conductance loss by creating new xylem tissue. Another optional behavior consists in allowing the plant to disconnect from the soil when its potential becomes too negative. This may be advantageous for a cavitation-sensitive plant that is competing for water with another plant with higher extraction capacity. Parameter \\(K_{rootdisc,i}\\) can be used to specify the minimum relative conductance value that the plant will tolerate without disconnecting hydraulically from the soil (by default \\(K_{rootdisc,i} = 0\\)). If, after possibly accounting for irreversible cavitation, \\(K_{i,s}&lt;K_{rootdisc,i}\\) for a given soil layer, then the model assumes that transpiration from this soil layer is absent. Moreover, \\(K_{i,s}\\) is assumed equal to \\(K_{rootdisc,i}\\) for the sake of determining plant water potential. Bibliography "],["advancedwaterbalance.html", "Chapter 7 Advanced water balance model 7.1 Design principles 7.2 State variables 7.3 Water and energy balances 7.4 Process scheduling 7.5 Inputs and outputs 7.6 Applications", " Chapter 7 Advanced water balance model This chapter provides an overview of a water and energy balance model, described in De Cáceres et al. (2021), that shares some characteristics with the basic water balance model described in previous chapters. Like the previous one, the model is run using function spwb(), for a set of days, or function spwb_day(), for a single day. Compared to the basic model, the advanced water balance model adds more detail in some processes (light extinction, plant hydraulics and photosynthesis) and incorporates others that were missing (energy balances, plant water balance and hydraulic redistribution). The following overview is structured as in chapter 3. Process formulations shared with the basic water balance model were presented in previous chapters and will not be repeated. The chapters following this one provide a detailed description of those submodules that are exclusive of the advanced model. We recommend readers to familiarize themselves with basic water balance modelling processes before reading this and the subsequent chapters. In addition, users of this model should have a background on the processes implemented to fully understand and exploit model outputs. Since the scope of this book is focused on the model, interested readers should address relevant ecophysiological bibliography complement the material exposed here. 7.1 Design principles The model performs soil/plant water balance and soil/canopy energy balance for a given forest stand and for the period corresponding to input weather data. Soil water balance is calculated on a daily step basis whereas energy balances and plant transpiration are determined at subdaily steps. The model considers only the vertical spatial dimension of the stand, and not the horizontal distribution of plants within it. Still, the forest stand is divided into: (a) canopy vertical layers; (b) plant cohorts of different species, height and leaf area index (\\(LAI\\)). Hydrological processes are the same as in chapter 3, except for the addition of hydraulic redistribution of soil water via plant roots. The model includes water interception loss (Gash, Lloyd, and Lachaud 1995), plant transpiration, evaporation from soil (Ritchie 1972) and the partition between infiltration and runoff (Boughton 1989). Infiltration is partitioned among soil layers, depending on macroporosity, and water exceeding soil water holding capacity is lost via deep drainage. Snow pack dynamics can also be simulated. A great deal of the complexity of the advanced model concerns the estimation of plant transpiration and photosynthesis. The model simulates stomatal regulation of gas exchange separately for sunlit and shade leaves at sub-daily steps, involving detailed calculations of hydraulics, leaf energy balance and photosynthesis (Sperry et al. 2017). Compared to the basic water balance model of chapter 3, the higher level of complexity of the advanced model allows a more precise estimation of photosynthesis and transpiration. Moreover, the plant hydraulics submodel generates redistribution of water among soil layers. To calculate radiation balance and incident PAR at the leaf level, the leaf area of each plant cohort is divided into vertical layers according to its crown limits. Photosynthesis and transpiration of sunlit and shade leaves are treated separatedly (De Pury and Farquhar 1997). Given an input direct and diffuse short-wave irradiance at the top of the canopy, the amount of light absorbed by sunlit leaves, shade leaves and the soil follows the model of Anten and Bastiaans (2016). The scheme for long-wave radiation transfer between the atmosphere, the different canopy layers and the soil follows the SHAW model (Flerchinger et al. 2009). Energy balances are conducted at two levels: the canopy (or canopy layers) level and the leaf level. The model keeps track of temperature variation within the canopy (i.e. canopy energy balance) and in the uppermost soil surface (i.e. soil energy balance) as the result of energy exchanges between them and with the atmosphere. Heat conduction also occurs among soil layers. Energy balance can be performed assuming a single canopy layer, with soil and canopy energy balance equations being similar to those of Best et al. (2011) for JULES. Alternatively, energy balance can be conducted for each vertical layer following Bonan et al. (2014). In this case, the model allows considering within-canopy gradients in temperature, water vapor pressure, and \\(CO_2\\) as well as the turbulent transport of heat, water vapor and \\(CO_2\\) between canopy layers (Ma and Liu 2019), determined using a canopy turbulence model by Katul et al. (2004). The model also performs the energy balance at the leaf level to determine transpiration (Sperry et al. 2017). At this scale, radiation inputs include shortwave radiation from the atmosphere absorbed by the leaf and the net balance of long-wave radiation. Leaf temperature is determined assuming that the temperature of the surrounding air is that of the canopy (or canopy layer). After determining stomatal regulation, the model up-scales the transpiration flux to the canopy (or canopy layer) scale and the corresponding latent heat is used to complete the calculation of the energy balance at the canopy (or canopy layer) level. Latent heat fluxes from evaporation from the soil and evaporation of intercepted rainfall are also included in the canopy/soil energy balances. While plant water content is normally determined by changes in water potential values corresponding to changes in soil moisture and transpiration rates, the model can also consider an explicit water balance within the plant. In this case, the amount of water within plant compartments is explicitly tracked and the rate of extraction of soil water can be decoupled from the rate of transpiration. Like in the basic water model, the advanced model assumes by default that soil moisture under all plant cohorts is the same (i.e. water sources corresponding to vertical soil layers are shared among cohorts). However, variations in soil moisture beneath plant cohorts (and, implicitly, horizontal variation of soil moisture) can be simulated. In this case, hydrological processes are replicated for the fraction of soil corresponding to each cohort. Transpiration of each plant cohort depends on the soil moisture beneath itself and, depending on root overlap, on the soil moisture beneath other plant cohorts. 7.2 State variables The following are state variables in the model under all simulations: Cumulative growth degree days, \\(GDD\\), are tracked by the model and determine leaf phenological status (i.e. \\(LAI\\) values) of winter deciduous species. Daily soil moisture content dynamics on each layer \\(s\\) are tracked using \\(W_s = \\theta_s(\\Psi_s)/ \\theta_{fc,s}\\), the proportion of soil moisture in relation to field capacity, where moisture at field capacity, \\(\\theta_{fc,s}\\), is assumed to correspond to \\(\\Psi_{fc} = -0.033\\) MPa. Note that \\(W_s\\) values larger than one are possible if the soil is between field capacity and saturation (which can happen if deep drainage is not allowed). The air temperature within the canopy (\\(T_{can}\\); ºC) and the temperature of each soil layer \\(s\\) (\\(T_{soil,s}\\); ºC) are tracked for every subdaily step. Additional state variables depend on the activation of specific control flags (see subsection 7.5.3): If plant capacitance effects are considered, the model also tracks \\(\\Psi_{apo, stem,i}\\), the water potential of the stem apoplastic compartment, as well as the water potential of stem and leaf symplastic compartments, \\(\\Psi_{symp, stem,i}\\) and \\(\\Psi_{symp, leaf,i}\\) respectively. If cavitation is not completely reversible, the proportion of stem hydraulic conductance loss for each plant cohort \\(i\\), \\(PLC_{stem,i}\\), becomes a state variable. If plant water pools are considered, the model also tracks \\(W_{i,s}\\), the proportion of soil moisture in relation to field capacity for layer \\(s\\) within fraction of stand area covered by cohort \\(i\\). If multi-layer canopy energy balance is activated, the model tracks for each vertical layer \\(j \\in \\{1,l\\}\\): Air temperature, \\(T_{air,j}\\) Water vapor pressure, \\(e_{air,j}\\) \\(CO_2\\) concentration, \\(C_{air,j}\\). 7.3 Water and energy balances 7.3.1 Water balance Daily variations in soil water content (\\(\\Delta{V_{soil}}\\) in \\(mm\\)) can be summarized as: \\[\\begin{equation} \\Delta{V_{soil}} = Pr + Sm - In - Ru - Dd - Es - Ex \\tag{7.1} \\end{equation}\\] where \\(Pr\\) is precipitation as rainfall, \\(Sm\\) is water reaching the soil from snow melt (if snow-pack dynamics are considered), \\(In\\) is the interception loss (i.e., water evaporated after being intercepted by the canopy), \\(Ru\\) is surface runoff, \\(Dd\\) is deep drainage (i.e. water percolated to layers beyond soil depth), \\(Es\\) is evaporation from soil surface and \\(Ex\\) is water extraction by plants. Although the advanced water balance model includes hydraulic redistribution, this does not change the total amount of water in the soil, so the water balance equation is is very similar to that of the basic water balance model (eq.(3.1)). The only difference is that here we used plant extraction (\\(Ex\\)) instead of plant transpiration (\\(Tr\\)). The two quantities will be the same (i.e. \\(Ex = Tr\\)) if plant capacitance effects are not considered. Otherwise the amount of water stored in the plant changes according to: \\[\\begin{equation} \\Delta{V_{plant}} = Ex - Tr \\tag{7.2} \\end{equation}\\] While the above describes the default water balance equation, variations can occur depending on specific control flags: If snow dynamics are considered, the water balance of the snow pack is defined as: \\[\\begin{equation} \\Delta{S_{snow}} = Ps - Sm \\end{equation}\\] where \\(Ps\\) is precipitation as snowfall and \\(Sm\\) is snow melt. Evaporation from bare soil cannot occur if there is a snow pack over the soil surface (i.e., if \\(S_{snow}&gt;0\\) then \\(Es = 0\\)). If plant water pools are considered, the water balance equation applies not only to the soil of the overall stand but also to the soil beneath each plant cohort. The fraction of stand area covered by each cohort is used to keep the water balance at the two scales aligned. Moreover, the water balances of soils beneath the different plant cohort are more or less correlated depending on root overlap. Unlike the basic water balance, in this model water balance components contributing to latent heat (\\(Es\\), \\(Tr\\), \\(In\\) and \\(Sm\\)) are included in the energy balance equations of the canopy and soil, therefore coupling water and energy balances. 7.3.2 Single-layer canopy energy balance For the sake of performing energy balance, the canopy can be considered a single layer that exchanges energy with the soil and the atmosphere (Best et al. 2011). First, it absorbs shortwave radiation from the atmosphere (\\(K_{abs,can}\\)) and long-wave radiation resulting from net radiation balance (\\(L_{net,can}\\)). Other energy fluxes considered are convective exchanges between the canopy and atmosphere (\\(H_{can,atm}\\)) and between the canopy and the soil (\\(H_{can,soil}\\)). Finally, energy is released from the canopy to the atmosphere through latent heat (\\(LE_{can}\\)) produced via transpiration (\\(Tr\\)) and evaporation of water intercepted by the canopy (\\(In\\)). Combining all energy flows (all of them in \\(W \\cdot m^{-2}\\)), the instantaneous energy balance equation for the canopy is: \\[\\begin{equation} TC_{can} \\cdot \\frac{\\delta T_{can}}{\\delta t} = K_{abs,can} + L_{net,can} - LE_{can} - H_{can,atm} - H_{can,soil} \\tag{7.3} \\end{equation}\\] where \\(TC_{can}\\) is the canopy thermal capacitance (in \\(J \\cdot m^{-2} \\cdot K^{-1}\\)). 7.3.3 Multiple-layer canopy energy balance Alternatively, the model allows performing an energy balance for each vertical layer in the canopy, including its heat storage capacity (Ma and Liu 2019). The energy balance equation for canopy layer \\(j\\) is: \\[\\begin{equation} TC_{j} \\cdot \\frac{\\delta T_{air,j}}{\\delta t} = K_{abs,j} + L_{net,j} - LE_{j} + H_{j} \\tag{7.4} \\end{equation}\\] where \\(K_{abs,j}\\) is the short-wave radiation absorbed by leaves in the layer, \\(L_{net,j}\\) is the net long-wave radiation balance of the layer, \\(LE_{j}\\) is the latent heat flux and \\(H_j\\) is the sensible heat flux, which includes heat coming from leaves or soil surfaces as well as turbulent heat transport from adjacent layers. Finally, \\(TC_{j}\\) is the thermal capacitance (in \\(J \\cdot m^{-2} \\cdot K^{-1}\\)) of canopy layer \\(j\\). 7.3.4 Soil energy balance Like the canopy, the uppermost soil layer absorbs short-wave radiation from the atmosphere (\\(K_{abs,soil}\\)) and has a net long-wave radiation balance (\\(L_{net,soil}\\)). The uppermost soil layer also exchanges heat with the canopy (\\(H_{can,soil}\\)) and releases energy in the form of latent heat (\\(LE_{soil}\\)), which includes snow melt (\\(Sm\\)) and evaporation from the soil surface (\\(Es\\)). Finally, the soil layer exchanges thermal energy by conduction with the layer below (\\(G_{1,2}\\)) The energy balance equation for the uppermost soil layer is: \\[\\begin{equation} TC_{soil, 1} \\cdot \\frac{\\delta T_{soil, 1}}{\\delta t} = K_{abs,soil} + L_{net,soil} + H_{can,soil} - LE_{soil} - G_{1,2} \\tag{7.5} \\end{equation}\\] where \\(TC_{soil,1}\\) is the thermal capacitance of soil layer 1 (the uppermost layer). Instantaneous soil temperature changes on each soil layer depend on the balance between upward and downward energy flows. The downward energy flow for the uppermost soil layer depends on its energy exchanges with the canopy and the atmosphere, as shown in eq. (7.5), whereas the remaining energy flows are generated by heat conduction and depend on the temperature gradients between soil layers. The energy balance for a soil layer \\(s&gt;1\\) is: \\[\\begin{equation} TC_{soil, s} \\cdot \\frac{\\delta T_{soil, s}}{\\delta t} = G_{s-1,s} - G_{s,s+1} \\tag{7.6} \\end{equation}\\] where \\(G_{s-1,s}\\) is the energy inflow from layers above, \\(G_{s,s+1}\\) is the energy outflow towards layers below and \\(TC_{soil,s}\\) is the thermal capacitance of soil layer \\(s\\) (in \\(J \\cdot m^{-2} \\cdot K^{-1}\\)). Unlike Best et al. (2011), the model considers the snow pack and the uppermost soil layer as a single layer in terms of energy exchange, but treats this layer differently depending on whether snow is present or not. The snow pack absorbs shortwave radiation (section 5.2) and snow melt is included as latent heat in the energy balance, but the snow layer does not exchange long-wave radiation with the soil nor the atmosphere. \\(K_{abs,soil}\\) is set to zero when snow pack is present (because shortwave radiation is absorbed by snow), but the soil layer still exchanges long-wave radiation and convective energy with the canopy and the atmosphere. In addition, remember that bare soil evaporation does not occur when the snow pack is present (section 5.5). 7.4 Process scheduling For every day to be simulated, the model performs the following steps: Update leaf area values according to the phenology of species (sections 4.1). If snow dynamics are included, increase snow pack from snow precipitation (\\(Ps\\)) and decrease it following snow melt (\\(Sm\\)) (section 5.2). Determine rainfall interception loss (\\(In\\)) and net rainfall (\\(Pr_{net}\\)) (section 5.3). Increase soil water content due to net rainfall (\\(Pr_{net}\\)), surface runon (\\(Ro\\)) and snow melt (\\(Sm\\)), after accounting for surface runoff (\\(Ru\\)) and deep drainage (\\(Dd\\)) (section 5.4). Decrease soil water content due to bare soil evaporation (\\(Es\\)), if snow is not present (section 5.5). Determine subdaily air temperature and direct/diffuse irradiance variations (chapter 8). Determine shortwave radiation absorbed by plant cohorts and the soil at subdaily steps (sections 9.1.3 and 9.1.4). Update the water supply function of each plant cohort, according to the hydraulic model and the current soil water potential (chapter 10). If plant capacitance effects are considered, the supply function involves only the soil-to-stem part of the hydraulic pathway. Otherwise, it describes the complete soil-to-leaf pathway. Determine instantaneous plant cohort transpiration, photosynthesis rates and close soil/canopy energy balance at subdaily steps (chapters 12 and 13). This involves the following actions for each subdaily step: Determine long-wave radiation exchange between soil, canopy layers and atmosphere (section 9.2). If plant capacitance effects are considered update the stem-to-leaf hydraulic supply function. Calculate leaf energy balance and photosynthesis (for shade and sunlit leaves of each plant cohort) corresponding to each transpiration value of the supply function (section 11.1). If plant capacitance effects are considered this concerns the stem-to-leaf hydraulic supply function. Determine stomatal conductance, transpiration and photosynthesis on shade and sunlit leaves of each plant cohort according to Sperry’s (2017) profit maximization strategy (section 12.2). Scale transpiration (\\(Tr\\)) and net photosynthesis (\\(A_n\\)) from sunlit/shade leaves to the plant cohort level (section 12.3). If plant capacitance effects are considered perform water balance of plant compartments at high temporal resolution (1 second steps), while re-estimating the flow from the soil to the stem at each step according to changes in stem water potential (see 10.4). Scale water extraction from soil layers (\\(Ex\\)) to the plant cohort level. Complete energy balance of the canopy and the soil, after translating plant transpiration, evaporation from bare soil, snow melt and interception loss to latent heat and calculating convective heat exchange for both the canopy and the soil. Alternatively, perform energy balance for individual canopy layers, while including turbulent heat exchange and turbulent transport of water vapor and \\(CO_2\\) between layers (chapter 13). Determine day-level photosynthesis and transpiration from instantaneous rates and update soil moisture (section 14.1), effectively closing the soil water balance at the daily scale. Determine drought stress for each plant cohort (section 14.3). Details of the formulation of each of these processes are provided within the referred chapters and sections (some processes have been already described in previous chapters/sections). 7.5 Inputs and outputs 7.5.1 Soil, vegetation and meteorology Soil Soil input requirements are the same as for the basic water balance model and were fully described in section 2.2. Genuchten (1980) water retention curves are forced for this model, because rhizosphere conductance is modelled using van Genuchten hydraulic equations (see subsection 10.1). Vegetation Vegetation input requirements were fully described in section 2.3. Trees and shrubs do not need to be characterized with different variables in soil water balance calculations, since both kinds of cohort have a \\(LAI\\) value. In most cases, users only need to estimate the leaf area index corresponding to live leaves, i.e. \\(LAI^{live}\\), because normally at the starting point all leaves are expanded (i.e. \\(LAI^{\\phi} = LAI^{live}\\)) and one can assume no dead leaves in the canopy (i.e., \\(LAI^{dead} = 0\\)). Vegetation characteristics stay constant during simulations using function spwb(), although the actual expanded leaf area (\\(LAI^{\\phi}\\)) and dead leaf area may vary if the species is winter deciduous. Meteorology The minimum weather variables required to run the model are min/max temperatures (\\(T_{min}\\) and \\(T_{max}\\)), min/max relative humidity (\\(RH_{min}\\) and \\(RH_{max}\\)), precipitation (\\(P\\)) and solar radiation (\\(Rad\\)). Wind speed (\\(u\\)) is also needed for the advanced water balance model, but the user may use missing values if not available (a default value will be used in this case). Wind speed is assumed to have been measured at a specific height above the canopy (by default at 2 m). Definitions and units of these variables were given in section 2.4. 7.5.2 Vegetation functional parameters The advanced water balance model requires many functional parameters to be specified for plant cohorts. A first set of parameters refers to leaf phenology (paramsPhenology): Symbol Units R Description PhenologyType Leaf phenology type (oneflush-evergreen, progressive-evergreen, winter-deciduous, winter-semideciduous) \\(LD\\) years LeafDuration Average duration of leaves (in years). \\(S^*_{eco,i}\\) \\(^{\\circ} \\mathrm{C}\\) Sgdd Degree days corresponding to leaf budburst (see section 4.1.2). \\(T_{eco}\\) \\(^{\\circ} \\mathrm{C}\\) Tbgdd Base temperature for the calculation of degree days to leaf budburst (see section 4.1.2). \\(S^*_{sen,i}\\) \\(^{\\circ} \\mathrm{C}\\) Ssen Degree days corresponding to leaf senescence (see section 4.1.3). \\(Ph_{sen}\\) hours Phsen Photoperiod corresponding to start counting senescence degree-days (see section 4.1.3). \\(T_{sen}\\) \\(^{\\circ} \\mathrm{C}\\) Tbsen Base temperature for the calculation of degree days to leaf senescence (see section 4.1.3). A second set of functional parameters relate to light extinction and water interception (paramsInterception): Symbol Units R Description \\(k_{PAR,i}\\) (unitless) kPAR Extinction coefficient for diffuse PAR \\(\\alpha_{SWR,i}\\) [0-1] alphaSWR Short-wave radiation leaf absorbance coefficient \\(\\gamma_{SWR,i}\\) [0-1] gammaSWR Short-wave radiation leaf reflectance (albedo) \\(s_{water, i}\\) \\(mm\\,H_2O·LAI^{-1}\\) g Crown water storage capacity (i.e. depth of water that can be retained by leaves and branches) per LAI unit A third set includes parameters related to plant anatomic and morphological attributes (paramsAnatomy): Symbol Units R param Description \\(H_{med,i}\\) \\(cm\\) Hmed Median plant height \\(1/H_{v,i}\\) \\(m^2 \\cdot m^{-2}\\) Al2As Ratio of leaf area to sapwood area \\(LW_i\\) \\(cm\\) LeafWidth Leaf width \\(SLA_i\\) \\(m^2 \\cdot kg^{-1}\\) SLA Specific leaf area \\(\\rho_{leaf,i}\\) \\(g \\cdot cm^{-3}\\) LeafDensity Leaf tissue density \\(\\rho_{wood,i}\\) \\(g \\cdot cm^{-3}\\) WoodDensity Wood tissue density A fourth set of parameters are related to transpiration and photosynthesis (paramsTranspiration): Symbol Units R param Description \\(g_{swmin,i}\\) \\(mol\\, H_2O \\cdot s^{-1} \\cdot m^{-2}\\) Gwmin Minimum stomatal conductance to water vapour \\(g_{swmax,i}\\) \\(mol\\, H_2O \\cdot s^{-1} \\cdot m^{-2}\\) Gwmax Maximum stomatal conductance to water vapour \\(J_{max, 298,i}\\) \\(\\mu mol\\, e \\cdot m^{-2} \\cdot s^{-1}\\) Jmax298 Maximum rate of electron transport at 298K \\(V_{max, 298,i}\\) \\(\\mu mol\\, CO_2 \\cdot s^{-1} \\cdot m^{-2}\\) Vmax298 Rubisco’s maximum carboxylation rate at 298K \\(k_{leaf, \\max,i}\\) \\(mmol \\cdot s^{-1} \\cdot m^{-2} \\cdot MPa^{-1}\\) VCleaf_kmax Maximum leaf conductance (per leaf area unit) \\(k_{stem, \\max,i}\\) \\(mmol \\cdot s^{-1} \\cdot m^{-2} \\cdot MPa^{-1}\\) VCleaf_kmax Maximum stem conductance (per leaf area unit) \\(k_{root, \\max,i,s}\\) \\(mmol \\cdot s^{-1} \\cdot m^{-2} \\cdot MPa^{-1}\\) VCleaf_kmax Maximum root conductance (per leaf area unit) for each soil layer \\(k_{rhizo,\\max, i,s}\\) \\(mmol \\cdot s^{-1} \\cdot m^{-2} \\cdot MPa^{-1}\\) VGrhizo_kmax Maximum hydraulic conductance of the rhizosphere for each soil layer \\(c_{leaf,i}\\), \\(d_{leaf,i}\\) (unitless), MPa VCleaf_c, VCleaf_d Parameters of the vulnerability curve for leaves \\(c_{stem,i}\\), \\(d_{stem,i}\\) (unitless), MPa VCstem_c, VCstem_d Parameters of the vulnerability curve for stem xylem \\(c_{root,i}\\), \\(d_{root,i}\\) (unitless), MPa VCroot_c, VCroot_d Parameters of the vulnerability curve for root xylem A fifth (final) set of parameters are related to water storage and water relations in plant tissues (paramsWaterStorage): Symbol Units R Description \\(\\epsilon_{leaf,i}\\) MPa LeafEPS Modulus of elasticity of leaves \\(\\epsilon_{stem,i}\\) MPa StemEPS Modulus of elasticity of symplastic xylem tissue \\(\\pi_{0,leaf,i}\\) MPa LeafPI0 Osmotic potential at full turgor of leaves \\(\\pi_{0,stem,i}\\) MPa StemPI0 Osmotic potential at full turgor of symplastic xylem tissue \\(f_{apo,leaf,i}\\) [0-1] LeafAF Apoplastic fraction in leaf tissues \\(f_{apo,stem,i}\\) [0-1] StemAF Apoplastic fraction in stem tissues \\(V_{leaf,i}\\) \\(l \\cdot m^{-2}\\) Vleaf Leaf water capacity per leaf area unit \\(V_{sapwood,i}\\) \\(l \\cdot m^{-2}\\) Vsapwood Sapwood water capacity per leaf area unit Vegetation functional attributes are normally filled for each cohort by function spwbInput() or forest2spwbInput() from species identity. However, different parameters can be specified for different cohorts of the same species if desired (see section 2.3.6). 7.5.3 Control parameters Control parameters modulate the overall behaviour of water balance simulations (see section 2.5). There are three key control parameters: transpirationMode defines the transpiration model, which in turn defines the complexity of the water balance model. If transpirationMode = \"Sperry\" then the advanced water balance model is run. In this model, the water retention curve model is forced to be that of Van Genuchten, i.e. soilFunctions = \"VG\" (see section 2.2.2). capacitance defines whether plant capacitance (hence, plant water balance) is considered. By default it is set to capacitance = FALSE. ndailysteps defines the number of daily steps. By default ndailysteps = 24, so that steps are hours, but users can increase the temporal resolution, for example to half hour substeps by setting ndailysteps = 48. multiLayerBalance is a boolean flag to indicate that multi-layer energy balance is desired (by default multiLayerBalance = FALSE). nsubsteps defines the number of substeps for multi-layer energy balance calculations. By default nsubsteps = 3600, so that substeps are 1 sec if ndailysteps = 24. The other control parameters relevant for the advanced water balance model are: snowpack [= TRUE]: Whether dynamics of snow pack are included (see section 5.2). rockyLayerDrainage [= TRUE]: Whether water exceeding the field capacity of the deepest layer can be drained via macropore flow towards a non-reachable compartment, only for layers with &gt; 95% rocks (see section 5.4). leafPhenology [= TRUE]: Whether leaf phenology is simulated for winter-deciduous species (see section 4.1). If FALSE then all species are assumed to be evergreen. defaultWindSpeed [= 2.5]: Default value for wind speed (in \\(m \\cdot s^{-1}\\)) when this is missing. windMeasurementHeight [= 200]: Distance (in cm) above the top of the canopy corresponding to the measurement of wind speed. boundaryLayerSize [= 2000]: Size of the canopy boundary layer (in cm). The boundary layer causes the model to define vertical layers above the top of the canopy. The parameter is only relevant when multi-layer canopy energy balance is performed. unlimitedSoilWater [=FALSE]: Boolean flag to indicate the simulation of plant transpiration assuming that soil water is always at field capacity. plantWaterPools [=FALSE]: Boolean flag to indicate the simulation of water balance assuming that each cohort has its own water pools. costModifier, gainModifier [= 1]: Modifiers (exponents) of the gain and cost functions defined in Sperry et al. (2016) (see section 12.2). cuticularTranspiration [=TRUE]: Boolean flag to indicate the simulation of cuticular transpiration (at night or when stomata are fully closed) according to minimum stomatal conductance (see section 12.2). thermalCapacityLAI [= 1000000]: Canopy thermal capacitance per LAI unit (see section 13.1.3). verticalLayerSize [= 100]: The size of vertical layers (in \\(cm\\)) for leaf area distribution and light extinction calculations (see section 2.3.3). cavitationRefill [= \"total\"]: Controls recovery from cavitation. If \"total\" cavitation is completely reversible. If \"none\" the model operates in a irreversible cavitation mode. If \"annual\" plants are assumed to recover from previous drought at the first day of the year and, finally, if \"rate\" cavitation recovery follows a daily recovery rate (see section 12.4). refillMaximumRate [= 0.05]: Maximum rate of conduit refilling (see section 12.4). klatstem [= 0.01]: Stem symplastic-apoplastic lateral conductance (in \\(mmol·s^{-1}·m^{-2}·MPa^{-1}\\)). Only relevant when capacitance = TRUE (see section 10.4). klatleaf [= 0.01]: Leaf symplastic-apoplastic lateral conductance (in \\(mmol·s^{-1}·m^{-2}·MPa^{-1}\\)). Only relevant when capacitance = TRUE (see section 10.4). numericParams: A list with params for numerical approximation routines. Catm [=386]: Atmospheric \\(CO_2\\) concentration (in micromol \\(CO_2 \\cdot mol^{-1}\\) = ppm). cochard [=FALSE]: Boolean flag to indicate the stomatal closure when leaf water potential is below turgor loss point so that transpiration depends on cuticular properties (Martin-StPaul, Delzon, and Cochard 2017). In addition, a number of control parameters are used to modify how hydraulic parameters are estimated when calling function spwbInput(): taper [= TRUE]: Whether taper of xylem conduits is accounted for when estimating aboveground stem conductance from xylem conductivity. fracRootResistance [= 0.40]: Fraction of plant total resistance (leaf+stem+root) that corresponds to root system. averageFracRhizosphereResistance [= 0.15]: Fraction to total continuum (stem+root+rhizosphere) resistance that corresponds to rhizosphere (averaged across soil water potential values). 7.5.4 Model output 7.5.4.1 Daily output Function spwb with transpirationMode = \"Sperry\" returns a list object with the following elements: Element Description WaterBalance Climatic input and water balance flows (i.e. net precipitation, infiltration, runoff, transpiration…). All of them in \\(mm = l \\cdot m^{-2}\\). EnergyBalance Energy balance components (instantaneous values) for the soil and the canopy Temperature Minimum and maximum temperature values for topsoil, canopy and atmosphere Soil Soil variables for each soil layer: Moisture relative to field capacity (\\(W_s\\)), water potential (\\(\\Psi_s\\)) and volumetric water content (\\(V_s\\)). Stand Stand-level variables, such as \\(LAI^{\\phi}_{stand}\\), \\(LAI^{dead}_{stand}\\), the water retention capacity of the canopy (\\(S_{canopy}\\)) or the fraction of light reaching the ground (\\(L^{PAR}_{ground}\\) and \\(L^{SWR}_{ground}\\)). Plants Plant-level variables, such as \\(LAI^{phi}_i\\), plant transpiration, plant water potential, etc. SunlitLeaves Leaf-level output variables for sunlit leaves. ShadeLeaves Leaf-level output variables for shade leaves. Compared to the output of the basic water balance 3.5.4, new output elements are produced. Many results are given as sub-elements of Plants, each of them a data frame with dates in rows and plant cohorts in columns: Element Symbol Units Description LAI \\(LAI^{\\phi}_i\\) \\(m^2 \\cdot m^{-2}\\) Leaf area index (expanded). AbsorbedSWR MJ Shortwave radiation absorbed per ground area. AbsorbedLWR MJ Longwave radiation absorbed per ground area. Transpiration \\(Tr_{i}\\) \\(mm\\) Transpiration per ground area. GrossPhotosynthesis \\(A_{g,i}\\) \\(g\\,C \\cdot m^{-2}\\) Gross photosynthesis per ground area. NetPhotosynthesis \\(A_{n,i}\\) \\(g\\,C \\cdot m^{-2}\\) Net photosynthesis per ground area. dEdP \\(dE/d\\Psi_{i}\\) \\(mmol \\cdot s^{-1} \\cdot m^{-2} \\cdot MPa^{-1}\\) Derivative of the (aboveground) supply function. PlantWaterBalance \\(mm\\) Internal daily plant water balance (balance of soil extraction and transpiration). LeafPsiMin \\(\\Psi_{md, i}\\) MPa Minimum (midday) ‘average leaf’ water potential. LeafPsiMax \\(\\Psi_{pd, i}\\) MPa Maximum (predawn) ‘average leaf’ water potential. StemPsi \\(\\Psi_{stem, i}\\) MPa Minimum stem water potential. RootPsi \\(\\Psi_{rootcrown, i}\\) MPa Minimum root-crown water potential. RhizoPsi \\(\\Psi_{rootsurf, i,s}\\) MPa Minimum root surface water potential for each soil layer. StemPLC \\(PLC_{stem,i}\\) MPa Proportion of stem conductance loss. LeafRWC \\(RWC_{leaf, i}\\) % Mean leaf relative water content. StemRWC \\(RWC_{stem, i}\\) % Mean stem relative water content. LeafSympRWC \\(RWC_{leaf, i}\\) % Relative water content in the leaf symplasm. StemSympRWC \\(RWC_{stem, i}\\) % Relative water content in the stem symplasm. PlantStress \\(DDS_i\\) [0-1] Drought stress level suffered by each plant cohort (relative whole-plant conductance). The following table describes the child elements of SunlitLeaves and ShadeLeaves, each of them a data frame with dates in rows and plant cohorts in columns: Element Symbol Units Description LeafPsiMin \\(\\Psi_{md, i}^{sunlit}\\), \\(\\Psi_{md, i}^{shade}\\) MPa Minimum (midday) (sunlit or shade) leaf water potential. LeafPsiMax \\(\\Psi_{pd, i}^{sunlit}\\), \\(\\Psi_{pd, i}^{shade}\\) MPa Maximum (predawn) (sunlit or shade) leaf water potential. GW \\(g_{w,i}^{sunlit}\\), \\(g_{w,i}^{shade}\\) \\(mol \\cdot s^{-1} \\cdot m^{-2}\\) Stomatal conductance to water vapour. 7.5.4.2 Subdaily output Calling function spwb_day() with the advanced water balance model results in subdaily results for the simulated date. When running the advanced water balance model with function spwb() one can request subdaily results to be included with the function output. This is done via setting subdailyResults = TRUE in the control parameter list. In that case, the output list of spwb() will include an element subdaily, whose subelements correspond to the results of spwb_day() for each date simulated. Refer to the documentation of functions spwb_day() and transp_transpirationSperry() for details of subdaily output. 7.6 Applications All the applications mentioned in section 3.6 for the basic water balance model would be, in principle, valid for the advanced model. However, the difference in model complexity and the corresponding increase in parametrization make the advanced model less appealing for the average user. To our experience, its estimates of soil moisture dynamics are only slighly more accurate than those of the basic model. The advanced water balance model is, however, justified whenever: Precise estimates are desired for the transpiration flows and/or water potential values of each plant cohort, taking into account their vertical position within the stand. One is interested in modelling subdaily variation of plant processes such as photosynthesis, transpiration and water use efficiency. One is interested in canopy and/or soil energy balances (note that these model outputs have not yet been contrasted against observations), or the plant water balance. Hydraulic redistribution is believed to be a key process in soil moisture dynamics. To generate predictions for meta-modelling studies, for example to improve certain processes of another model, such as our basic water balance model. These model uses belong mostly to eco-hydrological research rather than to applications intended to provide information for forest management. For this reason, we believe the advanced model to be useful to researchers. Bibliography "],["subdailytemplight.html", "Chapter 8 Subdaily atmospheric temperature and radiation variation 8.1 Above-canopy air temperature 8.2 Incoming diffuse and direct short-wave radiation 8.3 Incoming long-wave radiation", " Chapter 8 Subdaily atmospheric temperature and radiation variation After estimating leaf phenology (chapter 4) and simulating the main hydrological processes (chapter 5), the advanced water balance model (chapter 7) starts simulating subdaily processes, which include energy balances and photosynthesis/transpiration. In order to properly simulate these processes it is important to consider sub-daily variations in temperature and radiation. Here we detail how sub-daily estimates of above-canopy air temperature and atmospheric incoming radiation are derived from daily input values. 8.1 Above-canopy air temperature Above-canopy air temperature (\\(T_{atm}\\), in \\(^\\circ C\\)) diurnal variations are modeled assuming a sinusoidal pattern with \\(T_{atm} = T_{\\min}\\) at sunrise and \\(T_{atm} = (T_{\\min}+T_{\\max})/2\\) at sunset. Air temperature varies linearly between sunset and sunrise (McMurtrie, Rook, and Kelliher 1990). Sunrise and sunset hours are determined from latitude and sun declination (see section 4.2 of the reference manual for package meteoland). 8.2 Incoming diffuse and direct short-wave radiation Daily global radiation (\\(Rad\\), in \\(MJ \\cdot m^{-2} \\cdot d^{-1}\\)) is assumed to include both direct and diffuse short-wave radiation (SWR). Using latitude information and whether is a rainy day, this quantity is partitioned into instantaneous direct and diffuse SWR and PAR for different daily substeps. Values of instantaneous direct and diffuse SWR and PAR above the canopy (\\(I_{beam}\\) and \\(I_{dif}\\), in \\(W \\cdot m^{-2}\\)) are calculated using the methods described in Spitters, Toussaint, and Goudriaan (1986), which involve comparing daily global radiation with daily potential radiation. All these calculations are performed using routines in package meteoland (see details in section 4.6 of the reference manual for this package). 8.3 Incoming long-wave radiation Once the above-canopy air temperature for a given time step is known, instantaneous long-wave radiation (LWR) coming from the atmosphere (\\(L_{atm}\\), in \\(W \\cdot m^{-2}\\)) can be calculated following Campbell and Norman (1998): \\[\\begin{equation} L_{atm} = \\epsilon_{a} \\cdot \\sigma \\cdot (T_{atm} + 273.16)^{4.0} \\end{equation}\\] where \\(T_{atm}\\) is air temperature, \\(\\sigma = 5.67 \\cdot 10^{-8.0}\\,W \\cdot K^{-4} \\cdot m^{-2}\\) is the Stephan-Boltzmann constant and \\(\\epsilon_{a}\\) is the emmissivity of the atmosphere, calculated using: \\[\\begin{eqnarray} \\epsilon_{a} &amp;=&amp; (1 - 0.84 \\cdot c) \\cdot \\epsilon_{ac} + 0.84 \\cdot c \\\\ \\epsilon_{ac} &amp;=&amp; 1.72 \\cdot \\left(\\frac{e_{atm}}{T_{atm} + 273.16} \\right)^{1/7} \\end{eqnarray}\\] where \\(e_{atm}\\) is the average daily water vapor pressure (in kPa; see 2.4) and \\(c\\) is the proportion of clouds (\\(c=1\\) in rainy days and \\(c=0\\) otherwise). Bibliography "],["radiationbalance.html", "Chapter 9 Radiation transfer 9.1 Short-wave radiation 9.2 Long-wave radiation", " Chapter 9 Radiation transfer In the previous chapter we detailed sub-daily variation in temperature and radiation inputs. Here we deal with the absorption of diffuse and direct shortwave radiation through the canopy as well as the long-wave radiation balance for canopy layers and the soil layer. These are necessary to estimate the different components of the canopy and soil energy balances (see eqs. (7.3), (7.4) and (7.5)) as well as to determine leaf energy balance, transpiration and photosynthesis (chapters 11 and 12). Short-wave radiation (SWR) absorption can be determined for all sub-daily steps once the variation of atmospheric inputs are known. In contrast, the long-wave radiation (LWR) balance for any surface depends on its temperature and therefore, net LWR for canopy and soil layers need to be determined at each sub-daily step after closing the energy balance of the previous step (see chapter 13). The vertical distribution of leaves in the stand is a key element of radiation transfer. As explained in section 2.3.3, the canopy is divided into vertical layers (whose size is determined by the control parameter verticalLayerSize), and the expanded and dead leaf area index of each cohort within each layer is determined. Let \\(l\\) be the number of canopy layers, \\(c\\) the number of plant cohorts, and \\(LAI_{i,j}^{all} = LAI_{i,j}^{\\phi}+LAI_{i,j}^{dead}\\) be the leaf area index of cohort \\(i\\) in layer \\(j\\). 9.1 Short-wave radiation In section 8.2 we explained how the model estimates instantaneous and direct/diffuse SWR and PAR at the top of the canopy. Given an input direct and diffuse short-wave irradiance at the top of the canopy, the amount of light absorbed by sunlit leaves, shade leaves and the soil follows the model of Anten and Bastiaans (2016), which we detail in the following subsections. 9.1.1 Direct and diffuse irradiance across the canopy The average irradiance reaching the top of each canopy layer \\(j\\) is calculated separately for direct beam and diffuse radiation (the same equations are valid for SWR or PAR, but with different coefficients): \\[\\begin{eqnarray} I_{beam,j} &amp;=&amp; (1 - \\gamma_i) \\cdot I_{beam} \\cdot \\exp\\left[ \\sum_{h=j+1}^{l}{\\sum_{i}^{c}{-k_{b}\\cdot \\alpha_i^{0.5}\\cdot LAI^{all}_{i,h}}}\\right]\\\\ I_{dif,j} &amp;=&amp; (1 - \\gamma_i) \\cdot I_{dif} \\cdot \\exp\\left[ \\sum_{h=j+1}^{l}{\\sum_{i}^{c}{-k_{d,i}\\cdot \\alpha_i^{0.5}\\cdot LAI^{all}_{i,h}}}\\right] \\end{eqnarray}\\] where \\(I_{beam}\\) and \\(I_{dif}\\) are the direct and diffuse irradiance at the top of the canopy (in \\(W \\cdot m^{-2}\\)), \\(\\gamma_i\\) is the leaf reflectance (\\(\\gamma_{SWR, i}\\) is an input parameter, whereas \\(\\gamma_{PAR, i} = 0.8 \\cdot \\gamma_{SWR, i}\\)), \\(k_{b} = 0.8\\) is the extinction coefficient for direct light, \\(k_{d,i}\\) is the extinction coefficient of cohort \\(i\\) for diffuse light (i.e. \\(k_{PAR,i}\\) or \\(k_{SWR,i}\\)) and \\(\\alpha_i\\) is the absorbance coefficient (\\(\\alpha_{SWR,i}\\) is an input parameter, whereas \\(\\alpha_{PAR,i} = \\alpha_{SWR,i} \\cdot 1.35\\)). 9.1.2 Sunlit and shade leaves It is generally accepted that sunlit and shade leaves need to be treated separately for photosynthesis calculations (De Pury and Farquhar 1997). This separation is necessary because photosynthesis of shade leaves has an essentially linear response to irradiance, while photosynthesis of leaves in sunflecks is often light saturated and independent of irradiance. The proportion of sunlit leaves, i.e. leaves in a canopy layer \\(j\\) that the direct light beams (sunflecks) reach is: \\[\\begin{equation} f_{SL, j} = \\exp\\left( \\sum_{k&gt;j}^{l}{\\sum_{i}^{c}{-k_{b} \\cdot LAI^{all}_{i,k}}}\\right) \\cdot \\exp\\left( \\sum_{i}^{c}{-k_{b} \\cdot 0.5\\cdot LAI^{all}_{i,j}}\\right) \\end{equation}\\] From this we can derive the (expanded) leaf area of each layer that is affected by direct light beams (i.e. the amount of sunlit and shade leaves): \\[\\begin{eqnarray} LAI^{sunlit}_{i,j} &amp;=&amp; f_{SL,j} \\cdot LAI^{\\phi}_{i,j} \\\\ LAI^{shade}_{i,j} &amp;=&amp; (1 - f_{SL,j}) \\cdot LAI^{\\phi}_{i,j} \\tag{9.1} \\end{eqnarray}\\] As an example we will consider a canopy of one species of LAI = 2, divided into ten layers with constant leaf density: LAI = 2 nlayer = 10 LAIlayerlive = matrix(rep(LAI/nlayer,nlayer),nlayer,1) LAIlayermax = matrix(rep(LAI/nlayer,nlayer),nlayer,1) LAIlayerdead = matrix(0,nlayer,1) kb = 0.8 kd_PAR = 0.5 kd_SWR = kd_PAR/1.35 alpha_PAR = 0.9 gamma_PAR = 0.04 gamma_SWR = 0.05 alpha_SWR = 0.7 This canopy definition leads to a percentage of the above-canopy irradiance reaching each layer (Anten and Bastiaans 2016). Extinction of direct radiation also defines the proportion of leaves of each layer that are affected by sunflecks (i.e. the proportion of sunlit leaves). Both outcomes are illustrated in the figure below: Figure 9.1: The left panel shows irradiance per layer of diffuse and direct PAR and SWR assuming a LAI of 2 equally distributed among layers (see function light_layerIrradianceFraction()). The right panel shows the corresponding proportions of sunlit and shade leaves in each layer (see function light_layerSunlitFraction()). 9.1.3 Short-wave radiation absorbed by canopy elements The amount of absorbed diffuse radiation per leaf area unit of cohort \\(i\\) within a given canopy layer \\(j\\) is calculated as: \\[\\begin{equation} \\Phi_{dif,i,j} = I_{dif,j} \\cdot k_{d,i} \\cdot \\alpha_i^{0.5} \\exp\\left[ \\sum_{h}^{c}{-k_{d,h}\\cdot \\alpha_i^{0.5}\\cdot 0.5\\cdot LAI^{all}_{h,j}}\\right] \\end{equation}\\] The amount of absorbed scattered beam radiation per leaf area unit of cohort \\(i\\) within a given canopy layer \\(j\\) is calculated as: \\[\\begin{equation} \\Phi_{sca,i,j} = I_{b,j} \\cdot k_{b} \\left( \\alpha_i^{0.5}\\cdot \\exp \\left( \\sum_{h}^{c}{-k_{b}\\cdot \\alpha_i \\cdot 0.5\\cdot LAI^{all}_{h,i}}\\right) \\\\ - \\frac{\\alpha_i}{(1-\\gamma_i)}\\cdot \\exp\\left( \\sum_{h}^{c}{-k_{b}\\cdot 0.5\\cdot LAI^{all}_{h,i}}\\right) \\right) \\end{equation}\\] Finally, the direct radiation absorbed by a unit of sunlit leaf area of cohort \\(i\\) in a canopy layer \\(j\\) does not depend on the position of the canopy layer and is: \\[\\begin{equation} \\Phi_{dir,i,j} = I_{beam} \\cdot \\alpha_i \\cdot 0.5/\\sin{\\beta} \\end{equation}\\] where \\(\\beta\\) is the solar elevation angle in radians, which changes throughout the day (see section 4.3 of the reference manual for package meteoland). The amount of light absorbed by sunlit/shaded foliage of cohort \\(i\\) in layer \\(j\\) per leaf area unit (\\(\\Phi^{sunlit}_{i,j}\\) and \\(\\Phi^{shade}_{i,j}\\), respectively) is: \\[\\begin{eqnarray} \\Phi^{sunlit}_{i,j} &amp;=&amp; \\Phi_{dif,i,j} + \\Phi_{sca,i,j} + \\Phi_{dir,i,j} \\\\ \\Phi^{shade}_{i,j} &amp;=&amp; \\Phi_{dif,i,j} + \\Phi_{sca,i,j} \\tag{9.2} \\end{eqnarray}\\] Let us show how all this works in an example. Regarding incoming light, we assume the following direct and diffuse irradiance at the top of the canopy: solarElevation = 0.67 SWR_direct = 1100 SWR_diffuse = 300 PAR_direct = 550 PAR_diffuse = 150 Solar elevation is the angle between the sun and the horizon (i.e. the complement of the zenith angle). Under these conditions, and for the same canopy used for fig. 9.1, the amount of PAR and SWR absorbed per unit of leaf area at each canopy layer is (Anten and Bastiaans 2016): Figure 9.2: PAR (left) and SWR (right) absorbed per unit of sunlit/shade leaf area at each canopy layer (\\(I^{sunlit}_{i,j}\\) and \\(I^{shade}_{i,j}\\), respectively;see function light_cohortSunlitShadeAbsorbedRadiation()). The SWR absorbed per ground area unit by sunlit and shade foliage of cohort \\(i\\) in canopy layer \\(j\\) is: \\[\\begin{eqnarray} K_{abs,i,j}^{sunlit} &amp;=&amp; \\Phi^{sunlit}_{i,j} \\cdot LAI^{sunlit}_{i,j} \\\\ K_{abs,i,j}^{shade} &amp;=&amp; \\Phi^{shade}_{i,j} \\cdot LAI^{shade}_{i,j} \\end{eqnarray}\\] The previous quantities can be aggregated across cohorts or layers. The SWR absorbed per ground area unit by cohort \\(i\\) (\\(K_{abs,i}\\)) is found using: \\[\\begin{equation} K_{abs,i} = \\sum_j^l{K_{abs,i,j}^{sunlit} + K_{abs,i,j}^{shade}} = K_{abs,i}^{sunlit} + K_{abs,i}^{shade} \\end{equation}\\] where \\(K_{abs,i}^{sunlit}\\) and \\(K_{abs,i}^{shade}\\) are the SWR absorbed per ground area unit by sunlit and shade foliage, respectively, of cohort \\(i\\). Similarly, the SWR absorbed by canopy layer \\(j\\) (\\(K_{abs,j}\\)) is found using: \\[\\begin{equation} K_{abs,j} = \\sum_i^c{K_{abs,i,j}^{sunlit} + K_{abs,i,j}^{shade}} \\end{equation}\\] and the SWR absorbed by the whole canopy (\\(K_{abs,ca}\\)) is: \\[\\begin{equation} K_{abs,ca} = \\sum_j^l{K_{abs,j}} = \\sum_i^c{K_{abs,i}} =\\sum_i^c{\\sum_j^l{K_{abs,i,j}^{sunlit} + K_{abs,i,j}^{shade}}} \\end{equation}\\] 9.1.4 Short-wave radiation absorbed by the soil The instantaneous shortwave radiation reaching the soil is calculated separately for direct beam and diffuse radiation: \\[\\begin{eqnarray} I_{beam, soil} &amp;=&amp; I_{beam} \\cdot \\exp\\left[ \\sum_{h=j+1}^{l}{\\sum_{i}^{c}{-k_{b}\\cdot \\alpha_i^{0.5} \\cdot LAI^{all}_{i,h}}}\\right]\\\\ I_{dif, soil} &amp;=&amp; I_{dif} \\cdot \\exp\\left[ \\sum_{h=j+1}^{l}{\\sum_{i}^{c}{-k_{d,i}\\cdot LAI^{all}_{i,h}}}\\right] \\end{eqnarray}\\] where \\(I_{beam}\\) and \\(I_{dif}\\) are the direct and diffuse irrradiance at the top of the canopy, \\(k_{b}\\) is the extinction coefficient for direct light (\\(k_{b} = 0.8\\)) and \\(k_{d,i}\\) is the extinction coefficient of cohort \\(i\\) for diffuse SWR. From these, the SWR absorbed by the soil (\\(K_{abs,soil}\\)) is found by: \\[\\begin{equation} K_{abs,soil} = (1 - \\gamma_{SWR, soil})\\cdot (I_{beam, soil} + I_{dif, soil}) \\end{equation}\\] where \\(\\gamma_{SWR, soil} = 0.10\\) is the SWR reflectance (10% albedo) of the soil. 9.2 Long-wave radiation Long-wave radiation (LWR) transfer within the canopy is based on the SHAW model (Flerchinger et al. 2009). 9.2.1 Long-wave radiation balance by canopy layers Assume canopy layers are ordered from \\(j=1\\) (in contact with the soil) to \\(j=l\\) (in contact with the atmosphere above the boundary layer). The procedure first calculates downward LWR below each canopy layer, \\(L_{down,j}\\), from \\(j=l\\) to \\(j=1\\). The downward LWR below layer \\(j\\) is calculated as: \\[\\begin{equation} L_{down,j} = \\tau_{j} \\cdot L_{down,j+1} + (1 - \\tau_j) \\cdot \\epsilon_{can} \\cdot \\sigma \\cdot (T_{air,j}+273.16)^{4} \\end{equation}\\] where \\(L_{down,j+1}\\) is the downward LWR of the layer above (\\(L_{atm}\\) in the case of \\(j=l\\)), \\(T_{air,j}\\) is the air temperature of layer \\(j\\), \\(\\tau_j\\) is the diffuse transmissivity of layer \\(j\\), \\(\\sigma = 5.67 \\cdot 10^{-8}\\,W \\cdot K^{-4}\\cdot m^{-2}\\) is the Stephan-Boltzmann constant and \\(\\epsilon_{can} = 0.97\\) is the canopy emmissivity. Diffuse transmissivity values are defined by cohort \\(i\\) and layer \\(j\\) using: \\[\\begin{equation} \\tau_{i,j} = \\exp{(-k_{LWR} \\cdot LAI^{all}_{i,j})} \\end{equation}\\] where \\(k_{LWR} = 0.7815\\) is the extinction coefficient for LWR. The transmissivity of layer \\(j\\) is simply \\(\\tau_{j} = \\sum_i^c {\\tau_{i,j}}\\). Once we know \\(L_{down,1}\\) we can calculate the upwards LWR from the soil (\\(L_{up,s}\\)) using: \\[\\begin{equation} L_{up,soil} = (1- \\epsilon_{soil}) \\cdot L_{down,1} + \\epsilon_{soil} \\cdot \\sigma \\cdot (T_{soil,1}+273.16)^{4} \\end{equation}\\] where \\(T_{soil, 1}\\) is the temperature of the topmost soil layer and \\(\\epsilon_{soil} = 0.97\\) is the soil emmissivity. Now we calculate upward LWR from \\(j=1\\) to \\(j=J\\): \\[\\begin{equation} L_{up,j} = \\tau_{j} \\cdot L_{up,j-1} + (1 - \\tau_j) \\cdot \\epsilon_{can} \\cdot \\sigma \\cdot (T_{air,j}+273.16)^{4} \\end{equation}\\] where \\(L_{up,j-1}\\) is the downward LWR of the layer below (\\(L_{up,soil}\\) in the case of \\(j=1\\)). Once we have downward and upward LWR fluxes, we can estimate the net LWR absorbed within canopy layer \\(j\\) using: \\[\\begin{equation} L_{net,j} = \\epsilon_{can} \\cdot (1 - \\tau_j) \\cdot (L_{down,j} + L_{up,j} - \\sigma \\cdot (T_{air,j}+273.16)^{4}) \\end{equation}\\] 9.2.2 Net long-wave radiation of the whole canopy and the soil Net LWR can be aggregated at the scale of the whole canopy. The net LWR of the whole canopy (\\(L_{net,can}\\)) is simply the sum across layers of net LWR: \\[\\begin{equation} L_{net,can} = \\sum_j^l{L_{net,j}} \\end{equation}\\] whereas the net LWR of the soil (\\(L_{net,soil}\\)) is: \\[\\begin{equation} L_{net,soil} = \\epsilon_{soil} \\cdot (L_{down,1} - \\sigma \\cdot (T_{soil,1}+273.16)^{4}) \\end{equation}\\] 9.2.3 Long-wave radiation balance by plant cohorts The net LWR per leaf area unit absorbed within canopy layer \\(j\\) can also be decomposed among plant cohorts. The net LWR of cohort \\(i\\) in layer \\(j\\) is found using the relative proportion of light absorbed by the cohort (i.e. the complement of its diffuse transmissivity): \\[\\begin{equation} L_{net,i, j} = L_{net,j} \\cdot \\frac{1-\\tau_{i,j}}{\\sum_h{1-\\tau_{h,j}}} \\end{equation}\\] from which we can estimate \\(L^{sunlit}_{net,i}\\) and \\(L^{shade}_{net,i}\\), the average net LWR per leaf area unit for sunlit and shade leaves of cohort \\(i\\), respectively: \\[\\begin{equation} L^{sunlit}_{net,i} = \\frac{\\sum_j^l{L_{net,i, j} \\cdot LAI^{sunlit}_{i,j}}}{\\sum_j^l{LAI^{sunlit}_{i,j}}} \\,\\,\\,\\, L^{shade}_{net,i} = \\frac{\\sum_j^l{L_{net,i, j} \\cdot LAI^{shade}_{i,j}}}{\\sum_j^l{LAI^{shade}_{i,j}}} \\end{equation}\\] Bibliography "],["planthydraulics.html", "Chapter 10 Plant hydraulics 10.1 Vulnerability curves 10.2 Supply functions 10.3 Water content of plant tissues 10.4 Plant hydraulics with water compartments", " Chapter 10 Plant hydraulics The supply-loss theory of plant hydraulics, presented by Sperry and Love (2015) and used in Sperry et al. (2017), uses the physics of flow through soil and xylem to quantify how steady-state canopy water supply declines with drought and ceases by hydraulic failure. The theory builds on the hydraulic model of Sperry et al. (1998) and can be applied to different segmentations of the soil-plant continuum. The advanced water balance model of medfate implements steady-state hydraulic supply functions as described in Sperry and Love (2015). The hydraulic network is described using \\((S \\times 2 + 2 + 1)\\) resistance elements, with soil being represented in \\(S\\) different soil layers. For each soil layer there is a rhizosphere element in series with a root xylem element. The \\(S\\) soil layers are in parallel up to the root crown. From there there are two stem xylem segments and a final leaf segment, all in series. Supply functions are used in the advanced water model to determine photosynthesis, stomatal conductance and transpiration (see chapters 11 and 12). Sections 10.1 and 10.2 in this chapter describe in detail how hydraulic supply functions are calculated, starting from their building blocks, i.e. vulnerability curves. Althougth the model implements this network representation of the soil-plant continuum, simpler one-element, two-element and three-element representations are first introduced to facilitate understanding. Plants have water within their tissues and this source of water is more readily accessible than soil water. To consider plant water storage compartments explicitly these need to be combined with supply functions in some way. In medfate we divide the hydraulic network into two parts: (1) the first is made of \\((S \\times 2 + 1)\\) elements and draws water from the soil, pouring it into the stem xylem; and (2) the second is made of \\((1+1)\\) elements and draws water from stem xylem bringing it up to the leaves. Each part has its own supply function and the stem xylem segments exchange water with water storage compartments. Sections 10.3 and 10.4 are devoted to explain how plant water storage capacity is estimated and how it is integrated with the use of supply functions. 10.1 Vulnerability curves Vulnerability curves form the basis of hydraulic calculations. Let us use \\(k\\) to denote hydraulic conductance, i.e. instantaneous flow rate per leaf surface unit and per pressure drop (in \\(mmol \\cdot s^{-1} \\cdot m^{-2} \\cdot MPa^{-1}\\)). Each element of the hydraulic network has a vulnerability curve \\(k(\\Psi)\\) that starts at maximum hydraulic conductance (\\(k_{max} = k(0)\\)) and declines as water pressure (\\(\\Psi\\)) becomes more negative. 10.1.1 Xylem vulnerability curves Xylem tissues are assigned a two-parameter Weibull function as the vulnerability curve \\(k(\\Psi)\\): \\[\\begin{equation} k(\\Psi) = k_{max}\\cdot e^{-((\\Psi/d)^c)} \\tag{10.1} \\end{equation}\\] where \\(k_{max}\\) is the maximum hydraulic conductance, and \\(c\\) and \\(d\\) are species-specific and tissue-specific parameters. Note that parameter \\(d\\) is the water potential (in MPa) at which \\(k(\\Psi)/k_{max} = e^{-1} = 0.367\\), i.e. the water potential at which hydraulic conductance is 36.7% of its maximum value. Parameter \\(c\\) controls the shape of the vulnerability curve (exponential shape with no threshold has \\(c \\leq 1\\); and sigmoidal shape with threshold occurs when \\(c &gt; 1\\)). The concept of vulnerability curve can be used to specify the relationship between pressure and conductance in any portion of the flow path. For example, we define the following parameter values for a stem xylem (\\(k_{stem,max}\\) and parameters \\(c_{stem}\\) and \\(d_{stem}\\) of the vulnerability curve): kstemmax = 5.0 # mmol·m-2·s-1·MPa-1 stemc = 3 stemd = -3.0 # MPa For root xylem (\\(k_{root,max}\\)), we may assume a higher conductance (i.e. higher efficiency) but also higher vulnerability to cavitation (defined by parameters \\(c_{root}\\) and \\(d_{root}\\)): krootmax = 6.6 # mmol·m-2·s-1·MPa-1 rootc = 2 rootd = -2.5 #MPa Leaf vulnerability curve \\(k_{leaf}(\\Psi)\\) can be modelled using the same equation as for stem xylem: \\[\\begin{equation} k_{leaf}(\\Psi) = k_{leaf,max}\\cdot e^{-((\\Psi/d_{leaf})^{c_{leaf}})} \\tag{10.2} \\end{equation}\\] where \\(k_{leaf,max}\\) is the leaf maximum hydraulic conductance. Values defined below specify higher conductance for leaves but also slightly higher vulnerability: kleafmax = 10 leafc = 2 leafd = -2 With these parameter values, the vulnerability curves for root, stem and leaf are (see hydraulics_xylemConductance() and hydraulics_vulnerabilityCurvePlot()): Figure 10.1: Example vulnerability curves corresponding to the parameters defined above for stem, root and leaf segments. The dash-dot line between 0 and \\(\\Psi_{cav} = -2.5\\) MPa indicates the modification of the stem xylem vulnerability curve when cavitation has occurred (i.e., previous embolism limits the maximum conductance value), as indicated in Sperry et al. (2017). The corresponding proportion of stem conductance loss (\\(PLC_{stem}\\)) can be found using the stem vulnerability curve: \\[\\begin{equation} PLC_{stem}(\\Psi_{cav}) = 1.0 - \\frac{k_{stem}(\\Psi_{cav})}{k_{stem,max}} = 1.0 - e^{-((\\Psi_{cav}/{d_{stem}})^{c_{stem}})} \\end{equation}\\] or, in R: 1.0 - exp(-(-2.5/stemd)^stemc) ## [1] 0.4393754 Although root xylem are more vulnerable to the formation of emboli for a given potential, it is generally accepted that the less negative potentials of root xylem compared to the stem lead to cavitation occurring more often in the stem. The constrain created by cavitation has an effect on the calculation of the flow rates and derived quantities (see below). 10.1.2 Rhizosphere vulnerability curve The rhizosphere conductance function \\(k_{rhizo}(\\Psi)\\) is modelled as a van Genuchten function (Genuchten 1980) (this choice is the reason why the water retention curve also needs to be modelled with van Genuchten): \\[\\begin{eqnarray} k_{rhizo}(\\Psi) &amp;=&amp; k_{rhizo,max} \\cdot v^{(n-1)/(2\\cdot n)} \\cdot ((1-v)^{(n-1)/n}-1)^2 \\\\ v &amp;=&amp; [(\\alpha \\Psi)^{n}+1]^{-1} \\tag{10.3} \\end{eqnarray}\\] where \\(k_{rhizo,max}\\) is the maximum rhizosphere conductance, and \\(n\\) and \\(\\alpha\\) are texture-specific parameters (Leij et al. 1996; Carsel and Parrish 1988). These are automatically set by function soil() when initializing soil objects (see section 2.2.3), but we can use function soil_vanGenuchtenParamsCarsel() to derive them from texture types: textures = c(&quot;Sandy loam&quot;,&quot;Silt loam&quot;, &quot;Clay&quot;) #Textural parameters #Sandy clay loam p1 = soil_vanGenuchtenParamsCarsel(textures[1]) p1 ## alpha n theta_res theta_sat Ks ## 764.983 1.890 0.065 0.410 69513.524 alpha1 = p1[1] n1 = p1[2] #Silt loam p2 = soil_vanGenuchtenParamsCarsel(textures[2]) p2 ## alpha n theta_res theta_sat Ks ## 203.9955 1.4100 0.0670 0.4500 7077.1687 alpha2 = p2[1] n2 = p2[2] #Silty clay p3 = soil_vanGenuchtenParamsCarsel(textures[3]) p3 ## alpha n theta_res theta_sat Ks ## 81.59819 1.09000 0.06800 0.38000 3145.40832 alpha3 = p3[1] n3 = p3[2] We can estimate maximum rhizosphere conductance values assuming that they account for an average percentage of the resistance (e.g. 15%) across the continuum (see functions hydraulics_averageRhizosphereResistancePercent() and hydraulics_findRhizosphereMaximumConductance()): percentResistance = 15 #Sandy clay loam krmax1 =hydraulics_findRhizosphereMaximumConductance(percentResistance, n1,alpha1, krootmax, rootc,rootd, kstemmax, stemc, stemd, kleafmax, leafc, leafd) krmax1 ## [1] 7.375648e+14 #Silt loam krmax2 =hydraulics_findRhizosphereMaximumConductance(percentResistance, n2,alpha2, krootmax, rootc,rootd, kstemmax, stemc, stemd, kleafmax, leafc, leafd) krmax2 ## [1] 3420747735 #Silty clay krmax3 =hydraulics_findRhizosphereMaximumConductance(percentResistance, n3,alpha3, krootmax, rootc,rootd, kstemmax, stemc, stemd, kleafmax, leafc, leafd) krmax3 ## [1] 36831905 With these parameters, the resulting \\(k_{rhizo}(\\Psi)\\) functions can be displayed using the function hydraulics_vanGenuchtenConductance(): Figure 10.2: Example rhizosphere vulnerability curves (i.e. Van Genuchten functions) for three different soil textures. 10.1.3 Xylem sap viscosity The ease of water flow (i.e. hydraulic conductance or resistance) is dependent on water viscosity, which fluctuates as a function of temperature and dissolved substances. Xylem sap can be considered to have negligible amounts of solutes, but temperature is still rellevant factor of viscosity. The dynamic viscosity of water \\(V_w\\) varies with temperature (relative to its viscosity at 20ºC) according to the Vogel equation: \\[\\begin{equation} V_w(T) = \\exp \\left[-3.7188+ \\frac{578.919}{-137.546 + T} \\right] \\end{equation}\\] where \\(T\\) is the temperature of the medium in Kelvin. Temperature of segments (roots, stem, leaves) is used to correct maximum conductances simply as follows: \\[\\begin{equation} k_{max, T} = \\frac{k_{max}}{V_w(T)} \\end{equation}\\] where \\(k_{max}\\) is the maximum conductance describing the vulnerability curve, assumed to be determined at 20ºC. 10.2 Supply functions The supply function describes the steady-state rate of water supply (i.e. flow) for transpiration (\\(E\\)) as a function of water potential drop. The steady-state flow rate \\(E_i\\) through any \\(i\\) element of the continuum is related to the flow-induced drop in pressure across that element (\\(\\Delta \\Psi_i = \\Psi_{down} - \\Psi_{up}\\)) by the integral transform of the element’s vulnerability curve \\(k_i(\\Psi)\\) (Sperry and Love 2015): \\[\\begin{equation} E_i = \\int_{\\Psi_{up}}^{\\Psi_{down}}{k_i(\\Psi) d\\Psi} \\tag{10.4} \\end{equation}\\] where \\(\\Psi_{up}\\) and \\(\\Psi_{down}\\) are the upstream and downstream water potential values, respectively. The integral transform assumes infinite discretization of the flow path. The supply function can be defined for individual elements of the continuum or for the whole soil-plant continuum using different hydraulic networks. In the following subsections we illustrate the supply function for different cases. 10.2.1 Supply function for a single xylem element In the case of a single xylem element, the supply function describes the steady-state flow rate as a function of pressure at the stem top (\\(\\Psi_{canopy}\\)). It can be calculated by numerical integration or aproximated using an incomplete gamma function. The shape of the supply function starting at different root crown water potential values (\\(\\Psi_{rootcrown}\\)) is (see function hydraulics_EXylem()): Figure 10.3: Supply function of a single xylem element starting at different root crown water potential values. Left pane shows the uncavitated supply functions and right pane shows the supply functions that are obtained in the case of a cavitated xylem (i.e. without refilling), assuming that the minimum water potential experienced so far was -2.5 MPa. Note the linear part of the flow rate between \\(\\Psi_{rootcrown}\\) and this limit. The supply function of a rhizosphere element relates the steady-state flow rate to the pressure inside the roots (\\(\\Psi_{root}\\)). It is calculated by numerical integration of the van Genuchten function, for which we use the analytical approximation of Van Lier, Neto, and Metselaar (2009) (see function hydraulics_EVanGenuchten()). In the figure below, we draw examples of the supply function for the rhizosphere. The nearly vertical lines indicate that for many values of \\(E_i\\) the corresponding drop in water potential through the rhizosphere will be negligible. Only for increasingly negative soil water potential values the decrease in water potential through the rhizosphere becomes relevant. Both in the case of a xylem element or a rhyzosphere element the derivative \\(dE_i/d\\Psi\\) of the supply function is equal to the corresponding vulnerability curve. Figure 10.4: Supply functions of the rhizosphere starting at the four different values of bulk soil pressure (\\(\\Psi_{soil}\\)) and for the same three texture types used for vulnerability curves. 10.2.2 Supply function of two elements in series Let us describe the soil-plant continuum is represented using two elements in series (rhizosphere + stem xylem). In this case, the supply function has to be calculated by using the previous supply functions sequentially. The \\(E_i\\) is identical for each element and equal to the canopy \\(E\\). Since \\(\\Psi_{soil}\\) is known, one first inverts the supply function of the rhizosphere to find \\(\\Psi_{root}\\) (see function hydraulics_E2psiVanGenuchten()) and then inverts the supply function of the xylem to find \\(\\Psi_{canopy}\\) (see function hydraulics_E2psiXylem()). The two operations can be summarized in a single supply function describing the potential rate of water supply for transpiration (\\(E\\)) as function of the canopy xylem pressure (\\(\\Psi_{canopy}\\)), starting from different bulk soil (\\(\\Psi_{soil}\\)) values (see function hydraulics_supplyFunctionTwoElements()): Figure 10.5: Example of two-element supply functions describing the potential rate of water supply for transpiration (\\(E\\)) as function of the canopy xylem pressure (\\(\\Psi_{canopy}\\)), starting from different bulk soil (\\(\\Psi_{soil}\\)) values and for different soil textures. Left/right panel shows uncavitated/cavitated supply functions. The supply function for the whole continuum contains much information. The \\(\\Psi\\) intercept at \\(E=0\\) represents the (predawn) canopy sap pressure which integrates the rooted soil moisture profile. As \\(E\\) increments from zero, the disproportionately greater drop in \\(\\Psi_{canopy}\\) results from the loss of conductance. As the soil dries the differences in flow due to soil texture become more apparent. The derivative of the whole continuum supply function, \\(dE/d\\Psi\\), is not equal to either of the vulnerability curves and it has to be obtained numerically. The derivative functions corresponding to the supply functions shown in the previous figure are: Figure 10.6: Derivatives of two-element supply functions corresponding to figure 10.5. Left/right panel shows the derivatives of uncavitated/cavitated supply functions. The derivative \\(dE/d\\Psi_{canopy}\\) is the conductance if the entire continuum was exposed to \\(\\Psi_{canopy}\\) (Sperry and Love 2015). It corresponds to the local loss of hydraulic conductance at the downstream end of the flow path. It falls towards zero for asymptotic critical values (\\(E_{crit}\\)). For a cavitated system \\(dE/d\\Psi_{canopy}\\) can be rather flat, in accordance with the close to linear part of the supply function. 10.2.3 Supply function of three elements in series If the soil-plant continuum is represented using elements in series (rhizosphere + stem xylem + leaf), the resulting overall conductance and resistance fractions (under wet conditions) are: rstemmin = 1/kstemmax rleafmin = 1/kleafmax #Percentages of minimum resistance rvec = c(rstemmin,rleafmin) 100*rvec/sum(rvec) ## [1] 66.66667 33.33333 #Maximum overall conductance 1/sum(rvec) ## [1] 3.333333 As before, the supply function has to be calculated sequentially, knowing that \\(E_i\\) is identical through each element. Since \\(\\Psi_{soil}\\) is known, one first inverts the supply function of the rhizosphere to find \\(\\Psi_{root}\\) and then inverts the supply function of the xylem to find \\(\\Psi_{stem}\\). Finally, one inverts the supply function of the leaf element to find \\(\\Psi_{leaf}\\). As before, the three operations can be summarized in a single supply function describing the potential rate of water supply for transpiration (\\(E\\)) as function of the leaf pressure (\\(\\Psi_{leaf}\\)), starting from different bulk soil (\\(\\Psi_{soil}\\)) values (see function hydraulics_supplyFunctionThreeElements()): Figure 10.7: Example of three-element supply functions describing the potential rate of water supply for transpiration (\\(E\\)) as function of the leaf pressure (\\(\\Psi_{leaf}\\)), starting from different bulk soil (\\(\\Psi_{soil}\\)) values and for different soil textures. Left/right panel shows uncavitated/cavitated supply functions. Note that overall conductance and the maximum flow of the supply function are smaller in this case than in the representation using two elements in series, because we added a new resistance (leaves). While the rhizosphere component only adds a significant resistance when the soil dries, considering the leaf segment (or a root xylem segment) substantially increases the overall resistance of the continuum. Higher vulnerability of leaves also makes the curve to saturate for less negative soil water potentials. The derivative functions corresponding to the supply functions shown in the previous figure are (note the highest value being equal to the overall maximum conductance): Figure 10.8: Derivatives of three-element supply functions corresponding to figure 10.7. Left/right panel shows the derivatives of uncavitated/cavitated supply functions. 10.2.4 Supply function of a root system So far we considered supply functions of elements in series, but resistance elements will be in parallel if the soil is represented using \\(S&gt;1\\) different layers. For each soil layer there is a rhizosphere element in series with a root xylem element. The \\(S\\) soil layers are in parallel up to the root crown. Network of \\(S\\) rhizosphere components and root layers in parallel there are \\(S+1\\) unknown pressures: the \\(S\\) root surface pressures (\\(\\Psi_{rootsurf,1},\\dots,\\Psi_{rootsurf,S}\\)) and the root crown pressure at the downstream junction for all root components (\\(\\Psi_{rootcrown}\\)). The unknown pressures are solved, for each specified total flow value \\(E\\), using multidimensional Newton-Raphson on a set of equations for steady-state flow (Sperry et al. 2016): \\[\\begin{eqnarray} E_{rhizo,s}-E_{root,s} &amp;=&amp; 0 \\\\ \\sum_{s=1}^{S}{E_{root,s}}-E &amp;=&amp; 0 \\end{eqnarray}\\] where \\(E_{rhizo,s}\\) and \\(E_{root,s}\\) are steady-state supply flows calculated using the integrals of either van Genuchten or Weibull function as vulnerability curves, respectively. In the case of rhizosphere elements, \\(\\Psi_{up}=\\Psi_{soil,s}\\) and in the case of root elements \\(\\Psi_{up}=\\Psi_{rootsurf,s}\\). Solving the steady-state equations also provides values for flow across each of the parallel paths \\(E_{rhizo,s} = E_{root,s}\\). Figure 10.9: Schematic representation of hydraulics in a root network As an example, we start by defining the water potential of three soil layers corresponding to four situations (analogously with the soil water potentials defined above): psiSoilLayers1 = c(-0.3,-0.2,-0.1) psiSoilLayers2 = c(-1.3,-1.2,-1.1) psiSoilLayers3 = c(-2.3,-2.2,-2.1) psiSoilLayers4 = c(-3.3,-3.2,-3.1) In a network of several soil layers, one has to divide the total rhizosphere and root xylem conductances among layers. Let layer widths (\\(d_s\\)) be: d = c(300,700,3000) #Soil layer widths in mm Now let \\(FRP_1\\), \\(FRP_2\\) and \\(FRP_3\\) be the proportion of fine root biomass in each soil layer (see section 2.3.4), which can be calculated using: Z50 = 200 #Parameter of LDR root distribution Z95 = 1200 #Parameter of LDR root distribution FRP = root_ldrDistribution(Z50, Z95, d) FRP ## [,1] [,2] [,3] ## [1,] 0.6652935 0.2749944 0.05971209 In the case of the rhizosphere conductances, we can simply define them (for each soil texture type) as: krhizomaxvec1 = krmax1*FRP krhizomaxvec2 = krmax2*FRP krhizomaxvec3 = krmax3*FRP To divide maximum root xylem conductance among soil layers we need weights inversely proportional to the length of transport distances (Sperry et al. 2016). Vertical transport lengths can be calculated from soil depths and radial spread can be calculated assuming cylinders with volume that has to be in accordance with the xylem root conductance (TO BE DESCRIBED). The whole process can be done using functions root_coarseRootSoilVolumeFromConductance() and root_coarseRootLengthsFromVolume(): rfc = c(20,50,70) Vol = root_coarseRootSoilVolumeFromConductance(1.0, 2500,krootmax, FRP,d, rfc) lengths = root_coarseRootLengthsFromVolume(Vol, FRP, d, rfc) lengths ## [1] 3621.093 2768.105 4513.795 weights = lengths/sum(lengths) Transport weights are quite different than the fine root biomass proportions. This is because radial lengths are largest for the first (top) layer and vertical lengths are largest for the third (bottom) layer. The root xylem conductances are (in this case they do not depend on soil texture): krootmaxvec = krootmax*weights krootmaxvec ## [1] 2.191987 1.675640 2.732373 Having all these maximum conductances, we can now build the supply functions for each soil texture and starting from the different soil water potential configurations (see function hydraulics_supplyFunctionBelowground()): Figure 10.10: Example of supply function for a root system (left) and its derivative (right) under different soil textures and starting from different soil water potential vectors. The derivative of \\(dE/d\\Psi_{rootcrown}\\) for the supply function of the root system is again obtained numerically. Solving the previous system of equations provides the water potentials in different points of the root system. Here we plot them for the results of silt loam texture and the first and last soil potential vectors defined above: Figure 10.11: Water potentials inside fine roots and at the root crown, for overall flow rates corresponding to fig. 10.10. Note that when soil is not dry (first situation) pressure drop in the rhizosphere is negligible, but not the pressure drop in the root xylem. For drier soils rhizosphere becomes more relevant. We can also plot the flow rates across each of the parallel paths (again corresponding to the results of silt loam texture and for the four soil potential vectors): Figure 10.12: Flow rates inside roots corresponding to each soil layer, for overall flow rates corresponding to fig. 10.10. Note that the contribution of each soil layer depends on the soil conditions and the total amount of flow. For a low total flow rate some layers may have negative flows if their potential is lower than others, which in a dynamic context will cause hydraulic redistribution of water among soil layers. 10.2.5 Supply function of the soil-plant continuum As mentioned above, medfate uses a hydraulic network of \\((S \\times 2 + 2 + 1)\\) resistance elements to represent the soil-plant continuum, with soil being represented in \\(S\\) different layers. As before, the \\(S\\) soil layers are in parallel up to the root crown and each soil layer requires at least a rhizosphere and a root segment. From the root crown there are two stem xylem elements in series and a final leaf element. The whole hydraulic network is illustrated in the figure below. To build the supply function for the network, we proceed by calculating water potentials in the network for each value of flow. For any given \\(E\\) value we start by calculating flows and potentials within the root system. After that, the water potential at the mid of the stem (\\(\\Psi_{stem,1}\\)) is obtained using the inverse of the stem supply function and setting \\(\\Psi_{up}=\\Psi_{rootcrown}\\), and the water potential at the upper end of the stem, \\(\\Psi_{stem, 2}\\), is obtained similarly but setting \\(\\Psi_{up}=\\Psi_{stem,1}\\). In both cases the maximum conductance for segments equal to \\(2 \\cdot k_{stem,\\max,i}\\). Leaf water potential (\\(\\Psi_{leaf}\\)) is finaly obtained using the inverse of the leaf supply function and setting \\(\\Psi_{up}=\\Psi_{stem, 2}\\) and assuming a steady-state flow \\(E\\). The whole supply function \\(E(\\Psi_{leaf}\\)) is obtained repeating these operations from \\(E=0\\) to a critical value \\(E_{crit}\\). Figure 10.13: Schematic representation of hydraulics in a whole-plant network The following figure shows network supply functions for each soil texture and starting from the different soil water potential configurations (see function hydraulics_supplyFunctionNetwork()): Figure 10.14: Examples of supply functions for a hydraulic network describing the potential rate of water supply for transpiration (\\(E\\)) as function of the leaf pressure (\\(\\Psi_{leaf}\\)), starting from different bulk soil (\\(\\Psi_{soil}\\)) values and for different soil textures. Left/right panel shows uncavitated/cavitated supply functions. As with previous representations of the soil-plant continuum, the derivative of \\(dE/d\\Psi_{leaf}\\) for the network topology is obtained numerically: Figure 10.15: Derivatives of supply functions corresponding to figure 10.14. Left/right panel shows the derivatives of uncavitated/cavitated supply functions. As with the root system, we can know the water potentials in different points of the continuum. Here we plot them for the results of silt loam texture and the first and last soil potential vectors defined above: Figure 10.16: Water potential in network elements corresponding to overall flow rates of figure 10.14. Left/right panel shows the derivatives of uncavitated/cavitated supply functions. A supply function of the soil-plant hydraulic network defines a set steady-state flows and corresponding water potentials given fixed values of soil moisture. Hence, supply functions need to be updated whenever soil moisture is updated, i.e. once a day in the water balance model (see subsection 7.4). This frequency should be enough in most cases, since soil water potentials change more slowly than plant water potentials. 10.3 Water content of plant tissues In medfate the relative water content of leaves and stems is tracked explicitly. Following Martin-StPaul, Delzon, and Cochard (2017), we consider two kind of tissues in (leaf and stem) plant segments (Tyree and Yang 1990). The first are conduits (tracheids or vessels), which will release water due to cavitation and may be refilled with water from adjacent living tissue or upstream segments. The second source of water is formed by more elastic living cells (i.e. parenchyma) and can potentially be a large source of water during relatively high water potentials. This source can be described using the relative water content of a symplasmic tissue. When capacitance effects are not considered, the relative water content of both kinds of plant tissues follow the water potential changes dictated by supply functions and stomatal regulation. In contrast, when plant capacitance effects are considered, leaf and stem symplastic tissues have their own water potential as state variable, they exchange water with leaf and stem xylem, respectively. A pressure-volume curve of a tissue relates its water potential against its relative water content (\\(RWC\\); \\(kg\\,H_2O \\cdot kg^{-1}\\,H_2O\\) at saturation). Pressure-volume theory is usually applied to leaf tissues (Bartlett, Scoffoni, and Sack 2012), but it can also be applied to other tissues such as sapwood or cambium cells. 10.3.1 Relative water content of symplasmic tissues For living cells, the relationship between \\(\\Psi\\) and \\(RWC\\) of the symplasmic fraction (\\(RWC_{sym}\\)) is achieved by separating \\(\\Psi\\) into osmotic (solute) potential (\\(\\Psi_{S}\\)) and the turgor potential (\\(\\Psi_{P}\\)): \\[\\begin{equation} \\Psi = \\Psi_{S} + \\Psi_{P} \\end{equation}\\] The relationship for \\(\\Psi_{P}\\) is: \\[\\begin{equation} \\Psi_{P} = -\\pi_0 -\\epsilon\\cdot (1.0 - RWC_{sym}) \\end{equation}\\] where \\(\\pi_0\\) (MPa) is the osmotic potential at full turgor (i.e. when \\(RWC_{sym} = 1\\)), and \\(\\epsilon\\) is the modulus of elasticity (i.e. the slope of the relationship). Assuming constant solute content, the relationship for \\(\\Psi_{S}\\) is: \\[\\begin{equation} \\Psi_{S} = \\frac{-\\pi_0}{RWC_{sym}} \\end{equation}\\] When \\(\\Psi \\leq \\Psi_{tlp}\\), the water potential at turgor loss point, then \\(\\Psi_{P} = 0\\) and \\(\\Psi = \\Psi_{S}\\). If \\(\\Psi &gt; \\Psi_{tlp}\\) then the two components are needed. The water potential at turgor loss point (\\(\\Psi_{tlp}\\)) can be found by (Bartlett, Scoffoni, and Sack 2012): \\[\\begin{equation} \\Psi_{tlp} = \\frac{\\pi_0 \\cdot \\epsilon}{\\pi_0 + \\epsilon} \\end{equation}\\] As an example, the following figure draws the pressure-volume curve for a tissue with \\(\\epsilon = 12\\) and \\(\\pi_0 = -3.0\\)MPa: To calculate \\(RWC_{sym}\\) from the water potential of a tissue, the previous equations need to be combined and, after isolating \\(RWC_{sym}\\), a quadratic relationship is obtained (Martin-StPaul, Delzon, and Cochard 2017). 10.3.2 Relative water content of apoplastic tissues In medfate it is assumed that apoplastic water fraction of an organ corresponds to the water in its xylem conduits. Xylem conduits consist of inelastic cells that have very small changes of water volume in relation to changes in water potential. However, xylem conduits release their water to the transpiration stream following the formation of emboli. As in Hölttä et al. (2009), we equate the relative water content of the apoplastic reservoir of a segment (leaves or stem) to the proportion of conductance lost (relative to the maximum conductance) for a given water potential: \\[\\begin{equation} RWC_{apo}(\\Psi_{apo}) = \\frac{k(\\Psi_{apo})}{k_{max}} = e^{-((\\Psi_{apo}/d)^c)} \\end{equation}\\] Hence we assume that the relationship between \\(\\Psi_{apo}\\) and the relative water content follows the same function as the relationship between \\(\\Psi_{apo}\\) and the proportion of conductance loss (i.e. the hydraulic vulnerability curve). Since cavitation in leaves is assumed reversible we have that the relative water content of the apoplastic fraction in leaves (\\(RWC_{leaf,apo}\\)) will follow the leaf xylem water potential as indicated above. In stems, however, cavitation may be non-reversible, so \\(RWC_{stem,apo}\\) will be dictated by the current level of embolisation, which is represented by \\(PLC_{stem}\\) and not by the current xylem water potential: \\[\\begin{equation} RWC_{stem,apo} = 1 - PLC_{stem} \\end{equation}\\] If water compartments are not considered, \\(PLC_{stem}\\) is determined by \\(\\Psi_{stem, cav}\\), the minimum stem water potential experienced so far. When water comparments are considered, increases in \\(PLC_{stem}\\) follow decreases in stem water content and the water released can contribute to the transpirational stream (Martin-StPaul, Delzon, and Cochard 2017). This will be treated in the next section. 10.3.3 Average relative water content of a segment The average relative water content in a given segment or organ (\\(RWC\\)) can be obtained by calculating \\(RWC_{apo}\\) and \\(RWC_{sym}\\) followed by assuming a constant apoplastic fraction \\(f_{apo}\\): \\[\\begin{equation} RWC = RWC_{apo} \\cdot f_{apo} + RWC_{sym} \\cdot (1 - f_{apo}) \\end{equation}\\] Normally the apoplastic fraction is large (~80%) in the stem and small (~15%) in leaves. Hence, the relative water content in stems will be mostly dictated by the level of cavitation, whereas that of leaves will mostly follow leaf symplastic water potential and the symplastic pressure-volume curve. 10.4 Plant hydraulics with water compartments Supply functions are very useful to estimate steady-state transpiration flows, i.e. situations where a constant transpiration flow through the hydraulic network generates a drop in water potential along the pathway. However, with this modelling strategy the water potential of plants is at least as negative as that of the soil. In other words, plants are hydraulically connected to the soil at any time. In reality, evaporation of water in leaf intercellular spaces generates a tension that is transmitted along the xylem and generating hydraulic lift. Water within xylem and adjacent tissues is a source of water more readily accessible for transpiration than soil water. Xylem conduits are quite inelastic (i.e. they have a very high elastic modulus) so their volumetric changes following diurnal changes in flow rate and water potential are small, and hence contribute little to capacitive water storage and retrieval. In contrast, more elastic living cells in the xylem and bark can potentially be a larger source of water during decreasing water potential. In addition, as xylem conduits cavitate they become filled with water vapour or gas, and nearly all the liquid water inside is freed to the transpiration stream. Cavitation can therefore affect the water status of a plant positively in the short-term due to this capacitive effect (Hölttä et al. 2009). Considering plant water compartments explicitly opens the door to simulating an effective plant disconnection from the soil, because a plant can stop drawing soil water and rely on its own water reserves. Moreover, one can estimate the time needed for plant dessication by taking into account stem and leaf water reserves, which should be greater for larger plants. 10.4.1 Design To consider plant water storage compartments medfate uses two supply functions (black and red arrows in figure below): The first supply function is made of (\\(S×2+1\\)) elements and draws water from the soil, pouring it into the stem xylem. This supply function is used to determine water uptake from each soil layer and defines an input instantaneous (steady-state) flow to the stem xylem compartment, \\(E_{stem, in}\\). The second supply is made of (\\(1+2+1\\)) elements (representing plant resistances) and is used to determine the rate of water flowing from stem up to the leaves for transpiration and photosynthesis, as in the model without water comparments. It defines the transpirational flow \\(E_{leaf, out}\\). It needs to be build from \\(\\Psi_{rootsurf}\\) to \\(\\Psi_{leaf}\\) (and not from \\(\\Psi_{stem,1}\\) to \\(\\Psi_{leaf}\\) only) because all plant resistances are needed to determine the relationship between \\(E_{leaf, out}\\) and \\(\\Psi_{leaf}\\). This division of water input and output from the stem allows considering the intermediate node, \\(\\Psi_{stem,1}\\), as the water potential of an explicit xylem water compartment from which water is drawn towards the leaves (\\(E_{stem, out}\\)) and where soil water is poured (\\(E_{stem, in}\\)). Following Hölttä et al. (2009), the xylem water compartment can be a source of water for transpiration when cavitation occurs. Following Steppe, Lemeur, and Vanrolleghem (2006), two symplasmic water reserve compartments are also included, which can also provide water for transpiration. The xylem compartment is hydraulically connected with a stem symplastic compartment (whose moisture level is represented by the state variable \\(\\Psi_{symp, stem}\\)). Another symplasmic compartment is considered at the leaf level (whose moisture level is represented by \\(\\Psi_{symp, leaf}\\)) that adds or withdraws water from the transpirational stream depending on differences between leaf xylem and symplastic water potentials. As the supply function #2 assumes a steady state flow from the stem to the leaves and atmosphere, the leaf symplastic water compartment is used to modulate how much of the steady-state flow will actually be drawn from the stem xylem compartment. In other words, the leaf lateral flow simply modifies the water demand from the leaves to the stem (i.e., it makes \\(E_{stem, out}\\) different from \\(E_{leaf, out}\\)). Figure 10.17: Schematic representation of hydraulics in a whole-plant network with water storage compartments The larger the three compartments in volume, the more water the plant will be able to transpire without needing a replacement of water from the soil. In case of edaphic drought and very much reduced soil-root conductance, the plant can be disconnected hydraulically from the soil and still loose small amounts of water (through cuticular transpiration) from these compartments. 10.4.2 Constitutive equations The way the previous architecture is implemented is the following. Two supply functions provide flows \\(E_{stem, in}\\) and \\(E_{leaf, out}\\), respectively. Two instantaneous water flows, \\(F_{lat, stem}\\) and \\(F_{lat, leaf}\\), are defined from Darcy’s law: \\[\\begin{eqnarray} F_{lat,stem} &amp;=&amp; k_{lat,stem} \\cdot (\\Psi_{symp,stem} - \\Psi_{stem,1}) \\\\ F_{lat,leaf} &amp;=&amp; k_{lat,leaf} \\cdot (\\Psi_{symp,leaf} - \\Psi_{leaf}) \\\\ \\end{eqnarray}\\] where \\(k_{lat,stem}\\) and \\(k_{lat,leaf}\\) are the lateral (between symplastic tissues and xylem) water conductance for stem and leaves, respectively. These conductance values are defined as control parameters. The flow leaving the stem is defined by the atmospheric demand minus the water supplied from the leaf symplasmic tissues (\\(F_{lat,leaf}\\) can be negative): \\[\\begin{equation} E_{stem, out} = E_{leaf, out} - F_{lat,leaf} \\end{equation}\\] And the mass balance in the stem xylem compartment is: \\[\\begin{equation} \\frac{\\delta m_{stem}} {\\delta t} = E_{stem, in} - E_{stem, out} + F_{lat, stem} \\end{equation}\\] However, the change in volume is composed of two terms: one arising from water movement in and out of the stem compartment and the other arising from the change in the gas volume caused by cavitation (Hölttä et al. 2009): \\[\\begin{equation} \\frac{\\delta V_{stem,apo}} {\\delta t} = \\frac{1}{\\rho_{w}}\\cdot \\frac{\\delta m_{stem}} {\\delta t} + \\frac{\\delta{V_{cav}}}{\\delta t} \\end{equation}\\] where \\(\\rho_{w}\\) is the density of water. If there has been an increase in \\(PLC\\), this creates a source of available water proportional to this change (Hölttä et al. 2009): \\[\\begin{equation} \\frac{\\delta{V_{cav}}}{\\delta t} = V_{stem,apo,max} \\cdot \\frac{\\delta{PLC_{stem}}}{\\delta t} \\end{equation}\\] where \\(V_{stem,apo,max}\\) is the capacity of the stem xylem compartment. So if \\(\\delta{PLC_{stem}} = 0\\) , \\(\\delta{V_{cav}}/\\delta t=0.0\\). Since we model \\(PLC\\) using the vulnerability curve, the above formulation of water released by cavitation assumes that the relationship between stem water potential and the proportion of cavitated conduits follows the same function as the relationship between stem water potential and the proportion of conductance loss (i.e. the hydraulic vulnerability curve). The change in water pressure in the stem xylem compartment following the change in water volume is: \\[\\begin{equation} \\frac{\\delta \\Psi_{stem,1}} {\\delta t} = \\epsilon_{xylem} \\cdot \\frac{1}{V_{stem,apo,max}}\\cdot \\frac{\\delta V_{stem,apo}} {\\delta t} = \\epsilon_{xylem} \\cdot \\frac{\\delta RWC_{stem,apo}} {\\delta t} \\end{equation}\\] Where \\(\\epsilon_{xylem} = 10^3\\) MPa is the xylem elastic modulus. The water balance equations for the symplastic compartments are simply: \\[\\begin{eqnarray} \\frac{\\delta V_{stem, symp}}{\\delta t} &amp;=&amp; - \\frac{1}{\\rho_{w}}\\cdot F_{lat, stem} \\\\ \\frac{\\delta V_{leaf, symp}}{\\delta t} &amp;=&amp; - \\frac{1}{\\rho_{w}}\\cdot F_{lat, leaf} \\end{eqnarray}\\] These are completed with maximum storage capacity values of the symplasmic water compartments (\\(V_{stem,symp,max}\\) and \\(V_{leaf,symp,max}\\)), which allow determining changes in relative water content of symplasmic tissues, and the corresponding pressure-volume equations relating relative water content changes with water potentials \\(\\Psi_{symp, stem}\\) and \\(\\Psi_{symp, leaf}\\) (see section 10.3.1). 10.4.3 Implementation The dynamic system is solved in the model by time discretization. Small time steps are needed when dealing with storage comparments, which poses additional challenges. The soil-to-stem supply function only needs to be updated when soil moisture has changed substantially, i.e. at the same rate as the hydraulic system without plant compartments. However, the second supply function needs to be recalculated more often, because \\(\\Psi_{stem,1}\\) changes faster than soil water potentials. In the model, the soil-to-stem supply function is recalculated once a day, whereas the stem-to-leaf supply function is recalculated following subdaily time steps (i.e. every \\(\\Delta t_{step}\\), by default \\(\\Delta t_{step} = 1h = 3600 s\\)). Water potentials of storage compartments, and lateral flows between water compartments (\\(F_{lat, stem}\\) and \\(F_{lat, leaf}\\)) are recalculated every \\(1s\\) time step. Instantaneous transpiration rate \\(E_{leaf,out}\\) is considered constant within a given subdaily \\(\\Delta t_{step}\\), but \\(E_{stem, in}\\) is re-estimated every second depending on the current value of \\(\\Psi_{stem,1}\\). Since the soil-to-stem supply function is already defined for a range of \\(\\Psi_{stem,1}\\) values, at each \\(1s\\) time step the model only needs to determine the value of \\(E_{stem, in}\\) in the supply function corresponding to the current value of \\(\\Psi_{stem,1}\\). Bibliography "],["plantphotosynthesis.html", "Chapter 11 Plant photosynthesis 11.1 Leaf energy balance, gas exchange and photosynthesis 11.2 Crown/canopy photosynthesis", " Chapter 11 Plant photosynthesis In chapter 10 we introduced the necessary concepts of steady-state plant hydraulics to define the hydraulic supply function for the soil-plant continuum. The supply function specifies the flow rate, as per leaf area, for values of leaf water potential and given a soil moisture status. In the first section of this chapter we describe leaf photosynthesis functions, which define leaf gas exchange, photosynthesis and energy balance for values of leaf water potential. This requires knowing wind, water vapor and temperature conditions of the air surrounding leaves (section 13.1.3), the short-wave radiation absorbed by leaf elements (section 9.1.3) and the leaf long-wave radiation balance (section 9.2). In the second section of this chapter we discuss how to upscale photosynthesis values to the crown level. 11.1 Leaf energy balance, gas exchange and photosynthesis The supply function specifies the transpiration flow rate \\(E\\) for values of leaf water potential \\(\\Psi_{leaf}\\). If we know air temperature, water vapor pressure and the light conditions in which leaves are, we can translate the supply function into a leaf photosynthesis function (Sperry et al. 2017). In a nutshell, \\(E\\) from the supply function is first used to calculate leaf temperature from an evaluation of the leaf energy balance. The diffusive conductances of the leaf to \\(H_2O\\) and \\(CO_{2}\\) are obtained from water supply and leaf water vapor deficit. Finally, the gross/net assimilation rate is then obtained from the diffusive conductance and a modelled curve between assimilation and leaf internal \\(CO_{2}\\) concentration. The following subsections detail each of these steps separately. 11.1.1 Leaf temperature Leaf temperature (\\(T_{leaf}\\); in \\(^\\circ C\\)) can be calculated for any given flow rate \\(E\\) using an energy balance equation (Campbell and Norman 1998): \\[\\begin{equation} T_{leaf} = T_{air}+\\frac{\\Phi_{SWR}^{leaf} + L_{net}^{leaf}-\\lambda_v(T_{air})\\cdot E_{two-sided}}{C_p\\cdot(g_r+g_{Ha})} \\tag{11.1} \\end{equation}\\] where \\(\\Phi_{SWR}^{leaf}\\) (in \\(W \\cdot m^{-2}\\)) is the instantaneous shortwave radiation absorbed per leaf area unit, \\(L_{net}^{leaf}\\) is the instantaneous net long-wave radiation per leaf area unit, \\(E_{two-sided}\\) is the flow rate \\(E\\) converted to \\(mol \\cdot s^{-1} \\cdot m^{-2}\\) per two-sided leaf area basis, \\(\\epsilon\\) is longwave radiation emissivity (0.97), \\(\\sigma\\) is the Stephan-Boltzman constant, \\(T_{air}\\) is the temperature of the air surrounding the leaf (in \\(^\\circ C\\)), \\(C_p\\) = 29.3 \\(J \\cdot mol^{-1} \\cdot ºC^{-1}\\) is the specific heat capacity of dry air at constant pressure and \\(\\lambda_v(T_{air})\\) is the latent heat of vaporization (in \\(J \\cdot mol^{-1}\\)) corresponding to \\(T_{air}\\) (see utility functions in the meteoland reference manual). If canopy energy balance is performed assuming a single canopy layer \\(T_{air}\\) corresponds to \\(T_{can}\\), the whole-canopy air temperature resulting from the energy balance of the previous step (see section 13.1.3). If a multi-layer canopy energy balance is used, \\(T_{air}\\) corresponds to \\(T_{air,j}\\), the air temperature of the canopy layer \\(j\\) that contains the leaf. Finally, \\(g_r\\) and \\(g_{Ha}\\) are the radiative and heat conductance values (in \\(mol \\cdot m^{-2} \\cdot s^{-1}\\)), respectively (Campbell and Norman 1998): \\[\\begin{eqnarray} g_r &amp;=&amp; \\frac{4\\cdot \\epsilon \\cdot \\sigma \\cdot (T_{air}+273.15)^3}{C_p} \\\\ g_{Ha} &amp;=&amp; 0.189 \\cdot (u_{leaf}/d)^{0.5} \\tag{11.2} \\end{eqnarray}\\] where \\(u_{leaf}\\) is the leaf-level wind speed (in \\(m \\cdot s^{-1}\\)) and \\(d\\) is 0.72 times the leaf width (species parameter LeafWidth in \\(cm\\)). As before, \\(u_{leaf}\\) corresponds to \\(u_j\\), the wind-speed at the canopy layer \\(j\\) where the leaf is located (see 23.2). By inspecting eq. (11.1), we can conclude that transpiration flow decreases leaf temperature, whereas radiation increases it and wind speed makes it more similar to the temperature of the surrounding air. The following figures illustrate the effect of varying wind speed and flow rate on \\(T_{leaf}\\) for two contrasted leaf widths (see function biophysics_leafTemperature): Figure 11.1: Values of \\(T_{leaf}\\) for two leaf widths and varying values of wind speed and flow rate, calculated for 24ºC air temperature and 740 \\(W \\cdot m^{-2}\\) instantaneous absorbed radiation (including SWR and LWR). Let us now fix wind speed at the leaf leavel to \\(u_{leaf} = 2\\) m/s. The application of the above equations to the \\(E(\\Psi_{leaf})\\) curves corresponding to the complete hydraulic network (10.2.5) yields the following \\(T_{leaf}(\\Psi_{leaf})\\) curves: Figure 11.2: Examples of leaf temperature functions for a hydraulic network, corresponding to fig. 10.14 and for different soil textures. Left/right panel shows values for uncavitated/cavitated supply functions. 11.1.2 Leaf vapor pressure deficit Vapor pressure deficit in the leaf (\\(e_{leaf}\\), in kPa) is calculated as: \\[\\begin{equation} VPD_{leaf} = e_{leaf} - e_{air} \\end{equation}\\] Where \\(e_{air}\\) is the water vapor pressure of the air surrounding the leaf (but beyond the leaf boundary layer) and \\(e_{leaf}\\) is the leaf vapor pressure, which can be calculated from leaf temperature (\\(T_{leaf}\\)) and leaf water potential (\\(\\Psi_{leaf}\\)): \\[\\begin{equation} e_{leaf} = e_{sat}(T_{leaf}) \\cdot \\exp\\left\\{\\frac{2.17 \\cdot \\Psi_{leaf}}{T_{leaf}+273.15}\\right\\} \\tag{11.3} \\end{equation}\\] where \\(e_{sat}(T)\\) is a function giving the saturated vapor pressure for temperature \\(T\\) (see utility functions of the meteoland reference manual). If a single-canopy energy balance is considered, the water vapor pressure of the air surrounding the leaf is taken as the average atmospheric water vapor pressure of the day, i.e. \\(e_{air} = e_{atm}\\). When a multi-layer canopy energy balance is simulated, \\(e_{air}\\) will correspond to the water vapor pressure \\(e_{air,j}\\) of the canopy layer \\(j\\) where the leaf is located. Since \\(e_{leaf}\\) decreases when leaf temperature decreases in eq. (11.3), increasing transpiration decreases leaf VPD as a result of decreasing leaf temperature. To illustrate this effect, let us assume the following values of relative humidity, yielding a \\(e_{air} = e_{atm} =1.91\\, kPa\\): RHmin = 60 RHmax = 75 VPatm = meteoland::utils_averageDailyVP(Tmin, Tmax, RHmin, RHmax) VPatm ## [1] 1.912181 The application of the above equation to the \\(T_{leaf}(\\Psi_{leaf})\\) curves of fig. 11.2 yields the following \\(VPD_{leaf}(\\Psi_{leaf})\\) curves: Figure 11.3: Examples of leaf vapour pressure deficit (\\(VPD_{leaf}\\)) functions for a hydraulic network, corresponding to fig. 10.14 and for different soil textures. Left/right panel shows values for uncavitated/cavitated supply functions. Note that the VPD decreasing curves do not start at the same \\(VPD_{leaf}\\) value despite corresponding to the same \\(T_{leaf}\\) value, because of the effect of \\(\\Psi_{leaf}\\) on \\(e_{leaf}\\) in eq. (11.3). 11.1.3 Leaf gas exchange Leaf diffusive conductance to water vapor (\\(g_{w}\\); in \\(mol\\, H_2O \\cdot s^{-1} \\cdot m^{-2}\\)) and to carbon dioxide (\\(g_{c}\\); in \\(mol\\,CO_{2} \\cdot s^{-1} \\cdot m^{-2}\\)) are obtained for each value of transpiration flow \\(E\\) (here expressed in \\(mol\\, H_2O \\cdot s^{-1} \\cdot m^{-2}\\)) and \\(VPD_{leaf}\\) using: \\[\\begin{eqnarray} g_{w} &amp;=&amp; E \\cdot \\frac{P_{atm}}{VPD_{leaf}}\\\\ g_{c} &amp;=&amp; g_{w}/1.6 \\end{eqnarray}\\] Diffusive conductance to water vapour is assumed to be result of stomatal (\\(g_{sw}\\)) and boundary layer (\\(g_{bw}\\)) conductances (both in \\(mol\\, H_2O \\cdot s^{-1} \\cdot m^{-2}\\)). If we estimate \\(g_{bw}\\) using: \\[\\begin{equation} g_{bw} = 0.397 \\cdot (u_{leaf}/d)^{0.5} \\end{equation}\\] then, stomatal conductance is: \\[\\begin{equation} g_{sw}^{-1} = g_{w}^{-1} - g_{bw}^{-1} \\end{equation}\\] Ensuring here that \\(g_{w} \\leq g_{bw}\\) so that \\(g_{w}^{-1} \\geq g_{bw}^{-1}\\). The application of equations for \\(g_{w}\\), \\(g_{bw}\\) and \\(g_{sw}\\) to the \\(VPD_{leaf}(\\Psi_{leaf})\\) curves yields the following stomatal conductance \\(g_{sw}(\\Psi_{leaf})\\) curves: Figure 11.4: Examples of stomatal conductance to water vapour (\\(g_{sw}\\)) functions for a hydraulic network, corresponding to fig. 10.14 and for different soil textures. Left/right panel shows values for uncavitated/cavitated supply functions. Minimum and maximum conductance values (\\(g_{sw,\\min} = 0.0045\\) and \\(g_{sw,\\max} = 0.3\\)) are indicated using dashed lines. In the previous figure we have indicated the thresholds of \\(g_{sw,\\min}\\) and \\(g_{sw,\\max}\\), the species-specific minimum and maximum water vapour conductances (i.e. conductances when stomata are fully closed and fully open, respectively; see parameters Gswmin and Gswmax in SpParamsMED). \\(g_{sw}\\) cannot exceed \\(g_{sw,\\max}\\) so that some flow rates may not be possible (see stomatal regulation below). However, \\(g_{sw,\\max}\\) should quickly become non-limiting as soil dries (i.e. reducing \\(E\\)) or \\(VPD_{leaf}\\) increases (Sperry et al. 2017). 11.1.4 Leaf photosynthesis Rubisco-limited photosynthesis rate \\(A_c\\) (in \\(\\mu mol\\, CO_2 \\cdot s^{-1} \\cdot m^{-2}\\)) is modelled using (Collatz et al. 1991; Medlyn, Loustau, and Delzon 2002): \\[\\begin{equation} A_c=\\frac{V_{max}\\cdot (C_i- \\Gamma*)}{C_i+K_c \\cdot (1+ O_a/K_o)} \\tag{11.4} \\end{equation}\\] where \\(V_{max}\\) is Rubisco’s maximum carboxylation rate (in \\(\\mu mol\\, CO_2 \\cdot s^{-1} \\cdot m^{-2}\\)), \\(C_i\\) is the internal carbon dioxide concentration (in \\(\\mu mol \\cdot mol^{-1}\\)), \\(\\Gamma*\\) is the compensation point (in \\(\\mu mol \\cdot mol^{-1}\\)), \\(K_c\\) (in \\(\\mu mol \\cdot mol^{-1}\\)) and \\(K_o\\) (in \\(mmol \\cdot mol^{-1}\\)) are Michaelis-Menten constants for carboxylation and oxygenation, respectively, and \\(O_a\\) is the atmospheric oxygen concentration (i.e. 209 \\(mmol \\cdot mol^{-1}\\)). \\(\\Gamma*\\), \\(K_c\\) and \\(K_o\\) depend on leaf temperature (\\(T_{leaf}\\), in \\(^\\circ C\\)) (Bernacchi et al. 2001): \\[\\begin{eqnarray} \\Gamma* &amp;=&amp; 42.75\\cdot e^{\\frac{37830\\cdot (T_{leaf}-25)}{298\\cdot R \\cdot (T_{leaf}-273)}}\\\\ K_c &amp;=&amp; 404.9\\cdot e^{\\frac{79430\\cdot (T_{leaf}-25)}{298\\cdot R \\cdot (T_{leaf}-273)}}\\\\ K_o &amp;=&amp; 278.4\\cdot e^{\\frac{36380\\cdot (T_{leaf}-25)}{298\\cdot R \\cdot (T_{leaf}-273)}} \\end{eqnarray}\\] Electron transport-limited photosynthesis \\(A_e\\) (in \\(\\mu mol\\, CO_2 \\cdot s^{-1} \\cdot m^{-2}\\)) was obtained from Medlyn, Loustau, and Delzon (2002): \\[\\begin{eqnarray} A_e &amp;=&amp; \\frac{J}{4}\\cdot \\frac{C_i-\\Gamma*}{C_i+2\\cdot \\Gamma*} \\\\ J &amp;=&amp; \\frac{(\\alpha\\cdot Q^{leaf}_{PAR} + J_{max})-\\sqrt{(\\alpha\\cdot Q^{leaf}_{PAR} + J_{max})^2-4.0\\cdot c \\cdot \\alpha \\cdot Q^{leaf}_{PAR} \\cdot J_{max}}}{2\\cdot c} \\end{eqnarray}\\] where \\(\\alpha = 0.3\\,mol \\, e \\cdot mol\\,photon^{-1}\\) is the quantum yield of electron transport, \\(Q^{leaf}_{PAR}\\) is the absorbed PAR photon flux density per leaf area (\\(\\mu mol\\,photon \\cdot m^{-2} \\cdot s^{-1}\\)), which is calculated from absorbed PAR per leaf area (\\(\\Phi^{leaf}_{PAR}\\); in \\(W \\cdot m^{-2}\\)): \\[\\begin{equation} Q^{leaf}_{PAR} = \\Phi^{leaf}_{PAR}\\cdot 546 \\cdot 0.836\\cdot 10^{-2} \\tag{11.5} \\end{equation}\\] where \\(546\\) is the wavelength in \\(nm\\). \\(J_{max}\\) and \\(J\\) are the maximum and actual rate of electron transport (both in \\(\\mu mol\\,e \\cdot m^{-2} \\cdot s^{-1}\\)) and \\(c=0.9\\) defines the curvature of the light-response curve. The gross assimilation rate \\(A\\) at a given \\(C_i\\) is the minimum of \\(A_e\\) and \\(A_c\\). To obtain a smooth \\(A\\)-vs-\\(C_i\\) curve we used (Collatz et al. 1991): \\[\\begin{equation} A = \\frac{(A_c+A_e)-\\sqrt{(A_c+A_e)^2-4.0\\cdot c&#39;\\cdot A_e\\cdot A_c}}{2\\cdot c&#39;} \\end{equation}\\] where \\(c&#39;=0.98\\) is a curvature factor. The temperature dependence of \\(J_{max}\\) and \\(V_{max}\\) relative to 25ºC (i.e., relative to input parameters \\(J_{max,298}\\) and \\(V_{max,298}\\)) is modelled using Leuning (2002) (his eq. 1 with parameters from his Table 2). The internal \\(CO_2\\) concentration, \\(C_i\\), needs to be known to calculate \\(A\\) using the previous equations. Sperry et al. (2016) use a second equation for \\(A\\) which uses \\(g_{c}\\), the diffusive conductance to \\(CO_2\\) (which includes both the stomatal conductance and boundary layer conductance): \\[\\begin{equation} A = g_{c} \\cdot (C_{air}-C_i) \\end{equation}\\] where \\(C_{air}\\) is the \\(CO_{2}\\) concentration (in \\(\\mu mol \\cdot mol^{-1}\\)) in the air surrounding the leaf (beyond the leaf boundary layer). If a single-layer canopy energy balance is used then \\(C_{air}=C_{atm}\\), the atmospheric \\(CO_{2}\\) concentration (see parameter in function defaultControl()), whereas if a multi-layer canopy energy balance is used \\(C_{air}\\) corresponds to \\(C_{air,j}\\), the \\(CO_2\\) concentration in the canopy layer \\(j\\) where the leaf occurs, analogously to \\(T_{air}\\) and \\(e_{air}\\). Combining the two equations for \\(A\\) and finding the root of the resulting equation using Newton-Raphson method allows determining \\(C_i\\) and therefore \\(A\\). Thus, after defining PAR photon flux density, atmosphere \\(CO_{2}\\) concentration and maximum rate parameters: Q = 2000 Catm = 386 Vmax298 = 100 Jmax298 = 1.67*Vmax298 one can obtain the following \\(A(\\Psi_{leaf})\\) curves from \\(T_{leaf}(\\Psi_{leaf})\\) and \\(g_{sw}(\\Psi_{leaf})\\): Figure 11.5: Examples of gross photosynthesis (\\(A\\)) functions for a hydraulic network, corresponding to fig. 10.14 and for different soil textures. Left/right panel shows values for uncavitated/cavitated supply functions. Finally, leaf net photosynthesis (\\(A_n\\); i.e. accounting for autotrophic respiration) is calculated as: \\[\\begin{equation} A_n = A - 0.015 \\cdot V_{max} \\end{equation}\\] 11.2 Crown/canopy photosynthesis In the previous subsection we showed how to calculate photosynthesis at the leaf level, but gross or net assimilation needs to be up-scaled to the crown or canopy levels, while accounting for the variation of leaf photosynthetic conditions across canopies. In this section, we briefly describe different alternatives for canopy/crown photosynthesis and justify our modelling choice. 11.2.1 Multi-layer canopy photosynthesis model Ideally, crown or canopy photosynthesis requires repeating the calculations of leaf temperature, leaf VPD, leaf gas conductance and photosynthesis for every leaf. Multi-layer canopy models, however, divide the canopy into vertical layers and determine photosynthesis for each one (and each plant species or plant cohort, if required). Multi-layer models can account for the fact that environmental variables usually vary across the crown, including direct/diffuse absorbed radiation, air temperature, wind speed, water vapor pressure and \\(CO_2\\) concentration. The amount of SWR and PAR absorbed per unit of leaf area at each canopy layer was shown in fig. 9.2. Not only environmental factors, but leaves themselves may be different across canopy layers. Importantly, it is generally accepted that sunlit and shade leaves need to be treated separately (De Pury and Farquhar 1997). Separating the two kinds of leaves acknowledges that they operate at different parts of the light-saturation curve. Following De Pury and Farquhar (1997), we further assume that maximum carboxylation and electron transport rates are highest for leaves at the top of the canopy and there is a exponential decrease from there towards the bottom, where maximum rates are 50% of those at the top: \\[\\begin{eqnarray} V_{max,298,i,j} &amp;=&amp; V_{max,298,i}\\cdot \\exp(-0.713\\cdot \\sum_{h&gt;i}{LAI^{\\phi}_{h,j}}/LAI_i^{\\phi}) \\\\ J_{max,298,i,j} &amp;=&amp; J_{max,298,i}\\cdot \\exp(-0.713\\cdot \\sum_{h&gt;i}{LAI^{\\phi}_{h,j}}/LAI_i^{\\phi}) \\end{eqnarray}\\] where \\(LAI^{\\phi}_{i,j}\\) is the LAI value of the plant cohort \\(i\\) at a given canopy layer \\(j\\) and \\(LAI_i^{\\phi}\\) is the expanded LAI of the plant cohort. The following figure illustrate this decrease for the single-species canopy example of section 9.1.3: Figure 11.6: Decrease of Rubisco maximum carboxilation rate across the canopy In a multi-layer canopy photosynthesis model, gross and net photosynthesis values (i.e. \\(A\\) and \\(An\\)) are determined for sunlit and shade leaves of each cohort in each canopy layer. Then, sunlit and shade photosynthesis values should be averaged across the crown for each plant cohort. Assuming that \\(\\Psi_{leaf}\\) is equal for all leaves across the crown, the function \\(A(\\Psi_{leaf})\\) would be obtained for each plant cohort. 11.2.2 Big-leaf canopy photosynthesis model Multi-layer canopy photosynthesis models allow evaluating leaf conditions, stomatal conductance and photosynthesis for different points of the canopy. However, this comes at high computational cost. For this reason, many models implement what is called the big-leaf approximation. Assuming that wind speed, temperature, water vapor pressure and \\(CO_2\\) concentration are similar for all leaves and that the distribution of photosynthetic capacity between leaves is in proportion to the profile of absorbed irradiance then the equation describing leaf photosynthesis will also represent canopy photosynthesis (Sellers et al. 1992). 11.2.3 Sun-shade canopy photosynthesis model An alternative between multi-layer and big-leaf canopy photosynthesis models is to collapse variation of photosynthetic conditions into two leaf classes: sunlit and shade leaves. While big-leaf canopy models are known to be unaccurate under some situations, sun-shade canopy models (De Pury and Farquhar 1997) provide estimates that are close to multiple layer models (Hikosaka, Kumagai, and Ito 2016). The sun-shade canopy photosynthesis model was adopted here. Assuming that wind speed, temperature, water vapor pressure and and \\(CO_2\\) concentration are similar for all leaves, sun-shade models involve the following steps: Aggregate the leaf area of sunlit/shade leaves across layers: \\[\\begin{eqnarray} LAI^{sunlit}_{i} &amp;=&amp; \\sum_{j=1}^{l}{LAI^{sunlit}_{i,j}} \\\\ LAI^{shade}_{i} &amp;=&amp; \\sum_{j=1}^{l}{LAI^{shade}_{i,j}} \\end{eqnarray}\\] where \\(LAI^{sunlit}_{i,j}\\) and \\(LAI^{shade}_{i,j}\\) are the leaf area index of sunlit and shade leaves for cohort \\(i\\) in canopy layer \\(j\\), from eq. (9.1). Average the SWR/PAR absorbed by leaves of each kind across layers. The average light absorbed by sunlit/shaded foliage of cohort \\(i\\) per ground area unit is found using: \\[\\begin{eqnarray} \\Phi^{sunlit}_{abs,i} &amp;=&amp; \\frac{\\sum_{j=1}^{l}{K^{sunlit}_{abs,i,j}}}{LAI^{sunlit}_{i}} \\\\ \\Phi^{shade}_{abs,i} &amp;=&amp; \\frac{\\sum_{j=1}^{l}{K^{shade}_{abs,i,j}}}{LAI^{shade}_{i}} \\end{eqnarray}\\] where \\(K^{sunlit}_{abs,i,j}\\) and \\(K^{shade}_{abs,i,j}\\) are the light absorbed per ground area unit by sunlit/shade leaves of cohort \\(i\\) at layer \\(j\\) (see section 9.1.3). Analogous equations were already given for the net long-wave radiation balance of sunlit leaves (\\(L^{sunlit}_{net,i}\\)) and shade leaves (\\(L^{shade}_{net,i}\\)) in section 9.2.3. Average the maximum carboxylation (respectively, electron transport) rates across layers, again separating sunlit and shade leaves: \\[\\begin{eqnarray} V^{sunlit}_{max,298,i} &amp;=&amp; \\frac{\\sum_{j=1}^{l}{V_{max,298,i,j} \\cdot LAI^{sunlit}_{i,j}}}{LAI^{sunlit}_{i}} \\\\ V^{shade}_{max,298,i} &amp;=&amp; \\frac{\\sum_{j=1}^{l}{V_{max,298,i,j} \\cdot LAI^{shade}_{i,j}}}{LAI^{shade}_{i}} \\end{eqnarray}\\] Use \\(V^{sunlit}_{max,298,i}\\) as \\(V_{max,298}\\) in Leuning (2002) to obtain \\(V_{max}\\) for eq. (11.4); \\(\\Phi^{sunlit}_{SWR,i}\\) as \\(\\Phi^{leaf}_{SWR}\\) and \\(L^{sunlit}_{net,i}\\) as \\(L^{leaf}_{net}\\) in eq. (11.1); and \\(\\Phi^{sunlit}_{PAR,i}\\) as \\(\\Phi_{PAR}^{leaf}\\) in eq. (11.5) to estimate sunlit leaf photosynthesis, which can be up-scaled to the crown level multiplying by \\(LAI^{sunlit}_{i}\\). The same would be done for shade leaves. In a sun-shade canopy model one then calls the photosynthesis function twice (i.e. once for shade leaves and once for sunlit leaves) for each plant cohort \\(i\\). 11.2.4 Comparison of big-leaf, sun-shade and multi-canopy photosynthesis models The figure below provides the canopy photosynthesis functions obtained using the multi-layer canopy photosynthesis model (top), a sunshade canopy photosynthesis model (center) or a big-leaf photosynthesis model (bottom). These were generated using functions photo_multilayerPhotosynthesisFunction(), photo_sunshadePhotosynthesisFunction() and photo_leafPhotosynthesisFunction(), respectively, and assuming homogeneous wind, temperature and water vapor pressure through the canopy. Thus, only absorbed radiation varied across layers and leaf types. Note the coincidence between the multi-layer and the sun-shade models. Figure 11.7: Whole-canopy photosynthesis functions obtained for a hydraulic network, corresponding to fig. 10.14 and different soil textures, using the multi-layer canopy photosynthesis model (top), a sunshade canopy photosynthesis model (center) or a big-leaf photosynthesis model (bottom). Left/right panel shows values for uncavitated/cavitated supply functions. 11.2.5 Within-canopy variation in environmental conditions When presenting the sun-shade photosynthesis model, we assumed constant wind, temperature, water vapor pressure and \\(CO_2\\) concentration values through the canopy. If a single-layer canopy energy balance is used, \\(CO_2\\) concentration and vapor pressure are assumed equal to the atmosphere (i.e., \\(e_{air} = e_{atm}\\) and \\(C_{air} = C_{atm}\\)), whereas air temperature is that of the canopy (i.e., \\(T_{air} = T_{can}\\)), but leaf-level wind speed (\\(u_{leaf}\\)) can still be different for different canopy layers. If a multi-layer canopy energy balance is used, all four environmental variables can differ between canopy layers (i.e. \\(T_{air,j}\\), \\(e_{air,j}\\), \\(C_{air,j}\\) and \\(u_j\\)). In the sun-shade photosynthesis model, the question arises on how to determine layer \\(j\\) for sunlit or shade leaves of a given cohort \\(i\\). The choice is done by calculating the height corresponding to the mass center of sunlit leaves or shade leaves of each cohort \\(i\\). The canopy layer \\(j\\) where this mass center height is contained is chosen as the layer from which environmental conditions will be taken. For any given plant cohort \\(i\\), sunlit leaves will take their environmental conditions from layers above (or equal to) those corresponding to shade leaves. Bibliography "],["transpirationsperry.html", "Chapter 12 Transpiration and photosynthesis under Sperry’s model 12.1 Water supply and sunlit/shade photosynthesis functions 12.2 Leaf stomatal regulation by profit maximization 12.3 Plant cohort transpiration and photosynthesis 12.4 Stem cavitation and conduit refilling", " Chapter 12 Transpiration and photosynthesis under Sperry’s model Plants must open their stomata to acquire \\(CO_2\\) and perform photosynthesis, but doing so promotes water loss. This trade-off has resulted in a tight coordination between capacity to supply and transpire water (hydraulic conductance and diffusive conductance to water vapor) and the maximum capacity for photosynthesis (carboxylation rate and electron-transport rate). For modelling purposes, this carbon-for-water trade-off means that hydraulics, stomatal conductance, transpiration and photosynthesis need to be estimated simultaneously. In chapters 10 and 11 we introduced supply and photosynthesis functions, but we did not explain how are actual transpiration and photosynthesis values determined. This is the subject of the present chapter. The advanced water balance model adopts the framework of Sperry et al. (2017), who suggest estimating stomatal conductance from the instantaneous maximization of profit, defined as the difference between photosynthesis gain and hydraulic cost (both normalized for comparability). First, transpiration and photosynthesis is estimated separately for sunlit and shade leaves according to this framework. An average transpiration rate is then determined depending on sunlit/shade transpiration rates and their leaf area contributions. Finally, the instantaneous transpiration and assimilation rates of each time step are scaled to the duration of the time step and to the leaf area of the plant cohort. The following sections provide details for all these steps. 12.1 Water supply and sunlit/shade photosynthesis functions Let us start by summarizing the concepts introduced in the last two chapters. The supply function described in chapter 10 describes the rate of transpiration flow as a function of the pressure drop between the soil and the leaf, and incorporates both soil, xylem and leaf hydraulic constrains (Sperry et al. 1998, 2016; Sperry and Love 2015). Here we assume that hydraulic conductance \\(k\\) is in \\(mmol\\,H_2O \\cdot s^{-1} \\cdot m^{-2}\\cdot MPa^{-1}\\) of leaf area, transpiration rate \\(E_{leaf}\\) in \\(mmol\\,H_2O \\cdot s^{-1} \\cdot m^{-2}\\) of leaf area and leaf water potential \\(\\Psi_{leaf}\\) is in MPa. According to section 11.1, each \\(E_{leaf}\\) value implies an energy balance at the leaf level, stomatal conductance to water vapour and a particular value of leaf photosynthesis. More specifically, for each pair of \\(E_{leaf}\\) and \\(\\Psi_{leaf}\\) values, we have a corresponding leaf temperature (\\(T_{leaf}\\); in ºC), leaf-to-air vapor pressure deficit (\\(VPD_{leaf}\\); in kPa), leaf water vapor conductance (\\(g_{sw}\\); in \\(mol\\,H_2O·s^{-1}·m^{-2}\\)) and, finally the leaf gross and net (i.e. after accounting for autotrophic respiration) photosynthesis assimilation rates (\\(A_g\\) and \\(A_n\\); both in \\(\\mu mol\\,CO_2·s^{-1}·m^{-2}\\)). In short, the supply function generates a photosynthesis function. Since the model deals with canopies and not single leaves, however, different parts of the crowns of plant cohorts may be in different canopy positions. Calculating photosynthesis at the canopy level requires dividing the canopy into vertical layers, differentiating between sunlit and shade leaves and determining photosynthesis functions for sunlit and shade leaves separately, as explained in section 11.2. 12.2 Leaf stomatal regulation by profit maximization Wolf, Anderegg, and Pacala (2016) proposed the carbon maximization criterion, which states that at each instant in time the stomata regulate canopy gas exchange and pressure to achieve the maximum profit, which is the maximum difference between photosynthetic gains and costs, the latter associated with hydraulic vulnerability attained with low water potentials. Such approach has been shown to be supported by data from global forest biomes (Anderegg et al. 2018). Building on this approach, Sperry et al. (2017) presented a profit maximization function where hydraulic costs of opening the stomata are compared against photosynthetic gains. Details of their formulation are given in this section. Stomatal regulation is performed in medfate separatedly for sunlit and shade leaves. 12.2.1 Cost and gain functions The hydraulic supply function is used to derive a transpirational cost function \\(\\theta_1(\\Psi_{leaf})\\) that reflects the increasing damage from cavitation and the greater difficulty of moving water along the continuum (Sperry et al. 2016): \\[\\begin{equation} \\theta(\\Psi_{leaf}) = \\left[ \\frac{k_{c,max}-k_{c}(\\Psi_{leaf})}{k_{c,max}-k_{crit}}\\right]^{a_{\\theta}} \\end{equation}\\] where \\(k_c(\\Psi_{leaf}) = dE/d\\Psi(\\Psi)\\) is the slope of the supply function corresponding to (leaf) water potential \\(\\Psi_{leaf}\\), \\(k_{c,max}\\) is the maximum slope of the supply function (which occurs when \\(E_{leaf}=0\\)), i.e. the maximum whole-plant conductance for the current soil moisture conditions, and \\(k_{crit} = k_c(\\Psi_{crit})\\) is the slope of the supply function at \\(E_{leaf} = E_{crit}\\) the critical flow beyond which hydraulic failure occurs. \\(a_{\\theta}\\) is an exponent that modifies the cost function, specified as a control parameter. In Sperry et al. (2016), this exponent was missing (i.e. \\(a_{\\theta} = 1.0\\)), and this is the default in medfate, but we introduced it to allow some flexibility in the gain/cost comparison (see below). The following figures illustrate the \\(\\theta(\\Psi_{leaf})\\) curves corresponding to the supply functions: Figure 12.1: Cost functions (i.e. \\(\\theta(\\Psi_{leaf})\\)) obtained for a hydraulic network, corresponding to fig. 10.14 and different soil textures and soil water potentials. Left/right panels show values for uncavitated/cavitated supply functions, respectively. In all cases \\(a_{\\theta}=0\\). The normalized photosynthetic gain function \\(\\beta(\\Psi_{leaf})\\) reflects the actual assimilation rate with respect to the maximum (Sperry et al. 2016): \\[\\begin{equation} \\beta(\\Psi_{leaf}) = \\left[\\frac{A(\\Psi_{leaf})}{A_{max}}\\right]^{a_{\\beta}} \\end{equation}\\] where \\(A_{max}\\) is the instantaneous maximum (gross) assimilation rate estimated over the full \\(\\Psi_{leaf}\\) range (including values that imply a stomatal conductance larger than the maximum). Similarly to the cost function, \\(a_{\\beta}\\) is an exponent that modifies the gain function, specified as a control parameter. In Sperry et al. (2016), this exponent was missing (i.e. \\(a_{\\beta} = 1.0\\)), and this is the default in medfate, but we introduced it to allow some flexibility in the gain/cost comparison. The following figures illustrate the \\(\\beta(\\Psi_{leaf})\\) curves corresponding to the supply and assimilation functions, for either \\(a_{\\beta} = 1.0\\) (top row) or \\(a_{\\beta} = 0.5\\) (bottom row): Figure 12.2: Gain function (\\(\\beta(\\Psi_{leaf})\\)) obtained for a hydraulic network, corresponding to fig. 10.14 and different soil textures and soil water potentials. Left/right panels show values for uncavitated/cavitated supply functions, respectively. Top and bottom panels correspond to \\(a_{\\beta}=1.0\\) and \\(a_{\\beta}=0.5\\), respectively. Note that setting \\(a_{\\beta} = 0.5\\) makes gain function steeper at the begining of the curve, hence making additional gains in photosynthesis less relevant compared to \\(a_{\\beta} = 1.0\\). This has an effect on the profit maximization strategy presented in the next subsection. 12.2.2 Profit maximization at the leaf level Sperry et al. (2017) suggested that stomatal regulation can be effectively estimated by determining the maximum of the profit function (\\(Profit(\\Psi_{leaf})\\)): \\[\\begin{equation} Profit(\\Psi_{leaf}) = \\beta(\\Psi_{leaf})-\\theta(\\Psi_{leaf}) \\end{equation}\\] The maximization is achieved when the slopes of the gain and cost functions are equal: \\[\\begin{equation} \\frac{\\delta \\beta(\\Psi_{leaf})}{\\delta \\Psi_{leaf}} = \\frac{\\delta \\theta(\\Psi_{leaf})}{\\delta \\Psi_{leaf}} \\end{equation}\\] Instantaneous profit maximization assumes a ‘use it or lose it’ reality with regards to available soil water. Because the gain function accelerates more quickly from zero and reaches 1 sooner than the cost functiion, their maximum difference occurs at intermediate \\(\\Psi_{leaf}\\) values. Once \\(\\Psi_{leaf}\\) that maximizes profit is determined, the values of the remaining variables are also determined. At this point, it may happen that \\(g_{sw}(\\Psi_{leaf})\\) is lower than the minimum (i.e. cuticular) water vapor conductance (\\(g_{sw,\\min}\\)) or larger than the maximum water vapor conductance (\\(g_{sw,\\max}\\)). These thresholds need to be taken into account when determining the maximum of the profit function. The following figures illustrate the \\(Profit(\\Psi_{leaf})\\) curves of corresponding to the previous cost and gain curves: Figure 12.3: Profit functions (i.e. \\(Profit(\\Psi_{leaf})\\)) obtained for a hydraulic network, corresponding to fig. 10.14 and different soil textures and soil water potentials. Left/right panels show values for uncavitated/cavitated supply functions, respectively. Top and bottom panels correspond to \\(a_{\\beta}=1.0\\) and \\(a_{\\beta}=0.5\\), respectively. Squares in the previous figures indicate the maximum profit points in each situation. The drier the soil, the closer is the maximum profit \\(\\Psi_{leaf}\\) to soil water potential as one would expect intuitively (i.e. a smaller drop in water potential along the hydraulic pathway). Note that when the soil is very dry the squares are to the right of the true maximum. This is because the transp_profitMaximization() function takes into account the minimum and maximum stomatal conductance and, in this case, does not allow optimum stomatal conductances below the minimum (cuticular) value. Differences between \\(a_{\\beta}=1.0\\) and \\(a_{\\beta}=0.5\\) can be more easily seen when plotting directly the optima in terms of both canopy sap pressure and flow rate: Figure 12.4: Comparison of optimum flow and water potential values under profit functions built using \\(a_{\\beta}=1.0\\) and \\(a_{\\beta}=0.5\\), from the results of fig. 12.3. When changing from \\(a_{\\beta}=1.0\\) to \\(a_{\\beta}=0.5\\) the optimum values are shifted towards less negative water potentials and, accordingly, lower transpiration rates. Hence, \\(a_{\\beta}\\) allows modifying the relative weight of gains and costs. Note that \\(\\theta\\), \\(\\beta\\) and \\(Profit\\) functions can be expressed as a function of stomatal conductance, instead of leaf water potential. This allows visualizing more clearly the effect of \\(g_{sw,\\min}\\) and \\(g_{sw,\\max}\\) thresholds on the maximum profit optimization strategy, as illustrated in the following figures. Figure 12.5: Profit function as a function of stomatal conductance, corresponding to fig. 12.3 and different soil textures and soil water potentials. Left/right panels show values for uncavitated/cavitated supply functions, respectively. Top and bottom panels correspond to \\(a_{\\beta}=1.0\\) and \\(a_{\\beta}=0.5\\), respectively. 12.3 Plant cohort transpiration and photosynthesis In the previous section, we considered stomatal regulation at the leaf level only. At the plant cohort level, the gain function could be build from a crown photosynthesis function \\(A(\\Psi_{leaf})\\), as shown in section 11.2. However, applying the profit maximization approach for a single crown photosynthesis function would imply the assumption that the same stomatal aperture occurs in all leaves of the plant cohort, independently of whether they are in shade or sunlit. A more realistic approach is to determine stomatal regulation by profit maximization for sunlit and shade leaves separately. The gain function and profit maximization calculations conducted for each leaf type yield instantaneous leaf water potentials \\(\\Psi^{sunlit}_{leaf}\\) and \\(\\Psi^{shade}_{leaf}\\) and instantaneous flow values \\(E^{shade}\\) and \\(E^{sunlit}\\) from the supply functions. The corresponding photosynthesis functions allow determining values for leaf temperatures \\(T_{leaf}^{sunlit}\\) and \\(T_{leaf}^{shade}\\), vapour pressure deficits \\(VPD_{leaf}^{sunlit}\\) \\(VPD_{leaf}^{shade}\\), stomatal conductance \\(g_{sw}^{sunlit}\\) and \\(g_{sw}^{shade}\\) and net photosynthesis rates \\(A_{n}^{sunlit}\\) and \\(A_{n}^{shade}\\). This is a lot of useful information at the leaf level for each plant cohort \\(i\\), but we also need transpiration and photosynthesis values at the plant cohort-level. The average instantaneous flow rate (\\(E_i^{average}\\), in \\(mmol\\, H_2O \\cdot s^{-1} \\cdot m^{-2}\\)) per leaf area unit of plant cohort \\(i\\) is the weighed average: \\[\\begin{equation} E_i^{average} = \\frac{E_{i}^{shade} \\cdot LAI_i^{sunlit} + E_{i}^{shade} \\cdot LAI_i^{shade}}{LAI_i^{\\phi}} \\end{equation}\\] where \\(LAI_i^{sunlit}\\) and \\(LAI_i^{shade}\\) are the cohorts LAI values for sunlit and shade leaves, from eq. (9.1), and \\(LAI_i^{\\phi}\\) is the leaf area index of plant cohort \\(i\\). The model then uses the hydraulic supply function to find the transpiration rate \\(E_i\\) numerically closest to \\(E_i^{average}\\) (remember that the supply function is build in discrete steps). Finding the \\(E_i\\) value numerically closest to \\(E_i^{average}\\) determines the \\(E_{i,t}\\) the instantaneous transpiration flow for current time step \\(t\\), and also leads to setting values for \\(t\\) of several other variables, such as water potentials (\\(\\Psi_{leaf, i,t}\\), \\(\\Psi_{stem, i,t}\\), \\(\\Psi_{rootcrown, i,t}\\), …), the slope of the supply function (\\((d E/d\\Psi_{i})_t\\)), and instantaneous soil water extraction rates (\\(E_{i,s,t}\\)). The amount of transpiration from the plant cohort in a given time step \\(t\\) (\\(Tr_{i,t}\\), in \\(l \\cdot m^{-2}\\) of ground area, i.e. in \\(mm\\)) is: \\[\\begin{equation} Tr_{i,t} = E_{i,t} \\cdot LAI_i^{\\phi} \\cdot 10^{-3} \\cdot 0.01802 \\cdot \\Delta t_{step} \\tag{12.1} \\end{equation}\\] where \\(0.01802\\) is the molar weight (in \\(kg = l\\)) of water and \\(\\Delta t_{step} = 86400/n_t\\) the size of the time step in seconds, being \\(n_t\\) the number of time steps. Soil extraction rates (\\(Ex\\)) are scaled to the cohort level as done for transpiration: \\[\\begin{equation} Ex_{i,s,t} = E_{i,s,t} \\cdot LAI_i^{\\phi} \\cdot 10^{-3} \\cdot 0.01802 \\cdot \\Delta t_{step} \\tag{12.2} \\end{equation}\\] If plant water storage is not considered, one should have that soil extraction equals transpiration: \\[\\begin{equation} Tr_{i,t} = Ex_{i,t} = \\sum_s {Ex_{i,s,t}} \\end{equation}\\] Instantaneous net photosynthesis per leaf area of sunlit and shade leaves in a given time step \\(t\\) (i.e. \\(A_{n,i,t}^{sunlit}\\) and \\(A_{n,i,t}^{shade}\\)) are also aggregated into \\(A_{n,i,t}\\), the net photosynthesis of the plant cohort \\(i\\) for the time step \\(t\\), in \\(g\\,C \\cdot m^{-2}\\) of ground area: \\[\\begin{equation} A_{n,i,t} = (A_{n,i,t}^{sunlit} \\cdot LAI_i^{sunlit} + A_{n,i,t}^{shade} \\cdot LAI_i^{shade}) \\cdot 10^{-6} \\cdot 12.01017 \\cdot \\Delta t_{step} \\tag{12.3} \\end{equation}\\] 12.4 Stem cavitation and conduit refilling Like with the ‘Granier’ transpiration mode, the water balance model with ‘Sperry’ transpiration mode is normally run assuming that although soil drought may reduce transpiration, embolized xylem conduits are automatically refilled when soil moisture recovers (i.e. cavitation = \"total\"). Automatic refilling is always assumed for leaf and root segments, but not for stems. There are three other options to deal with stem xylem cavitation besides automatic refilling. Any of them cause the model to keep track of the proportion of lost conductance in the stem xylem of the plant cohort \\(i\\) (\\(PLC_{stem,i}\\)) at successive time steps: \\[\\begin{equation} PLC_{stem,i, t}= \\max \\{PLC_{stem,i, t-1}, 1 - k_{stem,i}(\\Psi_{stem})/k_{max,stem,i} \\} \\end{equation}\\] When water compartments are not considered, this equation is evaluated every hour time step, whereas it is evaluated every 1s with water compartments, as part of the constitutive equations (see 10.4.2). For simulations of less than one year one can use cavitationRefill = \"none\" to keep track of the maximum drought stress. However, for simulations of several years, it is normally advisable to allow recovery. If cavitation = \"annual\", \\(PLC_{stem,i}\\) values are set to zero at the beginning of each year, assuming that embolized plants overcome the conductance loss by creating new xylem tissue. Finally, if cavitationRefill = \"rate\" the model simulates stem refilling at daily steps as a function of symplasmic water potential. First, a daily recovery rate (\\(r_{refill}\\); in \\(cm^2 \\cdot m^{-2} \\cdot day^{-1}\\)) is estimated as a function of \\(\\Psi_{symp,stem}\\): \\[\\begin{equation} r_{refill}(\\Psi_{symp,stem}) = r_{\\max,refill} \\cdot \\max \\{0.0, (\\Psi_{symp,stem} + 1.5)/1.5\\} \\end{equation}\\] Where \\(r_{\\max,refill}\\) is the control parameter refillMaximumRate indicating a maximum refill rate. The right part of the equation normalizes the water potential, so that \\(r_{refill} = r_{refill,\\max}\\) if \\(\\Psi_{symp,stem} = 0\\) and \\(r_{refill} = 0\\) if \\(\\Psi_{symp,stem} &lt;= -1.5MPa\\). The proportion of conductance lost is then updated using: \\[\\begin{equation} PLC_{stem,i}= \\max \\{0.0, PLC_{stem,i} - (r_{refill}/H_v) \\} \\end{equation}\\] where \\(H_v\\) is the Huber value in units of \\(cm^2 \\cdot m^{-2}\\). Bibliography "],["closecanopysoilenergybalance.html", "Chapter 13 Closing energy balances 13.1 Single-layer canopy 13.2 Multi-layer canopy", " Chapter 13 Closing energy balances In chapter 9 we described the details of radiation energy transfer. Transpiration is an important latent heat component of the energy balance, and the details of how plant transpiration is determined were given in chapters 10, 11 and 12. This chapter explains how to calculate the remaining components of the canopy energy balance, while distinguishing between assuming a single-layer canopy or considering a multiple-layer canopy. 13.1 Single-layer canopy The first part of the section describes the calculation of latent heat and convective energy exchanges between the soil, canopy and atmosphere layers. These are the remaining energy components that are needed to close the energy balances of the canopy (eq. (7.3)) and soil layers (eqs. (7.5) and (7.6)). Temperature changes applied to the canopy and soil layers are also described. 13.1.1 Latent heat Canopy exchanges of latent heat include latent heat exchanged from plant transpiration and evaporation of rain intercepted by the canopy. In the single-layer canopy energy balance, latent heat exchange for the whole canopy (\\(LE_{can}\\); in \\(W\\cdot m^{-2}\\)) is calculated as: \\[\\begin{equation} LE_{can} = \\lambda_v(T_{can}) \\cdot \\left(\\frac{In_{t} + \\sum_{i=1}^{c}{Tr_{i,t}}}{\\Delta t_{step}} \\right) \\tag{13.1} \\end{equation}\\] where \\(\\lambda_v(T_{can})\\) is the latent heat of vaporization at temperature \\(T_{can}\\) (in \\(J·kg^{-1}\\)), \\(Tr_{i,t}\\) is the amount (in \\(mm = kg \\cdot m^{-2}\\)) of transpiration for cohort \\(i\\) during time step \\(t\\) (12.1), and \\(In_{t}\\) is the amount of intercepted water evaporated from the canopy for time step \\(t\\) (total daily interception \\(In\\) is divided into timesteps according to the proportion of shortwave radiation absorbed by the canopy at each time step). The latent heat exchange between the soil and the atmosphere (\\(LE_{soil}\\); in \\(W\\cdot m^{-2}\\)) comes either from water evaporated from the soil surface or snow melting (both in \\(mm = kg \\cdot m^{-2}\\)). They do not occur simultaneously, but can be expressed in the same equation: \\[\\begin{equation} LE_{soil} = \\lambda_v(T_{soil}) \\cdot \\left( \\frac{Es_{t} + \\lambda_{f} \\cdot Sm_{t}}{\\Delta t_{step}} \\right) \\tag{13.2} \\end{equation}\\] where \\(\\lambda_v(T_{soil})\\) is the latent heat of vaporization at temperature \\(T_{soil}\\) and \\(\\lambda_{f} = 0.33355J·kg^{-1}\\) is the latent heat of fusion. As before, daily evaporation from bare soil (\\(Es\\)) and snow melt water equivalent (\\(Sm\\)) are divided into time steps according to the proportion of shortwave radiation absorbed by the soil layer each step. 13.1.2 Convective energy Convective energy fluxes between atmosphere and the canopy (\\(H_{can, atm}\\)) and between the canopy and the soil (\\(H_{can, soil}\\)) are determined as follows: \\[\\begin{eqnarray} H_{can,atm} &amp;=&amp; \\frac{\\rho_{atm} \\cdot c_p}{r_{can,atm}}\\cdot (T_{can} - T_{atm}) \\\\ H_{can,soil} &amp;=&amp; \\frac{\\rho_{can} \\cdot c_p}{r_{can,soil}}\\cdot (T_{can} - T_{soil,1}) \\end{eqnarray}\\] where \\(\\rho_{atm}\\) and \\(\\rho_{can}\\) are the air density above-canopy and inside-canopy, respectively, calculated from the corresponding temperatures (see utility functions in meteoland reference manual); \\(c_{p}\\) = 1013.86 \\(J·kg^{-1}·C^{-1}\\) is the specific heat capacity of the air. \\(r_{can,atm}\\) and \\(r_{can,soil}\\) are the atmosphere-canopy and canopy-soil aerodynamic resistances (in \\(s·m^{-1}\\)). These, in turn, are calculated using the FAO56 calculation procedure and canopy height, total LAI and above-canopy and below-canopy wind speeds. Wind speed below the canopy is calculated as explained in 23.2 assuming a height of 2 m. 13.1.3 Canopy temperature changes After evaluating the canopy energy balance equation (7.3) one has to translate energy balance into temperature variation of the canopy. Rearranging the same equation and expressing it in discrete time steps we have: \\[\\begin{equation} \\Delta T_{can} = \\Delta t_{step} \\cdot \\frac{K_{abs,can} + L_{net,can} - LE_{can} - H_{can,atm} - H_{can,soil}}{TC_{can}} \\end{equation}\\] where \\(TC_{can}\\) is the canopy thermal capacitance (in \\(J \\cdot m^{-2} \\cdot K^{-1}\\)) and \\(\\Delta t_{step} = 86400/n_t\\) is the size of the time step in seconds. Canopy thermal capacitance depends on the leaf area index of the stand: \\[\\begin{equation} TC_{can} = TC_{LAI} \\cdot \\frac{0.8 \\cdot LAI_{stand} + 1.2 \\cdot (LAI_{stand}^{phi} + \\cdot LAI_{stand}^{dead})}{2} \\tag{13.3} \\end{equation}\\] where \\(TC_{LAI}\\) is the thermal capacitance per LAI unit, which is specified by the control parameter thermalCapacityLAI. By using both the maximum leaf area of the stand, \\(LAI_{stand}\\), and its current live/dead leaf area (\\(LAI_{stand}^{phi}+LAI_{stand}^{dead}\\)) it is assumed that part of thermal capacitance corresponds to stems and branches, so that capacitance does not drop to zero for deciduous canopies. 13.1.4 Soil temperature changes Analogously to the canopy, the change in temperature for a given soil layer \\(s\\) in the current time step is given by rearranging eq. (7.6): \\[\\begin{equation} \\Delta T_{soil,s} = \\Delta t_{step} \\cdot \\frac{G_{s-1,s} - G_{s,s+1}}{C_{soil,s}} \\end{equation}\\] where the energy balance on each soil layer \\(s\\) depends on the balance between energy coming from above (\\(G_{s-1,s}\\)) and energy going to below (\\(G_{s,s+1}\\)) and \\(C_{soil,s}\\), the thermal capacitance of soil layer \\(s\\). Energy inflow to the first (uppermost) layer (i.e. \\(G_{0,1}\\)) is the result of energy exchanges between the soil layer and the canopy and atmosphere, i.e. from eq. (7.5): \\[\\begin{equation} G_{0,1} = K_{soil} + L_{net,soil} + H_{can,soil} - LE_{soil} \\tag{13.4} \\end{equation}\\] Heat conduction between layers \\(s\\) and \\(s+1\\) (i.e. \\(G_{s,s+1}\\)) depend on the soil temperature gradient (see function soil_temperatureGradient(): \\[\\begin{equation} G_{s,s+1} = \\lambda_{soil,s} \\cdot \\frac{\\delta T_{soil,s}}{\\delta z} = \\lambda_{soil,s} \\cdot \\frac{T_{soil,s} - T_{soil,s+1}}{(Z_{s-1} - Z_{s+1})/2} \\end{equation}\\] where \\(Z_{s-1}\\) and \\(Z_{s+1}\\) are expressed in \\(m\\) and \\(\\lambda_{soil,s}\\) is the thermal conductivity of layer \\(s\\), calculted from soil moisture and texture following Dharssi et al. (2009) (see function soil_thermalconductivity()). The gradient in the lowermost layer is calculated assuming a temperature of the earth (at 10 m) of 15.5 Celsius. Finally, \\(C_{soil,s}\\) the thermal capacitance of soil layer \\(s\\) is calculated as: \\[\\begin{equation} C_{soil,s} = VTC_{soil,s} \\cdot d_s \\end{equation}\\] where \\(d_s\\) is the soil width of layer \\(s\\) (expressed in \\(m\\)) and \\(VTC_{s}\\) is the volumetric thermal capacity of soil layer \\(s\\) (in \\(J \\cdot m^{-3} \\cdot K^{-1}\\)), calculated from soil moisture and texture following a simplification of Cox et al. (1999) (see function soil_thermalcapacity()). 13.2 Multi-layer canopy A multi-layer canopy energy balance requires the calculation of sensible heat and latent heat exchanges between the air in each canopy layer and the leaves it contains. In addition, one has to consider heat exchanges between each layer and the ones below/above, derived from turbulent flow. 13.2.1 Latent heat The latent heat for a given canopy layer \\(j\\) (\\(LE_{j}\\); in \\(W\\cdot m^{-2}\\)) includes transpiration and evaporation of intercepted rain, and is estimated analogously to the single-canopy case (eq. (13.1)): \\[\\begin{equation} LE_{j} = \\lambda_v(T_{air,j}) \\cdot \\left(\\frac{In_{j,t}}{\\Delta t_{step}} + E_{j,t}\\right) \\end{equation}\\] where \\(\\lambda_v(T_{air,j})\\) is the latent heat of vaporization at temperature \\(T_{air,j}\\) (in \\(J·kg^{-1}\\)), \\(In_{j,t}\\) is the intercepted water that is evaporated from the canopy layer, determined by dividing \\(In_{t}\\) among canopy layers according to the fraction of total LAI in each one: \\[\\begin{equation} In_{j,t} = In_{t} \\cdot \\frac{\\sum_{i=1}{LAI_{i,j}^{\\phi}}}{LAI^{\\phi}_{stand}} \\end{equation}\\] and \\(E_{j,t}\\) is the instantaneous transpiration rate in layer \\(j\\) (in \\(kg\\,H_2O\\cdot m^{-2}\\cdot s^{-1}\\)), given by: \\[\\begin{equation} E_{j,t} = 10^{-3} \\cdot 0.01802\\cdot \\sum_{i=1}^{c}{E_{i,t}^{sunlit}\\cdot LAI_{i,j}^{sunlit} + E_{i,t}^{shade}\\cdot LAI_{i,j}^{shade}} \\tag{13.5} \\end{equation}\\] where \\(E_{i,t}^{sunlit}\\) and \\(E_{i,t}^{shade}\\) are the instantaneous transpiration rates (in \\(mmol\\,H_2O\\cdot m^{-2}\\cdot s^{-1}\\)) of sunlit and shade leaves, respectively, of cohort \\(i\\) during time step \\(t\\); and \\(LAI_{i,j}^{sunlit}\\) and \\(LAI_{i,j}^{shade}\\) are the leaf area index of sunlit and shade leaves, respectively, of cohort \\(i\\) in layer \\(j\\) (9.1). Latent heat derived from soil water evaporation of snow melting (\\(LE_{soil}\\); in \\(W\\cdot m^{-2}\\)) is estimated as in the single-canopy case, using eq. (13.2). 13.2.2 Sensible heat between leaves and the canopy air space The sensible heat exchanged between the air of canopy layer \\(j\\) and the leaves within it (\\(H_{leaf,j}\\); \\(W\\cdot m^{-2}\\)) is obtained using: \\[\\begin{equation} H_{leaf,j} = \\sum_{i=1}^c { LAI^{sunlit}_{i,j} \\cdot H^{sunlit}_{i,j} + LAI^{shade}_{i,j} \\cdot H^{shade}_{i,j}} \\end{equation}\\] where \\(LAI^{sunlit}_{i,j}\\) and \\(LAI^{shade}_{i,j}\\) are the leaf area index of sunlit and shade leaves of plant cohort \\(i\\) in layer \\(j\\), respectively (see eq. (9.1)). \\(H^{sunlit}_{i,j}\\) and \\(H^{shade}_{i,j}\\) are the sensible heat exchange between layer \\(j\\) and sunlit or shade leaves of cohort \\(i\\) (Ma and Liu 2019): \\[\\begin{eqnarray} H^{sunlit}_{i,j} &amp;=&amp; -2 \\cdot C_p \\cdot (T^{sunlit}_{leaf,i} - T_{air,j})\\cdot g_{Ha,i,j}\\\\ H^{shade}_{i,j} &amp;=&amp; -2\\cdot C_p \\cdot (T^{shade}_{leaf,i} - T_{air,j})\\cdot g_{Ha,i,j} \\end{eqnarray}\\] where \\(T^{sunlit}_{leaf,i}\\) and \\(T^{shade}_{leaf,i}\\) are, respectively, the sunlit and shade leaf temperatures for cohort \\(i\\) (determined using eq. (11.1)); \\(T_{air,j}\\) is the current air temperature in canopy layer \\(j\\), \\(C_p = 29.37152\\,J \\cdot mol^{-1} \\cdot ºC^{-1}\\) is the specific heat capacity of dry air at constant pressure; and \\(g_{Ha,i,j}\\) is the leaf boundary layer conductance for heat (\\(mol \\cdot m^{-2} \\cdot s^{-1}\\)) for leaves of cohort \\(i\\) and wind speed in layer \\(j\\) (see eq. (11.2)). 13.2.3 Turbulent heat exchange Turbulent heat exchanges occur between the soil and the bottom canopy layer (i.e. \\(j=1\\)): \\[\\begin{equation} H_{1,soil} =\\frac{\\rho_{1} \\cdot c_p}{r_{1,soil}}\\cdot (T_{air,1} - T_{soil,1}) \\end{equation}\\] where \\(c_{p} = 1013.86\\,J·kg^{-1}·C^{-1}\\) is the specific heat capacity of the air, \\(\\rho_{1}\\) is the air density at \\(j=1\\), \\(T_{air,1}\\) is the air temperature of layer 1, \\(T_{soil,1}\\) is the temperature of the top soil layer and \\(r_{1,soil}\\) is the aerodynamic resistance between the soil and canopy layer 1 (in \\(s·m^{-1}\\)). The bottom layer also have turbulent heat exchanges with the layer above, determined by the canopy turbulence model. The turbulent heat flux gradient for layer \\(j=1\\) is: \\[\\begin{equation} (\\delta F_{H}/\\delta z)_1 = \\frac{-c_p \\cdot \\rho_{1} \\cdot (T_{air,2} - T_{air,1})\\cdot \\bar{uw}_1}{\\Delta z \\cdot (\\delta u/\\delta z)_1} -H_{1,soil} \\end{equation}\\] where \\(\\Delta z\\) is the size of vertical layers (in \\(m\\)); and \\((\\delta u/\\delta z)_1\\) and \\(\\bar{uw}_1\\) are the wind speed gradient and Reynolds stress at \\(j=1\\). For all intermediate layers (i.e. \\(1&lt;j&lt;l\\)) we have turbulent exchanges with the neighboring layers \\(j-1\\) and \\(j+1\\), which results in the following turbulent heat flux gradient: \\[\\begin{equation} (\\delta F_{H}/\\delta z)_j = \\frac{- c_p \\cdot \\rho_{j} \\cdot (T_{air,j+1} - T_{air,j-1})\\cdot \\bar{uw}_j}{2 \\cdot \\Delta z \\cdot (\\delta u/\\delta z)_j} \\end{equation}\\] And, finally, the topmost layer (i.e. \\(j=l\\)) has turbulent heat exchanges with the layer below \\(l-1\\) and the atmosphere, so that: \\[\\begin{equation} (\\delta F_{H}/\\delta z)_l = \\frac{- c_p \\cdot \\rho_{l} \\cdot (T_{atm} - T_{air,l-1})\\cdot \\bar{uw}_l}{2 \\cdot \\Delta z \\cdot (\\delta u/\\delta z)_l} \\end{equation}\\] 13.2.4 Canopy and soil temperature changes Evaluation of the canopy layer energy balance equation (7.4) is done taking into account that sensible heat exchange for a given layer \\(j\\) includes heat exchange with leaves (i.e. \\(H_{leaf,j}\\)) and the turbulent heat flux gradient (i.e. \\((\\delta F_{H}/\\delta z)_j\\)), so that the variation of air temperature in layer \\(j\\) for a given time interval \\(\\Delta t_{substep}\\) is: \\[\\begin{equation} \\Delta T_{air,j} = \\Delta t_{substep} \\cdot \\frac{K_{abs,j} + L_{net,j} - LE_{j} + H_{leaf,j} + (\\delta F_{H}/\\delta z)_j}{TC_{j}} \\end{equation}\\] where \\(TC_{j}\\) is the thermal capacitance of canopy layer \\(j\\) (in \\(J \\cdot m^{-2} \\cdot K^{-1}\\)), found analogously to \\(TC_{can}\\) (eq. (13.3)): \\[\\begin{equation} TC_{j} = TC_{LAI} \\cdot \\frac{0.8 \\cdot LAI_{j} + 1.2 \\cdot (LAI_{j}^{phi} + \\cdot LAI_{j}^{dead})}{2} \\end{equation}\\] \\(\\Delta t_{substep}\\) is the time step for closing the energy balance, which has to be smaller than \\(\\Delta t_{step}\\) to avoid numerical instabilities due to turbulent flow. When simulating a multiple-layer energy balance, we have to replace \\(H_{can,soil}\\) by \\(H_{1,soil}\\) in the energy inflow of soil layer 1: (13.4): \\[\\begin{equation} G_{0,1} = K_{soil} + L_{net,soil} + H_{1,soil} - LE_{soil} \\end{equation}\\] Soil temperature changes are estimated in the same way as for single-canopy energy balance, except that a smaller temporal step is used: \\[\\begin{equation} \\Delta T_{soil,s} = \\Delta t_{substep} \\cdot \\frac{G_{s-1,s} - G_{s,s+1}}{C_{soil,s}} \\end{equation}\\] 13.2.5 Within-canopy changes in water vapor and \\(CO_2\\) Multi-layer canopy energy balance also entails the possibility of considering gradients of scalars such as water vapor or \\(CO_2\\). Analogously to the turbulent heat exchange, wind turbulence leads to changes in concentration of water vapor or \\(CO_2\\) within canopy layers. In addition, plant physiology also alters the concentration of these gases through transpiration in photosynthesis. To model temporal changes in these scalars for canopy layers, we first have to estimate \\(CO_2\\) concentration in \\(mg \\cdot m^{-3}\\) and \\(H_2O\\) concentration in \\(kg\\cdot m^{-3}\\) from \\(C_{air,j}\\) (\\(ppm\\)) and \\(e_{air,j}\\) (\\(kPa\\)) using: \\[\\begin{eqnarray} [CO_2]_j &amp;=&amp; 0.409\\cdot 44.01 \\cdot C_{air,j} \\\\ [H_2O]_j &amp;=&amp; 0.622 \\cdot \\frac{e_{air,j} \\cdot \\rho_j}{P_{atm}} \\end{eqnarray}\\] The one-dimensional scalar flux balance for an homogeneous turbulent flow can be described by the following conservation equations (Lai et al. 2000): \\[\\begin{eqnarray} (\\delta [CO_{2}]/\\delta t)_j &amp;=&amp; (\\delta F_{[CO_2]}/\\delta z)_j + S_{[CO_2],j} \\\\ (\\delta [H_2O]/\\delta t)_j &amp;=&amp; (\\delta F_{[H_2O]}/\\delta z)_j + S_{[H_2O],j} \\tag{13.6} \\end{eqnarray}\\] where \\((\\delta F_{[CO_2]}/\\delta z)_j\\) and \\((\\delta F_{[H_2O]}/\\delta z)_j\\) are the gradients of vertical flux of \\(CO_2\\) and \\(H_2O\\) in layer \\(j\\), respectively; and \\(S_{[H_2O],j}\\) and \\(S_{[CO_2],j}\\) are the source strengths for \\([H_2O]\\) (in \\(kg\\,H_2O\\cdot m^{-3} \\cdot s^{-1}\\)) and \\([CO_2]\\) (in \\(mg\\,CO_2 \\cdot m^{-3} \\cdot s^{-1}\\)) in layer \\(j\\), respectively, which derive from transpiration (source of water) and photosynthesis (sink of \\(CO_2\\)): \\[\\begin{eqnarray} S_{[H_2O],j} &amp;=&amp; \\frac{(In_{j,t}/\\Delta t) + E_{j,t}}{\\Delta z} \\\\ S_{[CO_2],j} &amp;=&amp; - \\frac{A_{n, j,t}}{\\Delta z} \\end{eqnarray}\\] where \\(E_{j,t}\\) and \\(A_{n,j,t}\\) are the instantaneous transpiration and photosynthesis rates in layer \\(j\\). The former was already defined in eq. (13.5), whereas the latter (\\(A_{n, j,t}\\); in \\(mg\\,CO_2\\cdot m^{-2} \\cdot s^{-1}\\)) is defined analogously: \\[\\begin{equation} A_{n, j,t} = 10^{-3} \\cdot 44.01 \\cdot \\sum_{i=1}^{c}{A_{n,i,t}^{sunlit}\\cdot LAI_{i,j}^{sunlit} + A_{n,i,t}^{shade}\\cdot LAI_{i,j}^{shade}} \\end{equation}\\] where \\(A_{n,i,t}^{sunlit}\\) and \\(A_{n,i,t}^{shade}\\) are the instantaneous net photosynthesis rates (in \\(\\mu mol\\, CO_2\\cdot m^{-2}\\cdot s^{-1}\\)) of sunlit and shade leaves, respectively, of cohort \\(i\\) during time step \\(t\\); and \\(LAI_{i,j}^{sunlit}\\) and \\(LAI_{i,j}^{shade}\\) are the leaf area index of sunlit and shade leaves, respectively of cohort \\(i\\) in layer \\(j\\) (9.1). For the special case of the lowest canopy layer, water vapor needs to include the evaporation from soil, i.e.: \\[\\begin{equation} S_{[H_2O],1} = \\frac{((In_{1,t}+Es_{t})/\\Delta t) + E_{1,t}}{\\Delta z} \\end{equation}\\] For any layer \\(1&lt;j&lt;l\\) the gradients of vertical scalar fluxes are found using: \\[\\begin{eqnarray} (\\delta F_{[H_2O]}/\\delta z)_j = - \\frac{c_p \\cdot \\rho_{j} \\cdot ([H_2O]_{j+1} - [H_2O]_{j-1})\\cdot \\bar{uw}_j}{2 \\cdot \\Delta z \\cdot (\\delta u/\\delta z)_j} \\\\ (\\delta F_{[CO_2]}/\\delta z)_j = - \\frac{c_p \\cdot \\rho_{j} \\cdot ([CO_2]_{j+1} - [CO_2]_{j-1})\\cdot \\bar{uw}_j}{2 \\cdot \\Delta z \\cdot (\\delta u/\\delta z)_j} \\end{eqnarray}\\] whereas for the bottom layer (\\(j=1\\)) we have: \\[\\begin{eqnarray} (\\delta F_{[H_2O]}/\\delta z)_1 = - \\frac{c_p \\cdot \\rho_{1} \\cdot ([H_2O]_{2} - [H_2O]_{1})\\cdot \\bar{uw}_1}{\\Delta z \\cdot (\\delta u/\\delta z)_1} \\\\ (\\delta F_{[CO_2]}/\\delta z)_1 = - \\frac{c_p \\cdot \\rho_{1} \\cdot ([CO_2]_{2} - [CO_2]_{1})\\cdot \\bar{uw}_1}{\\Delta z \\cdot (\\delta u/\\delta z)_1} \\end{eqnarray}\\] and for the top layer (\\(j=l\\)) we have: \\[\\begin{eqnarray} (\\delta F_{[H_2O]}/\\delta z)_l = - \\frac{c_p \\cdot \\rho_{l} \\cdot ([H_2O]_{atm} - [H_2O]_{l-1})\\cdot \\bar{uw}_l}{2 \\cdot \\Delta z \\cdot (\\delta u/\\delta z)_l} \\\\ (\\delta F_{[CO_2]}/\\delta z)_l = - \\frac{c_p \\cdot \\rho_{j} \\cdot ([CO_2]_{atm} - [CO_2]_{l-1})\\cdot \\bar{uw}_l}{2 \\cdot \\Delta z \\cdot (\\delta u/\\delta z)_l} \\end{eqnarray}\\] Equation (13.6) is solved via discretization both in terms of space (vertical layers) and time, the latter using \\(\\Delta t_{substep}\\) as for the energy balance. Bibliography "],["daylevelresults.html", "Chapter 14 Day-level results 14.1 Photosynthesis and transpiration 14.2 Plant water potentials and relative water contents 14.3 Plant drought stress", " Chapter 14 Day-level results In the preceeding chapters we detailed how the model performs canopy and soil energy balances for subdaily time steps and how transpiration and photosynthesis values are determined for any given substep. This chapter indicates how these are aggregated at the daily scale and how other day-level model outputs are calculated. 14.1 Photosynthesis and transpiration Cohort’s transpiration \\(Tr_{i,t}\\) (eq. (12.1)) are added across subdaily steps to yield daily transpiration (\\(Tr_{i}\\), in \\(mm\\,H_2O\\)): \\[\\begin{equation} Tr_{i} = \\sum_{t=1}^{n_t} {Tr_{i,t}} \\end{equation}\\] An the same for water extraction \\(Ex_{i,s,t}\\) for each soil layer \\(s\\) (eq.(12.2)): \\[\\begin{equation} Ex_{i,s} = \\sum_{t=1}^{n_t} {Ex_{i,s,t}} \\end{equation}\\] \\(Ex_{i,s}\\) are substracted from the water content of the corresponding soil layer, closing the soil water balance of the day (eq. (7.1)). Daily values of net carbon assimilation for plant cohorts are obtained similarly. \\(A_{n, i, t}\\) (eq. (12.3)) are added across subdaily steps to obtain \\(A_{n,i}\\), the daily net assimilation at the cohort level (in \\(g\\,C·m^{-2}\\)): \\[\\begin{equation} A_{n,i} = \\sum_{t=1}^{n_t} {A_{n,i,t}} \\end{equation}\\] 14.2 Plant water potentials and relative water contents Because the model determines optimum transpiration for every subdaily time step, this leads to a daily sequence of leaf water potential (\\(\\Psi_{leaf,i,t}\\)), stem water potential (\\(\\Psi_{stem,i,t}\\)), root crown water potential (\\(\\Psi_{rootcrown,i,t}\\)) and root surface water potential (\\(\\Psi_{rootcrown,i,s,t}\\)) values for each plant cohort \\(i\\) (and soil layer \\(s\\) in the last case). The model defines the following daily water potentials for every cohort \\(i\\): Pre-dawn leaf water potential (\\(\\Psi_{pd, i}\\)): the maximum of \\(\\Psi_{leaf,i,t}\\) values. Pre-dawn shade leaf water potential (\\(\\Psi_{pd, i}^{shade}\\)): the maximum of \\(\\Psi_{leaf,i,t}^{shade}\\) values. Pre-dawn sunlit leaf water potential (\\(\\Psi_{pd, i}^{sunlit}\\)): the maximum of \\(\\Psi_{leaf,i,t}^{sunlit}\\) values. Mid-day leaf water potential (\\(\\Psi_{md, i}\\)): the minimum of \\(\\Psi_{leaf,i,t}\\) values. Mid-day shade leaf water potential (\\(\\Psi_{md, i}^{shade}\\)): the minimum of \\(\\Psi_{leaf,i,t}^{shade}\\) values. Mid-day sunlit leaf water potential (\\(\\Psi_{md, i}^{sunlit}\\)): the minimum of \\(\\Psi_{leaf,i,t}^{sunlit}\\) values. Stem water potential (\\(\\Psi_{stem, i}\\)): the minimum of \\(\\Psi_{stem,i,t}\\) values. Root-crown water potential (\\(\\Psi_{rootcrown, i}\\)): the minimum of \\(\\Psi_{rootcrown,i,t}\\) values. Root surface water potentials (\\(\\Psi_{rootsurf, i,s}\\)): the minimum of \\(\\Psi_{rootsurf,i,s,t}\\) values for each soil layer \\(s\\). Analogously, relative water content of stems and leaves is known for every subdaily time step, which results in a daily sequence of leaf relative water content (\\(RWC_{leaf,i,t}\\)) and stem relative water content (\\(RWC_{stem,i,t}\\)). These are summarized at the daily level for each plant cohort \\(i\\): Leaf relative water content (\\(RWC_{leaf, i}\\)): the mean \\(RWC_{leaf,i,t}\\) values. Stem relative water content (\\(RWC_{stem, i}\\)): the mean of \\(RWC_{stem,i,t}\\) values. Finally, the daily sequence of slopes of the supply function (\\(dE/d\\Psi_{i,t}\\)) is also averaged at the daily level: Slope of the supply function (\\(dE/d\\Psi_{i}\\)): the mean \\(dE/d\\Psi_{i,t}\\) values. 14.3 Plant drought stress In order to have an estimate of daily drought stress for the plant cohort, the model uses the stem vulnerability curve of the plant to find the conductance relative to maximum stem conductance and turns it into its complement: \\[\\begin{equation} DDS_i = \\phi_i \\cdot \\left( 1.0 - \\frac{k_{stem, i}(\\Psi_{rootcrown,i})}{k_{\\max stem, i}}\\right) = \\phi_i \\cdot \\left(1.0 - e^{-(\\Psi_{rootcrown,i}/d_{stem})^{c_{stem}}}\\right) \\end{equation}\\] where \\(\\phi_i\\) is the leaf phenological status. Note the use of \\(\\Psi_{rootcrown,i}\\) (and not \\(\\Psi_{leaf,i}\\)) to determine drought stress index. Thus the model tracks the degree of conductance decrease at the beginning of the stem as a measure of drought stress. This choice makes daily drought stress values of the Simple and Complex transpiration modes more comparable (because leaf mid-day water potentials are usually much more negative than soil water potentials) and is a sensible choice if one wants to run the model in irreversible cavitation mode (see below). "],["growthmodelling.html", "Chapter 15 Forest growth model 15.1 Design principles 15.2 State variables 15.3 Carbon balance 15.4 Process scheduling 15.5 Inputs and outputs 15.6 Applications", " Chapter 15 Forest growth model This chapter provides an overview of a forest growth model, which builds on the previous two models and allows simulating carbon and water balance as well as growth and mortality on a daily step basis for a given forest stand and for the period corresponding to input weather data. The model is run using function growth(), for a set of days, or function growth_day(), for a single day. The forest growth model can be run in two different levels of complexity, depending on the water balance submodel employed (basic and advanced, corresponding to chapters 3 and 7). In this and the following chapters, we indicate those design and formulation elements where the forest growth model building on the basic water balance differs from that building on the advanced one. The information provided in the current chapter should be enough to understand what the growth model does, but the reading previous chapters and the following ones should provide a more detailed understanding on how the different processes are designed and formulated. 15.1 Design principles 15.1.1 Overview Like in the preceding models, the physical structure of the stand is represented in one (vertical) dimension (i.e. the horizontal coordinates of plants are not explicit). The model is cohort-based, meaning that similar plant individuals are represented using a single entity with average characteristics (e.g. tree height and diameter at breast height) and a density variable is used to scale from individual level to the cohort level. Processes are perfomed either at the cohort level (water balance, photosynthesis, or plant mortality) or at the “average” individual level (carbon balance, tissue growth and senescence). Water fluxes, soil water balance and plant photosynthesis processes follow the design of the soil water balance model and will not be repeated here (see chapters 3 and 7). The growth model tries to reproduce the physiological processes that modulate leaf area changes, sapwood area changes and fine root area changes (the latter only under the advanced water balance submodel), while accounting for both source and sink limitations to tissue growth. Formation of new sapwood leads to diameter and height increases, so that physiological processes involve structural changes. Since the model does not implement all processes and drivers (such as nutrient availability) potentially affecting growth, user input parameters are used to empirically constrain growth rates and plant size, i.e. maximum relative sapwood area growth rates, maximum plant height and diameter-height ratios. The forest growth model also implements tree mortality, which reduces cohort density. A baseline mortality rate is incremented either because of exhaustion of carbon reserves (i.e. plant starvation) or dehydration of plant tissues (i.e. plant desiccation). 15.1.2 Carbon compartments, transport and carbon balance Three different carbon compartments are considered: leaves, sapwood (including stem, branches and coarse roots) and fine roots. Compartments include carbon pools in different forms. Carbon pools are differentiated between structural and labile. In turn, labile carbon involves metabolic and storage (Richardson et al. 2013; Dietze et al. 2014), with a conversion rate regulated by the need to maintain, as much as possible, an equilibrium in the amount of metabolic carbon to sustain cell metabolism and for osmotic purposes. Details of the carbon pools in different compartments are as follows (Fig. 15.1): Structural carbon corresponds carbon forming cell membranes, cell walls and the cytosolic machinery (in the case of living cells). The amount of structural carbon in a given compartment is used to determine maintenance respiration costs (together with labile carbon), and the structural carbon per tissue unit determines growth respiration costs. Structural carbon occurs in the three compartments, leaves, sapwood and fine roots, which however have different maintenance and growth costs. Sapwood carbon includes branches, stem and coarse roots. Only live (parenchymatic) sapwood cells, accounting for between 5 and 40% of sapwood volume (Plavcová and Jansen 2015), contribute to estimate sapwood maintenance respiration costs. Structural carbon is lost via tissue senescence (in the case of sapwood due to conversion to heartwood). Metabolic carbon is a labile carbon form assumed to correspond to sugars (e.g., glucose or fructose) used to sustain cell functioning (i.e. provide carbon for maintenance respiration). Moreover, changes in metabolic carbon are coupled to variations in osmotic potential. Metabolic carbon occurs in leaves and sapwood compartments only. Leaf metabolic carbon is generated from photosynthesis or leaf starch degradation and used in different functions, including leaf maintenance respiration and export to sapwood via phloem transport. An excess of leaf metabolic carbon can inhibit photosynthesis. Sugar concentration in the phloem is assumed to be (passively) in equilibrium with leaf metabolic sugar concentration. Sapwood metabolic carbon comes from phloem transport, or sapwood starch degradation, and is used to directly sustain maintenance respiration of sapwood and fine roots. Storage carbon is a labile carbon form assumed to loosely correspond to starch. Leaf storage carbon is intended to represent short-term storage (mainly starch within chloroplasts) and its inclusion in the model follows the need to buffer daily variations in leaf metabolic carbon as well as in the corresponding leaf osmotic potential. Sapwood storage carbon in parenchymatic tissues of branches, stems and coarse roots conforms a much larger carbon pool and is intended to serve as carbon source for growth and long-term (seasonal and inter-annual) storage (Plavcová and Jansen 2015). Figure 15.1: Schematic representation of carbon compartments, carbon pools and carbon balance components (translocation of reserves during senescence not included) Photosynthesis estimates come from the water balance submodel. Growth and maintenance respiration rates are calculated at the individual level, by estimating the respiration of leaves, sapwood and fine root compartments. Maintenance respiration of leaves and sapwood depends on both structural and metabolic carbon, whereas only structural carbon counts for fine root maintenance respiration because they lack labile carbon pools. Sapwood maintenance and growth respiration costs depend on sapwood area, stem height and coarse root length. Carbon balance of leaf labile (metabolic and storage) carbon is performed by considering photosynthesis, sugar-starch conversion and phloem transport. Any surplus in leaf or sapwood storage carbon is assumed to be diverted towards root exudation. Hence, root exudation is not a process competing for metabolic carbon, but only a consequence of plant C storage capacity being surpassed (Prescott et al. 2020). During leaf senescence it is assumed that non-structural carbon sources (i.e. labile carbon pools) are recycled and relocated to sapwood storage. Analogously, when sapwood is converted into heartwood, labile carbon in the protoplasm of parenchyma cells is assumed to be re-absorbed by neighboring living cells as storage. Further design details and formulation regarding the estimation of carbon pool sizes and carbon balance components are given in chapter 16. 15.1.3 Tissue growth, senescence and allocation The forest growth model allows simulating the variation of leaf area, sapwood area and fine root area via the following processes: Leaf growth: Whereas in the water balance models expanded leaf area corresponded to the portion of live leaf area that was unfolded according to the phenological status (see 4.1), in the growth model expanded leaf area results from explicit simulation of growth. However, leaf phenology submodel still controls the duration of phenophases corresponding budburst, leaf development and senescence. Leaf area growth occurs during leaf unfolding periods only, whereas bud formation periods are required to update the target leaf area (in accordance to an allocation strategy, see below). Leaf senescence: Leaf senescence (and the corresponding increases in dead leaf area) can occur in the model due to leaf aging in evergreen species, due to programmed leaf senescence in deciduous species, due to a negative leaf metabolic carbon balance or due to leaf dessication (i.e. low leaf relative water content). Sapwood growth: Formation of sapwood area can only occur if unfolded leaves are present, assuming that hormonal signals controlling cambium division are mainly synthesized within leaves. Sapwood formation is modelled as a radial file of cells issued from cambium cell divisions and which progressively undergo enlargement and maturation (Andrew D. Friend et al. 2019). Volume increases of cells in the radial file are translated into ring area increases and, after comparing them to maximum ring area increases, are ultimately translated into sapwood area increases. Sapwood senescence: Losses in sapwood area (i.e. conversion to heartwood) can occur via tissue aging (i.e. assuming a daily rate of conversion) or stem cavitation, which also reduces the area of sapwood that is effectively functional for water transport. Similarly to 3-PG (Landsberg and Waring 1997) we assume that the relative turnover rate of sapwood is smallest for young plants, and it increases up to a maximum value. However, recent reviews indicate that heartwood formation should be viewed as an active developmental program during which a conductive but vulnerable sapwood is transformed in a non-conductive but durable heartwood (Spicer 2005). Fine root growth: Fine root growth can in principle occur any time of the year (i.e. the model does not explicitly consider root phenology), but since fine root biomass targets depend on leaf area, seasonal fine root area patterns will follow phenological changes in leaf area. Fine root senescence: Fine root senescence occurs via aging with a turnover rate depending on soil temperature. Formation of new leaf, sapwood and fine root tissues is determined taking into account both source (i.e. sapwood storage carbon availability) and sink (i.e. biophysical constraints on plant tissue expansion) limitations (Fatichi, Leuzinger, and Körner 2014; Guillemot et al. 2015; Körner 2015). Temperature and turgor sink limitations are implemented following Cabon, Fernández‐de‐Uña, et al. (2020) and Cabon, Peters, et al. (2020). These authors developed their approach for tracheid production and enlargement only, whereas we apply it to different kinds of tissues. Growth controls include also the effect of detecting low levels of metabolic carbon in the stem (by default 50% of equilibrium concentration), which allows stopping growth to use available carbon for maintenance respiration. Two options are possible regarding the allocation to leaves vs sapwood: Stable Huber value: In this strategy, growth of leaf area and sapwood area need are coordinated so that the ratio of leaf area to sapwood area (i.e. Huber value) is in dynamic equilibrium around its initial value. To this aim, increases in leaf area are scheduled whenever the current Huber value is larger than the target (i.e. there is an excess of sapwood area). This approach is similar to the LPG model (Sitch et al. 2003), where different turnover rates are applied for different tissues, but then the model tries to satisfy the pipe model (Shinozaki et al. 1964) by allocating C where it is more limiting. Note that in this strategy the whole-plant conductance will progressively decrease with the increase in plant height, because of the increase in the length of stem xylem pathway. Stable whole-plant conductance: Ratios of leaf area to sapwood area (i.e. Huber values) can vary within species, due to environmental conditions (Mencuccini and Grace 1995). In this allocation strategy, growth of leaf area, sapwood area and height needs to be coordinated so that whole-plant conductance (i.e. from roots to leaves) is in dynamic equilibrium around its initial value. Increases in leaf area are scheduled whenever the current whole-plant conductance is above the target value. In this strategy, the Huber value will tend to increase with the increase in plant height, therefore increasing the sapwood respiratory demands. Pursuing a stable Huber value is the only strategy available when running the growth model along with the basic water balance submodel, but the two strategies are possible when simulating growth along with the advance water balance. Fine root area growth is only modelled when simulating growth with advance water balance. Fine root area growth is coordinated with the formation of the other tissues via the need to ensure an average resistance fraction in the rhizosphere, which is used to define the fine root area target and, hence, the allocation to fine roots. The growth rates in all three compartments are modulated by parameters specifying maximum daily growth rates relative to the amount of sapwood area. However, since leaf and fine root area targets are constrained by the amount of sapwood area via allocation rules, the relative growth rate for sapwood area also indirectly determines the growth rates of leaves and fine roots at seasonal and annual scales, hence determining the whole-plant growth rate. Further details and formulation of growth, senescence and allocation are given in chapter 17. 15.1.4 Coordination between water and carbon balances When using the advanced water balance submodel, the growth model allows coordinating several aspects of carbon and water balances through different state variables (Fig. 15.2): Transpiration and photosynthesis are coordinated via the stomatal regulation submodel (see chapter 11). Leaf water potential of symplastic tissues determines the turgor pressure necessary for growth (17.1.2), while (metabolic) sugar concentration in the leaf tissues determines changes in osmotic potential at full turgor and hence, the relative water content of symplasmic tissue. Analogously, water potential of stem symplastic tissues determines the turgor in the cambium and the sapwood formation rate (17.1.3), while the sugar concentration in the sapwood determines the osmotic potential at full turgor of stem symplastic tissues. Leaf growth and senescence influence hydraulic conductances of several tissues (fine roots, coarse root sapwood and stem sapwood), as they are defined on a leaf area basis (17.3.1). Sapwood growth and senescence influence hydraulic conductance of stems via changes in sapwood area, and indirectly those of coarse roots and the rhizosphere (17.3.1). Fine root biomass dynamics determines fine root distribution and rhizosphere conductance across soil layers (17.3.1). Figure 15.2: Schematic representation of relationships between water balance (advanced model) and carbon balance. Relationships within water or carbon balances have been omitted 15.1.5 Plant mortality Multiple mechanisms determine plant survival or mortality under drought (N. McDowell et al. 2008). However, hydraulic failure is widely recognized as one of the key mechanisms of drought-induced mortality in woody plants. Lethal water potential have been defined as a critical threshold beyond which trees are unable to recover from drought, even after rewatering. Experimental work by Urli et al. (2013) determined that irreversible damage in angiosperm saplings occurred only after 88% losses in stem hydraulic conductance. Similarly, Hammond et al. (2019) found probability of mortality to strongly increase beyond 80% of loss in hydraulic conductivity in saplings a gymnosperm species. In a multi-species synthesis, Adams et al. (2017) assessed found that all studied species showed at least 60% or higher loss of xylem hydraulic conductivity, whereas evidence for carbon starvation was more common for gymnosperms. While loss of hydraulic function seems ubiquitous in drought-related mortality, not all researchers agree that hydraulic failure be the primary cause of mortality. Körner (2019) argued that hydraulic failure often correlates with a critical degree of tree dehydration and that the disruption of capillary continuum from soil to the root because of soil dehydration is more important because it forces trees to drop their leaves and rely on their own water reserves. Trees will die when the symplast surpasses its dehydration tolerance, and Körner (2019) considers xylem embolism as a byproduct rather than the cause of critical tree dehydration under severe drought, so that mechanistic models should focus on the dehydration process. Other authors have stressed the importance of the interplay between water reserves and water loss rates through cuticule after stomatal closure (Blackman et al. 2016; Martin-StPaul, Delzon, and Cochard 2017). Regardless of causality, loss of hydraulic function could still be a good indicator of mortality likelihood. However, recently Martínez-Vilalta et al. (2019) suggested use the relative water content as an indicator of mortality risk, as it integrates several aspects related to hydraulics, stomatal responses and carbon economy during drought. Dynamic vegetation models implement mortality processes in very different ways, from purely-empirical to process-based (Hawkes 2000; Keane et al. 2001; Bugmann et al. 2019). The fact that proximal causes of mortality are complex, co-occurring, interrelated and variable has prompted the question of whether a mechanistic approach will improve prediction ability (Adams et al. 2013). In medfate, woody plants are assumed to die at a constant basal rate due to processes not included in the model (e.g. biotic attacks). Importantly, mortality rates are assumed to increase whenever physiological thresholds presumed to lead to plant mortality are surpassed (Hawkes 2000). The model allows plants to die from either starvation (if metabolic carbon is exhausted) or dessication (tissue dehydration) (N. McDowell et al. 2008; N. G. McDowell 2011). Allowing for starvation is important to simulate death due to shading by other plant cohorts, whereas plant dessication is important to deal with drought impacts. Following Martínez-Vilalta et al. (2019), we use the relative water content (RWC) in the stem symplastic tissues as the stress variable increasing mortality likelihood under drought. Whereas the stem symplastic pressure-volume curve is always used to determine RWC from the stem water potential, in the basic water balance model the latter is assumed to be equal to the estimated plant water potential (i.e. \\(\\Psi_{sym, stem} = \\Psi_{plant}\\); see 6.2.1). Moreover, in the advanced water balance model there is no distinction between stem apoplastic and symplastic (i.e. parenchymatic) water potentials (i.e. \\(\\Psi_{sym, stem} = \\Psi_{apo, stem}\\)) unless plant water compartments are explicitly simulated. The critical threshold is specified in the control variable mortalityRWCThreshold, set to 30% by default. Note that most studies focus on leaf RWC, for which Kursar et al. (2009) indicate ranges between 16% and 61%, and Körner (2019) advocates for values around 50%. We use the amount of metabolic sugar in the stem as indicator of starvation. Martínez-Vilalta et al. (2016) found that plants can have very distinct amounts of non-structural carbon concentration but minimum seasonal values are around 46% of maximum values. Accordingly, we define the indicator of starvation in relative terms (see control variable mortalityRelativeSugarThreshold, set to 30% by default) with respect to the stem equilibrium sugar concentration. With respect to intra-cohort variability, the model can be run assuming that all individuals within plant cohorts are functionally equal, so that mortality applies to the entire plant cohort. Alternatively, mortality can be applied to a fraction of the plant cohort, in proportion to the mortality likelihood, which implicitly acknowledges intra-cohort differences. As common in other models, mortality process can be simulated in a deterministic or stochastic fashion. Details of the implementation of plant mortality are given in chapter 17. 15.1.6 Tree diameter, tree height and shrub cover updates Update of stand structure is conducted once every simulated year. Tree diameter increment follows the creation of sapwood area, whereas sapwood area decreases do not affect diameter, as they imply conversion to heartwood. Tree height increments are estimated from diameter increments following diameter-height ratios that are modulated by the proportion of light available to the plant cohort, as frequently done in forest gap models (Lindner, Sievänen, and Pretzsch 1997). Tree crown ratios are updated using static allometric relationships, whereas shrub height and cover are estimated from new leaf area values by inverting static leaf biomass allometries. Further details and formulation of structural update are given in chapter 18. 15.2 State variables Many state variables are inherited by the corresponding water balance model and depend on its level of complexity (see 3.2 and 7.2). Several cohort-level state variables were treated as fixed parameters in the water balance models. For each plant cohort \\(i\\): Leaf area index of live leaves, \\(LAI^{live}_i\\). Diameter at breast height for trees, \\(DBH_i\\) (cohort average). Percent cover of shrubs, \\(Cover_i\\). Plant height, \\(H_i\\) (cohort average). Crown ratio, \\(CR_i\\). The proportion of fine roots, \\(FRP_{i,s}\\), in each soil layer \\(s\\). The radial length of coarse roots \\(L_{radial, i,s}\\) in each soil layer \\(s\\). Additional individual-level state variables are needed in growth model simulations: Sapwood area, \\(SA_i\\) (\\(cm^2\\)). Leaf area, \\(LA_i\\) (\\(m^2\\)). Fine root biomass \\(B_{fineroot,i,s}\\) (\\(g\\,dry\\)) in each soil layer \\(s\\). Sugar concentration in leaves, \\(SS_{leaf,i}\\) (\\(mol\\,gluc \\cdot L^{-1}\\)). Starch concentration in leaves, \\(ST_{leaf,i}\\) (\\(mol\\,gluc \\cdot L^{-1}\\)). Sugar concentration in sapwood (stem, branches and coarse roots), \\(SS_{sapwood,i}\\) (\\(mol\\,gluc \\cdot L^{-1}\\)). Starch concentration in sapwood (stem, branches and coarse roots), \\(ST_{sapwood,i}\\) (\\(mol\\,gluc \\cdot L^{-1}\\)). Note that \\(LA_i\\) is the same state variable as \\(LAI^{live}_i\\), but expressed at the individual level, because the density of individuals in the cohort does not change during the simulation. Other functional variables can be derived from the previous state variables and, hence, hence do not need to be treated as state variables themselves: Leaf biomass (\\(B_{leaf,i}\\);in \\(g\\,dry\\)) from \\(LA_i\\). Sapwood biomass (\\(B_{sapwood,i}\\); in \\(g\\,dry\\)) from \\(SA_i\\), \\(H_i\\) and \\(FRP_{i,s}\\) and \\(L_{radial,i,s}\\). Leaf storage volume (\\(V_{storage, leaf,i}\\); in \\(L\\)) from \\(B_{leaf,i}\\). Sapwood storage volume (\\(V_{storage, sapwood,i}\\); in \\(L\\)) from \\(SA_i\\), \\(H_i\\) and \\(FRP_{i,s}\\) and \\(L_{radial,i,s}\\). Fine root area (\\(FRA_{i,s}\\); in \\(m^2\\)) in each soil layer \\(s\\), from \\(B_{fineroot,i,s}\\). Belowground variables (fine root biomass, fine root distribution and radial length of coarse roots) are only considered dynamic when simulating growth with advance water balance. 15.3 Carbon balance Since the growth model builds on soil and plant water balances models, the water and energy balances explained in sections 3.3 or 7.3 (depending on transpirationMode) also hold for this model. The model performs daily carbon balance of labile carbon in leaves and sapwood (stem, branches and coarse roots) for each plant cohort. In each of these two compartments carbon balance is performed for the two labile carbon forms, dissolved sugars (i.e. metabolic carbon) and starch (i.e. storage carbon). In the following all carbon flows (i.e. the components of right hand side of equations) are assumed to be in units of \\(g\\,gluc \\cdot day^{-1}\\). At the leaf level, the carbon balance equations for dissolved sugars and starch are (\\(i\\) subscripts omitted): \\[\\begin{eqnarray} \\Delta{SS_{leaf}} \\cdot V_{storage,leaf} &amp;=&amp; A - M_{leaf} - F_{phloem} - SC_{leaf} - TS_{leaf}\\\\ \\Delta{ST_{leaf}} \\cdot V_{storage,leaf} &amp;=&amp; SC_{leaf} - TT_{leaf} - RE_{leaf} \\tag{15.1} \\end{eqnarray}\\] where \\(A\\) is (gross) photosynthesis, \\(M_{leaf}\\) is leaf maintenance respiration, \\(F_{phloem}\\) is the sugar flow via phloem towards the stem and roots, \\(SC_{leaf}\\) is the conversion from leaf sugar to leaf starch, \\(TS_{leaf}\\) and \\(TT_{leaf}\\) are the translocation of leaf sugars and starch into sapwood storage, respectively, during leaf senescence (see (15.2) below) and \\(RE_{leaf}\\) is the root exudation of leaf carbon. The corresponding carbon balance equations for sapwood dissolved sugars and starch are: \\[\\begin{eqnarray} \\Delta{SS_{sapwood}} \\cdot V_{storage,sapwood} &amp;=&amp; F_{phloem} - M_{sapwood} - M_{fineroot} - G_{leaf} - G_{fineroot} \\\\ &amp; &amp; - SC_{sapwood} - TS_{sapwood} \\\\ \\Delta{ST_{sapwood}} \\cdot V_{storage,sapwood} &amp;=&amp; SC_{sapwood} + TS_{leaf} + TT_{leaf} + TS_{sapwood} \\\\ &amp; &amp; - G_{sapwood} - RE_{sapwood} \\tag{15.2} \\end{eqnarray}\\] where \\(F_{phloem}\\) is the sugar inflow via phloem transport, \\(M_{sapwood}\\) is the sum of maintenance respiration of branches, stem and coarse roots, \\(M_{fineroot}\\) is the maintenance respiration of fine roots, \\(G_{leaf}\\), \\(G_{sapwood}\\) and \\(G_{fineroot}\\) are the carbon costs of forming new leaves, sapwood or fine roots (respectively), \\(SC_{sapwood}\\) is the conversion of sapwood sugar to sapwood starch, \\(TS_{sapwood}\\) is the translocation of sapwood sugars into starch during leaf senescence and \\(RE_{sapwood}\\) is the root exudation of sapwood carbon. If we define \\(S_{plant}\\) as the total amount of labile carbon in the plant (in \\(g\\,gluc\\)): \\[\\begin{equation} S_{plant} = (SS_{leaf} + ST_{leaf}) \\cdot V_{storage,leaf} + (SS_{sapwood} + ST_{sapwood}) \\cdot V_{storage,sapwood} \\end{equation}\\] then carbon balance at the plant level reduces to: \\[\\begin{equation} \\Delta{S_{plant}} = A - M - G - RE \\tag{15.3} \\end{equation}\\] where \\(M = M_{leaf} + M_{sapwood} + M_{fineroot}\\) is plant-level maintenance respiration, \\(G = G_{leaf} + G_{sapwood} + G_{fineroot}\\) is plant-level growth costs and \\(RE = RE_{leaf} + RE_{sapwood}\\) is plant-level root exudation. 15.4 Process scheduling Growth simulations are conducted in daily time steps. Depending on the transpiration mode (Granier or Sperry) the actual steps conducted are different (see subsections below). At the end of each year (or at the end of the simulated period) the model translates cumulative sapwood area growth into structural variables (i.e., plant height, tree DBH, tree crown ratio and shrub cover), as explained in chapter 18. 15.4.1 Basic scheduling For every day to be simulated, first executes soil water balance, transpiration and photosynthesis calculations by calling the basic water balance model (3.4). After that, the model performs the following steps for each plant cohort: Determine the amount of live structural biomass (in leaves, sapwood and fine root compartments), storage volume (in leaves and sapwood) and storage capacity (16.1). Calculate gross photosynthesis per individual (\\(A\\)), maintenance respiration for leaves (\\(M_{leaf}\\)), sapwood (\\(M_{sapwood}\\)) and fine roots (\\(M_{fineroot}\\)) (16.2). If phenology indicates leaf unfolding, evaluate leaf temperature and turgor sink limitations, growth costs (\\(G_{leaf}\\)) and leaf area increase (17.1.2). If sapwood growth is permitted, evaluate sapwood temperature and turgor sink limitations, growth costs (\\(G_{sapwood}\\)) and sapwood area increase (17.1.3). Update changes in sugar and starch compartments due to photosynthesis, maintenance respiration and growth. Apply transfer from leaf metabolic to sapwood metabolic carbon (16.2.4) and conversions between storage and metabolic carbon (16.2.5). Determine leaf senescence due to carbon starvation (17.2.1). Determine leaf senescence due to aging or cavitation effects (17.2.1). Determine sapwood area senescence by aging (17.2.2). Evaluate labile carbon translocation due to senescence (\\(TS_{leaf}\\), \\(TT_{leaf}\\) and \\(TS_{sapwood}\\)), adding the resulting carbon to the starch sapwood pool. Move any surplus in storage carbon to root exudation (\\(RE_{leaf}\\) and \\(RE_{sapwood}\\)). This completes the daily carbon balance for leaf labile pools (15.1), sapwood labile pools (15.2), and plant-level labile carbon (15.3). Update leaf area, sapwood area, storage volumes and the concentration of labile pools. Determine if plant death by starvation or desiccation occurred (17.4). Update derived variables (e.g., leaf area index and Huber value) (17.3.1). If phenology indicates bud formation, update the leaf area target (17.3.2). 15.4.2 Advanced scheduling For every day to be simulated, the model first executes soil water balance, energy balance, transpiration and photosynthesis calculations in subdaily times steps, by calling the advanced water balance model (7.4).After that, the model performs the following steps for each plant cohort: Determine the amount of live structural biomass (in leaves, sapwood and fine root compartments), storage volume (in leaves and sapwood) and storage capacity (16.1). For every subdaily step, perform carbon balance as follows: Calculate gross photosynthesis per individual (\\(A\\)) and maintenance respiration for leaves (\\(M_{leaf}\\)), sapwood (\\(M_{sapwood}\\)) and fine roots (\\(M_{fineroot}\\)), taking into account both live structural biomass and labile sugar biomass (see 16.2). If phenology indicates leaf unfolding, evaluate temperature and turgor sink limitations for growth of leaves, estimate growth costs (\\(G_{leaf}\\)) and record leaf area increases (17.1.2). If sapwood growth is permitted, evaluate temperature and turgor sink limitations for growth of sapwood, estimate growth costs (\\(G_{sapwood}\\)) and record sapwood area increases (17.1.3). Evaluate temperature and turgor sink limitations for growth of fine roots, estimate growth costs (\\(G_{fineroot}\\)) and record fine root biomass increases (17.1.4). Evaluate phloem transport (\\(F_{phloem}\\)) and sugar-starch dynamics in the leaf and sapwood compartments at 1s time steps (16.2.4), including photosynthesis, maintenance respiration and growth respiration as well as diversion towards root exudation if maximum leaf or sapwood starch capacity is attained (\\(RE_{leaf}\\) and \\(RE_{sapwood}\\)). Determine leaf senescence due to negative carbon balance (17.2.1). This completes the sub-daily carbon balance for plant-level labile carbon (15.3). Determine leaf senescence due to aging or cavitation effects (17.2.1). Determine sapwood area senescence by aging (17.2.2). Evaluate labile carbon translocation due to senescence (\\(TS_{leaf}\\), \\(TT_{leaf}\\) and \\(TS_{sapwood}\\)), adding the resulting carbon to the starch sapwood pool. This completes the daily carbon balance for leaf labile pools (15.1), sapwood labile pools (15.2). Apply fine root biomass growth and senescence (17.2.3). Update leaf area, sapwood area, storage volumes and the concentration of labile pools. Determine if plant death by starvation or desiccation occurred (17.4). Update derived variables (e.g., leaf area index, Huber values, hydraulic conductance of stems, roots and rhizosphere, osmotic potential at full turgor of leaves and sapwood) (17.3.1). If phenology indicates bud formation, update the leaf area target (17.3.2). Update the fine root biomass target, according to the hydraulic conductance in the rhizosphere (17.3.2). 15.5 Inputs and outputs 15.5.1 Soil, vegetation and meteorology Soil Soil input requirements are the same as for the basic water balance model and were fully described in section 2.2. Genuchten (1980) water retention curves are forced for this model, because rhizosphere conductance is modelled using van Genuchten hydraulic equations (see subsection 10.1). Vegetation Vegetation input requirements were fully described in section 2.3. Trees and shrubs do not need to be characterized with different variables in soil water balance calculations, since both kinds of cohort have a \\(LAI\\) value. In most cases, users only need to estimate the leaf area index corresponding to live leaves, i.e. \\(LAI^{live}\\), because one can assume no dead leaves in the canopy (i.e., \\(LAI^{dead} = 0\\)). Note that vegetation characteristics are modified by simulations in this model. Metereological input Weather input data must include variables calculated at the daily scale. The variables required by function growth() depend on the transpiration mode, similarly to function spwb(). We recommend meteorological input to be generated using package meteoland (De Cáceres et al. 2018). 15.5.2 Vegetation functional parameters The growth model requires many functional parameters to be specified for plant cohorts. Some of them depend on whether the basic or advanced water balance is adopted. Here we report functional parameters needed in addition to those necessary for the water balance submodel. A first set of parameters refers to anatomical features (paramsAnatomy): Symbol Units R Description \\(H_{max,i}\\) \\(cm\\) Hmax Maximum plant height \\(H_{med,i}\\) \\(cm\\) Hmed Median plant height \\(1/H_{v,i}\\) \\(m^2 \\cdot m^{-2}\\) Al2As Leaf area to sapwood area ratio \\(SLA_i\\) \\(m^2 \\cdot kg^{-1}\\) SLA Specific leaf area \\(LW_i\\) \\(cm\\) LeafWidth Leaf width \\(\\rho_{leaf,i}\\) \\(g \\cdot cm^{-3}\\) LeafDensity Leaf tissue density \\(\\rho_{wood,i}\\) \\(g \\cdot cm^{-3}\\) WoodDensity Wood tissue density \\(\\rho_{fineroot,i}\\) \\(g \\cdot cm^{-3}\\) FineRootDensity Fine root tissue density \\(f_{conduits}\\) [0-1] conduit2sapwood Proportion of sapwood corresponding to xylem conduits (the remaining corresponds to parenchymatic tissues) \\(SRL\\) \\(cm \\cdot g^{-1}\\) SRL Specific root length \\(RLD\\) \\(cm \\cdot cm^{-3}\\) RLD Fine root length density (i.e. density of root length per soil volume) \\(r_{6.35}\\) r635 Ratio between the weight of leaves plus branches and the weight of leaves alone for branches of 6.35 mm A second set of parameters refers to allometric coefficients needed for structural updates (paramsAllometries). Symbol Units R param Description \\(a_{ash}\\) Aash Coefficient relating the square of shrub height with shrub area \\(a_{bsh}\\), \\(b_{bsh}\\) Absh, Bbsh Coefficients relating crown volume with dry weight of shrub individuals \\(a_{cr}\\), \\(b_{1cr}\\), \\(b_{2cr}\\), \\(b_{3cr}\\), \\(c_{1cr}\\), \\(c_{2cr}\\) B1cr, B2cr, B3cr, C1cr, C2cr Coefficients to calculate crown ratio of trees \\(a_{cw}\\), \\(b_{cw}\\) Acw, Bcw Regression coefficients used to calculate the crown width of trees (as intermediary step to obtain the crown ratio). A third set of parameters refers to growth parameters (paramsGrowth). Symbol Units R param Description \\(MR_{leaf}\\) \\(g\\,gluc\\cdot g\\,dry^{-1}\\cdot day^{-1}\\) RERleaf Leaf respiration rate at 20 ºC \\(MR_{sapwood}\\) \\(g\\,gluc\\cdot g\\,dry^{-1}\\cdot day^{-1}\\) RERsapwood Living sapwood (parenchymatic tissue) respiration rate at 20 ºC \\(MR_{fineroot}\\) \\(g\\,gluc\\cdot g\\,dry^{-1}\\cdot day^{-1}\\) RERfineroot Fine root respiration rate at 20 ºC \\(RGR_{leaf, max}\\) \\(m^2 \\cdot cm^{-2} \\cdot day^{-1}\\) RGRleafmax Maximum leaf area daily growth rate, relative to sapwood area \\(RGR_{sapwood, max}\\) \\(cm^2 \\cdot cm^{-2} \\cdot day^{-1}\\) RGRsapwoodmax Maximum daily sapwood relative growth rate (in sapwood area basis) \\(RGR_{fineroot, max}\\) \\(g\\,dry \\cdot g\\,dry^{-1} \\cdot day^{-1}\\) RGRfinerootmax Maximum daily fine root relative growth rate \\(f_{HD,min}\\) \\(cm \\cdot cm^{-1}\\) fHDmin Minimum height-to-diameter ratio \\(f_{HD,max}\\) \\(cm \\cdot cm^{-1}\\) fHDmax Maximum height-to-diameter ratio Vegetation functional attributes are normally filled for each cohort by function growthInput() or forest2growthInput() from species identity. However, different parameters can be specified for different cohorts of the same species if desired (see section 2.3.6). 15.5.3 Control parameters Control parameters modulate the overall behaviour of growth simulations (see section 2.5). Parameters controlling water balance have been already described in sections 3.5.3 and 7.5.3. Here we only mention those control parameters specific to the growth() function. First, there are flags that regulate the application of processes: allowDessication [=TRUE]: Boolean flag to indicate that mortality by dessication is allowed. allowStarvation [=TRUE]: Boolean flag to indicate that mortality by starvation is allowed. allowDefoliation [=TRUE]: Boolean flag to indicate that complete drought-driven defoliation is allowed. sinkLimitation [=TRUE]: Boolean flag to indicate that temperature and turgor limitations to growth are applied. shrubDynamics [= FALSE]: Boolean flag to allow the application of demographic processes to shrubs. nonStomatalPhotosynthesisLimitation [=TRUE]: A flag to apply limitations of photosynthesis when leaf sugar levels become too high (only for transpirationMode = \"Sperry\"). An important parameter concerns the allocation strategy: allocationStrategy [=\"Plant_kmax\"] defines the allocation strategy (investment in leaf area vs. sapwood area) of the growth model. If allocationStrategy = \"Plant_kmax\" then the target leaf area is set to maintain the input whole-plant maximum conductance. If allocationStrategy = \"Al2As\" then the target leaf area is set to maintain the input Huber value. A number of control parameters regulate carbon balance: phloemConductanceFactor [= 0.2]: Factor to transform stem xylem conductance to phloem conductance (only for transpirationMode = \"Sperry\"). nonSugarConcentration [=0.25]: A constant specifying non-sugar (inorganic) solute concentration (\\(mol \\cdot L^{-1}\\)) in cells. equilibriumOsmoticConcentration [= c(leaf = 0.8, sapwood = 0.6)]: Equilibrium osmotic concentrations (\\(mol \\cdot L^{-1}\\)) for leaf and sapwood cells. The difference between leaf and sapwood values helps maintaining phloem transport. The equilibrium sugar concentration is found using equilibriumOsmoticConcentration - nonSugarConcentration and defaults to [= c(leaf = 0.55, sapwood = 0.35)]. minimumRelativeSugarForGrowth [= 0.25]: Minimum concentration of metabolic sugar relative to equilibrium sugar concentration for growth to occur in different tissues. This value (by default 50%) should always be larger than mortalityRelativeSugarThreshold [= 0.3], so that growth stops before starvation, and smaller than 1 (i.e. 100%), so that growth occurs under normal metabolic status. respirationRates [= c(leaf = 0.00260274, sapwood = 6.849315e-05, fineroot = 0.002054795)]: Maintenance respiration rates for different tissues (in \\(g\\,gluc \\cdot g\\, dry^{-1} · day^{-1}\\)). These are default values used when maintenance respiration rates are not specified via species-specific SpParams. turnoverRates [= c(sapwood = 0.0001261398, fineroot = 0.001897231)]: Relative turnover rates (\\(day^{-1}\\)) for sapwood and fine roots. Default are equivalent to 4.5% and 50% annual turnover for sapwood and fine roots, respectively. Leaf turnover rates depend on leaf lifespan (i.e. leaf duration) for evergreen species. constructionCosts [= c(leaf = 1.5, sapwood = 1.47, fineroot = 1.30)]: Construction costs, including respiration and structural carbon, per dry weight of new tissue (\\(g\\,gluc \\cdot g\\,dry^{-1}\\)). maximumRelativeGrowthRates [= c(leaf = 0.01, sapwood = 0.001, fineroot = 0.1)]: Maximum leaf growth rate relative to sapwood area (\\(m^{2}\\cdot cm^{-2} \\cdot day^{-1}\\)), maximum sapwood relative growth rate (\\(cm^{2}\\cdot cm^{-2} \\cdot day^{-1}\\)) and maximum fine root growth rate relative to sapwood area (\\(g\\,dry \\cdot g\\,dry^{-1} \\cdot day^{-1}\\)). These are default values used when relative growth rates are not specified via species-specific SpParams. Finally, we have the following options regarding mortality: mortalityMode [= \"density/deterministic\"]: String describing how mortality is applied. Current accepted values are combinations of \"cohort\" vs \"density\" (for whole-cohort mortality vs reduction of stem density) and \"deterministic\" vs. \"stochastic\". mortalityBaselineRate [= 0.01]: Deterministic proportion or probability specifying the baseline reduction of cohort’s density occurring in a year (for mortalityMode = \"density/deterministic\" or \"density/stochastic\"). mortalityRelativeSugarThreshold [= 0.3]: Threshold of stem sugar concentration relative to equilibrium values (by default 30%), resulting in an increased mortality rate/probability whenever levels are below. mortalityRWCThreshold [= 0.3]: Threshold of stem relative water content resulting in increased mortality rate/probability whenever levels are below. 15.5.4 Model output 15.5.4.1 Daily output Function growth returns a list object with the following elements: Element Description WaterBalance Climatic input and water balance flows (i.e. net precipitation, infiltration, runoff, transpiration…). All of them in \\(mm = L \\cdot m^{-2}\\). EnergyBalance Energy balance components (instantaneous values) for the soil and the canopy Temperature Minimum and maximum temperature values for topsoil, canopy and atmosphere Soil Soil variables for each soil layer: Moisture relative to field capacity (\\(W_s\\)), water potential (\\(\\Psi_s\\)) and volumetric water content (\\(V_s\\)). Stand Stand-level variables, such as \\(LAI^{\\phi}_{stand} = LAI^{live}_{stand}\\), \\(LAI^{dead}_{stand}\\), the water retention capacity of the canopy (\\(S_{canopy}\\)) or the fraction of light reaching the ground (\\(L^{PAR}_{ground}\\) and \\(L^{SWR}_{ground}\\)). Plants Plant-level variables, such as \\(LAI^{phi}_i\\), plant transpiration, plant water potential, etc. SunlitLeaves Leaf-level output variables for sunlit leaves (transpirationMode = \"Sperry\"). ShadeLeaves Leaf-level output variables for shade leaves (transpirationMode = \"Sperry\"). PlantCarbonBalance A list with the daily results of carbon balance components and carbon pools. PlantStructure A list with daily results of plant compartment sizes, in terms of area and biomass. PlantGrowth A list with daily results of growth rates for leaf, sapwood and fine roots. Elements WaterBalance to ShadeLeaves are equal to the output of function spwb and were described in previous chapters (see 3.5.4 and 7.5.4). The following table describes the child elements of PlantCarbonBalance, each of them a data frame with dates in rows and plant cohorts in columns: Element Symbol Units Description GrossPhotosynthesis \\(A_{i}/B_{i}\\) \\(g\\,gluc \\cdot g\\,dry^{-1} \\cdot day^{-1}\\) Daily gross photosynthesis per dry weight of living biomass. MaintentanceRespiration \\(M_{i}/B_{i}\\) \\(g\\,gluc \\cdot g\\,dry^{-1} \\cdot day^{-1}\\) Daily maintenance respiration (including leaves, sapwood and fine roots) per dry weight of living biomass. GrowthCosts \\(G_{i}/B_{i}\\) \\(g\\,gluc \\cdot g\\,dry^{-1} \\cdot day^{-1}\\) Daily growth costs (including leaves, sapwood and fine roots) per dry weight of living biomass. RootExudation \\(RE_{i}\\) \\(g\\,gluc \\cdot g\\,dry^{-1} \\cdot day^{-1}\\) Daily root exudation per dry weight of living biomass. CarbonBalance \\(\\Delta S_{i}/B_{i}\\) \\(g\\,gluc \\cdot g\\,dry^{-1}\\) Daily plant carbon balance (eq. (15.3)) per dry weight of living biomass. SugarLeaf \\(SS_{leaf,i}\\) \\(mol\\,gluc \\cdot L^{-1}\\) Sugar concentration in leaves. StarchLeaf \\(ST_{leaf,i}\\) \\(mol\\,gluc \\cdot L^{-1}\\) Starch concentration in leaves. SugarSapwood \\(SS_{sapwood,i}\\) \\(mol\\,gluc \\cdot L^{-1}\\) Sugar concentration in sapwood. StarchSapwood \\(ST_{sapwood,i}\\) \\(mol\\,gluc \\cdot L^{-1}\\) Starch concentration in sapwood. SugarTransport \\(F_{phloem}\\) \\(mol\\,gluc \\cdot s^{-1}\\) Average instantaneous rate of carbon transferred between leaves and stem compartments via phloem. LeafPI0 \\(\\pi_{0,leaf,i}\\) \\(MPa\\) Osmotic potential at full turgor of symplastic leaf tissue. StemPI0 \\(\\pi_{0,stem,i}\\) \\(MPa\\) Osmotic potential at full turgor of symplastic stem tissue. The following table describes the child elements of PlantStructure, again each of them a data frame with dates in rows and plant cohorts in columns: Element Symbol Units Description LeafArea \\(LA_{i}\\) \\(m^{2}\\) Daily amount of leaf area for an average individual. SapwoodArea \\(SA_{i}\\) \\(cm^{2}\\) Daily amount of sapwood area for an average individual. FineRootArea \\(FRA_{i}\\) \\(m^{2}\\) Daily amount of fine root area for an average individual. LeafBiomass \\(B_{leaf,i}\\) \\(g\\,dry \\cdot ind^{-1}\\) Daily leaf biomass for an average individual. SapwoodBiomass \\(B_{sapwood, i}\\) \\(g\\,dry \\cdot ind^{-1}\\) Daily sapwood biomass for an average individual. FineRootBiomass \\(B_{fineroot,i}\\) \\(g\\,dry \\cdot ind^{-1}\\) Daily fine root biomass for an average individual. LabileBiomass \\(B_{sugar,i}+B_{starch,i}\\) \\(g\\,dry \\cdot ind^{-1}\\) Daily labile carbon biomass for an average individual. TotalLivingBiomass \\(B_{total,i}\\) \\(g\\,dry \\cdot ind^{-1}\\) Daily total living biomass for an average individual. The following table describes the child elements of PlantGrowth, again each of them a data frame with dates in rows and plant cohorts in columns: Element Symbol Units Description LAgrowth \\(\\Delta LA_{i}/SA_i\\) \\(m^{2}\\cdot cm^{-2} \\cdot day^{-1}\\) Leaf area growth relative to sapwood area for an average individual. SAgrowth \\(\\Delta SA_{i}/SA_i\\) \\(cm^{2}\\cdot cm^{-2} \\cdot day^{-1}\\) Leaf area growth relative to sapwood area for an average individual. FRAgrowth \\(\\Delta FRA_{i}/SA_i\\) \\(m^{2}\\cdot cm^{-2} \\cdot day^{-1}\\) Fine root area growth relative to sapwood area for an average individual (only for transpirationMode = \"Sperry\"). 15.5.4.2 Subdaily output As with function spwb(), subdaily output can also be generated with function growth(). This is done via setting subdailyResults = TRUE in the control parameter list. In that case, the output list of growth() will include an element subdaily, whose subelements correspond to the results of growth_day() for each date simulated. Refer to the documentation of functions growth_day() for details of subdaily output. 15.6 Applications We believe the model is suited to study variations of plant growth derived from environmental conditions and competition for light and water. Bibliography "],["carbonpoolsbalance.html", "Chapter 16 Carbon pools and components of carbon balance 16.1 Size of carbon pools 16.2 Components of carbon balance", " Chapter 16 Carbon pools and components of carbon balance 16.1 Size of carbon pools Biomass of leaves, sapwood and fine roots is needed in the model to estimate respiratory costs and the size of the C storage pools. 16.1.1 Leaf structural, metabolic and storage biomass The live leaf area \\(LA^{live}\\) per individual (in \\(m^2\\)) is: \\[\\begin{equation} LA^{live} = 10000 \\cdot LAI^{live} / N \\tag{16.1} \\end{equation}\\] where \\(N\\) is the density of the cohort and \\(LAI^{live}\\) is the leaf area index. Structural leaf biomass per individual (\\(B_{leaf}\\); \\(g\\,dry·ind^{-1}\\)) is the result of dividing live leaf area by \\(SLA\\) (\\(m^{2} \\cdot kg^{-1}\\)), the specific leaf area of the species: \\[\\begin{equation} B_{leaf} = 1000 \\cdot LA^{live} / SLA \\end{equation}\\] where a factor 1000 is used to convert from kg to g. Hence, only expanded leaf area has respiratory cost (i.e. winter resistance buds do not). Leaf storage volume for an individual (\\(V_{storage,leaf}\\); in \\(L \\cdot ind^{-1}\\)) is: \\[\\begin{equation} V_{storage, leaf} = LA^{live} \\cdot V_{leaf} \\end{equation}\\] where \\(V_{leaf}\\) is the water storage capacity of leaf tissue per leaf area unit (in \\(L\\cdot m^{-2}\\)) (see A.2.7). Leaf storage volume is necessary to estimate the biomass of metabolic (sugars) or storage (starch) from the concentration of these substances in leaves (\\(SS_{leaf}\\) and \\(ST_{leaf}\\), which are expressed in \\(mol\\,gluc \\cdot L^{-1}\\)), and conversely. For example: \\[\\begin{equation} B_{sugar,leaf} = SS_{leaf} \\cdot V_{storage, leaf} \\cdot m_{gluc} \\end{equation}\\] where \\(m_{gluc}\\) is the molar mass of glucose. To estimate leaf starch storage capacity, the model assumes that up to 10% of leaf tissue volume can be occupied with starch, so that the leaf starch storage capacity (\\(ST^{max}_{leaf}\\); in \\(mol \\cdot ind^{-1}\\)) is: \\[\\begin{equation} ST^{max}_{leaf} = 0.1 \\cdot 1000 \\cdot \\frac{V_{storage, leaf} \\cdot \\rho_{starch}}{m_{starch}} \\end{equation}\\] where \\(\\rho_{starch}\\) is the density of starch and \\(m_{starch}\\) is its molar mass. 16.1.2 Sapwood structural, metabolic and storage biomass Sapwood volume (\\(V_{sapwood}\\); in \\(L \\cdot ind^{-1}\\)) is defined as the product of sapwood area and the sum of aboveground height and belowground coarse root length: \\[\\begin{equation} V_{sapwood} = 1000 \\cdot SA\\cdot (H + \\sum_{s}{FRP_s \\cdot L_s}) \\end{equation}\\] where \\(SA\\) is sapwood area, \\(H\\) is plant height, \\(FRP_{s}\\) is the proportion of fine roots in soil layer \\(s\\) and \\(L_{s}\\) is the coarse root length in layer \\(s\\) (all lengths expressed here in \\(m\\)). Sapwood structural biomass per individual (\\(B_{sapwood}\\); \\(g\\,dry·ind^{-1}\\)) represents the sapwood biomass of sapwood of trunks, branches and coarse roots. It is defined as the product of \\(V_{sapwood}\\) and wood density (\\(\\rho_{wood}\\); \\(g dry·cm^{-3}\\)): \\[\\begin{equation} B_{sapwood} = 1000 \\cdot V_{sapwood} \\cdot\\rho_{wood} \\end{equation}\\] While \\(B_{sapwood}\\) represents the structural sapwood biomass, it cannot be used to estimate sapwood respiration, since only xylem axial or radial parenchymatic rays (and not dead cells like tracheids or vessels) contribute to sapwood respiration. Hence, it is useful to estimate sapwood living biomass using: \\[\\begin{equation} B_{living, sapwood} = 1000 \\cdot V_{sapwood} \\cdot\\rho_{wood} \\cdot (1 - f_{conduits}) \\end{equation}\\] where \\(f_{conduits}\\) is the fraction of sapwood volume that corresponds to dead conducts, being the complement of the fraction of parenchymatic tissue. The volume available for metabolic or storage carbon within sapwood is limited by both the sapwood fraction that corresponds to parenchyma and wood porosity (i.e. \\((1 - (\\rho_{wood}/1.54))\\)). Sapwood storage volume (\\(V_{storage, sapwood}\\); in \\(L \\cdot ind^{-1}\\)) is: \\[\\begin{equation} V_{storage, sapwood} = V_{sapwood} \\cdot (1 - (\\rho_{wood}/1.54)) \\cdot (1 - f_{conduits}) \\end{equation}\\] Analogously to leaf carbon, \\(V_{storage, sapwood}\\) is used to estimate the biomass of metabolic (sugars) or storage (starch) from the concentration of these substances in sapwood (\\(SS_{sapwood}\\) and \\(ST_{sapwood}\\), which are expressed in \\(mol\\,gluc \\cdot L^{-1}\\)), and conversely. For example: \\[\\begin{equation} B_{sugar,sapwood} = SS_{sapwood} \\cdot V_{storage, sapwood} \\cdot m_{gluc} \\end{equation}\\] where \\(m_{gluc}\\) is the molar mass of glucose. To estimate sapwood storage capacity, the model assumes that up to 50% of volume of parenchymatic cells can be occupied with starch, so that the sapwood starch storage capacity (\\(ST^{max}_{sapwood}\\); in \\(mol \\cdot ind^{-1}\\)) is: \\[\\begin{equation} ST^{max}_{sapwood} = 0.5 \\cdot 1000 \\cdot \\frac{V_{storage,sapwood} \\cdot \\rho_{starch}}{m_{starch}} \\end{equation}\\] 16.1.3 Fine root structural biomass The fine root compartment does not have labile carbon (i.e. the model supplies labile carbon for fine roots from sapwood compartment), so that only the structural biomass of fine roots needs to be estimated. If growth is simulated using the basic water balance model, the biomass of fine roots per individual (\\(B_{fineroot}\\); \\(g\\,dry·ind^{-1}\\)) is assumed half of biomass: \\[\\begin{equation} B_{fineroot} = B_{leaf}/2 \\end{equation}\\] Hence, in this model fine-root maintenance respiration costs are also influenced by leaf-phenological status (Sitch et al. 2003). When growth is simulated using the advanced water balance model, fine root length per area in each soil layer (\\(FLA_s\\); \\(m \\cdot m^{-2}\\)) is estimated from rhizosphere conductance, assuming a cylindrical flow geometry in the rhizosphere. Then fine root biomass per individual (\\(g\\,dry\\cdot ind^{-1}\\)) is calculated using: \\[\\begin{equation} B_{fineroot} = \\sum_{s}{B_{fineroot,s}} = \\sum_{s}{\\frac{10000\\cdot FLA_s}{N\\cdot 0.01 \\cdot SRL}} \\end{equation}\\] where \\(N\\) is the density of individuals and \\(SRL\\) (\\(cm \\cdot g\\,dry^{-1}\\)) is the specific root length. One of the model output variables is fine root area in each soil layer (\\(FRA_s\\)), which is calculated from \\(B_{fineroot}\\) using: \\[\\begin{equation} FRA_{s} = 10^{-4}\\cdot B_{fineroot,s} \\cdot 2.0 \\cdot \\frac{\\pi \\cdot SRL}{\\rho_{fineroot}} \\end{equation}\\] where \\(\\rho_{fineroot}\\) is fine root tissue density (\\(g\\,dry \\cdot cm^{-3}\\)). 16.1.4 Total living biomass Total living biomass per individual (i.e. not accounting for heartwood or xylem conduits) is: \\[\\begin{equation} B_{total} = B_{leaf} + B_{living, sapwood} + B_{fineroot} + \\\\ B_{sugar,leaf} + B_{starch,leaf}+ B_{sugar,sapwood} + B_{starch,sapwood} \\end{equation}\\] \\(B_{total}\\) is used to express carbon balance components per dry weight of living biomass in the model output, which allows a better comparison across plant cohorts of different size and species. 16.2 Components of carbon balance Here we provide the details of carbon balance calculations, i.e. how the components of eqs. (15.1) and (15.2) are determined. 16.2.1 Gross photosynthesis The soil water balance submodel provides values of photosynthesis calculated at the plant cohort level, but note that the user output of function spwb and pwb refers to net photosynthesis (\\(A_n\\)) after accounting for an estimate of leaf respiration. In the basic water balance model there is no way to make the distinction between gross and net photosynthesis, so we will assume here that \\(A_g = A_n\\) (in \\(g\\,C \\cdot m^{-2}\\)) as calculated in section 6.1.4. In the advance water balance model the output is also net photosynthesis, but the distinction is possible (see section 11.1). In any case, here we start with a \\(A_g\\) value in units of carbon per ground area unit, i.e. \\(g\\,C \\cdot m^{-2}\\), and to enter the carbon balance we need scale photosynthesis to units of glucose per individual (\\(A\\); in \\(g\\,gluc \\cdot ind^{-1}\\)). This is done using: \\[\\begin{equation} A = \\frac{10000 \\cdot A_g}{N} \\cdot \\frac{m_{gluc}}{m_{carbon} \\cdot 6} \\end{equation}\\] where \\(N\\) is the density of individuals per hectare, \\(m_{gluc}\\) is the glucose molar mass and \\(m_{carbon}\\) is the carbon molar mass. 16.2.2 Maintenance respiration Maintenance respiration (in \\(g\\,gluc·ind^{-1}\\)) is calculated for each of the three compartments (leaves, sapwood, and fine roots) individually (Mouillot, Rambal, and Lavorel 2001). The model uses a \\(Q_{10}\\) relationship with temperature, which means that for every 10 ºC change in temperature there is a \\(Q_{10}\\) factor change in respiration. Baseline maintenance respiration rates per dry biomass (\\(MR_{leaf}\\), \\(MR_{sapwood}\\) and \\(MR_{fineroot}\\) for leaves, parenchymatic sapwood and fine roots, respectively; in \\(g\\,gluc \\cdot g\\,dry^{-1} \\cdot day^{-1}\\)) are can be specified via control parameters (defaults for all species) or via species-specific parameters and should refer to 20 ºC: \\[\\begin{eqnarray} M_{leaf} &amp;=&amp; (B_{leaf} + B_{sugar,leaf}) \\cdot MR_{leaf} \\cdot Q_{10}^{(T_{mean}-20)/10} \\\\ M_{sapwood} &amp;=&amp; (B_{living,sapwood} + B_{sugar,sapwood}) \\cdot MR_{sapwood} \\cdot Q_{10}^{(T_{mean}-20)/10} \\\\ M_{fineroot} &amp;=&amp; B_{fineroot} \\cdot MR_{fineroot} \\cdot Q_{10}^{(T_{mean}-20)/10} \\end{eqnarray}\\] where \\(T_{mean}\\) is the average daily temperature (in ºC). The same equations are used for growth simulations with the basic or advanced water model, the only differences being that in the latter the daily rates are divided by the number of subdaily steps and, hence, subdaily temperature variation is taken into account. 16.2.3 Growth respiration Construction costs per unit dry weight of new tissue (\\(CC_{leaf}\\), \\(CC_{sapwood}\\) and \\(CC_{fineroot}\\) for leaves, sapwood and fine roots; in \\(g\\,gluc \\cdot g\\,dry^{-1}\\)) are specified as control parameters (i.e. they are not species-specific). These unitary costs include both the carbon used in respiration during growth and structural carbon. Given an increase in leaf area \\(\\Delta LA\\), leaf growth respiration is: \\[\\begin{equation} G_{leaf} = \\Delta LA \\cdot CC_{leaf} \\cdot 1000 / SLA \\tag{16.2} \\end{equation}\\] Analogously, given an increase in sapwood area \\(\\Delta LA\\), sapwood growth respiration is: \\[\\begin{equation} G_{sapwood} = \\Delta SA \\cdot CC_{sapwood} \\cdot (H + \\sum_{s}{FRP_s \\cdot L_s}) \\cdot \\rho_{wood} \\tag{16.3} \\end{equation}\\] Finally, and given an increase in fine root biomass \\(\\Delta B_{fineroot}\\): \\[\\begin{equation} G_{fineroot} = \\Delta B_{fineroot} \\cdot CC_{fineroot} \\end{equation}\\] 16.2.4 Phloem transport When growth is simulated using the basic water balance model, phloem transport between leaf and sapwood (\\(F_{phloem}\\)) is simply modelled as the flow needed to make the concentration of metabolic carbon equal in both compartments. When the advanced water balance submodel is used, \\(F_{phloem}\\) is modelled following Hölttä et al. (2017). Specifically, the instantaneous phloem flow per leaf area basis (\\(mol\\,gluc\\cdot m^{-2} \\cdot s^{-1}\\)) depends on \\(k_{phloem}\\), i.e. the phloem conductance per leaf area basis (\\(L\\cdot m^{-2} \\cdot MPa^{-1} \\cdot s^{-1}\\)), sap viscosity relative to water and the difference in turgor between the sieve cells of leaf and sapwood compartments. \\(k_{phloem}\\) is estimated as linear function of stem maximum conductance, \\(k_{stem,max}\\): \\[\\begin{equation} k_{phloem} = f_{phloem} \\cdot k_{stem,\\max} \\end{equation}\\] where factor \\(f_{phloem}\\) is specified by the control parameter phloemConductanceFactor. Sap viscosity is calculated following Först, Werner, and Delgado (2002), which takes into account temperature and the average sugar concentration between the two compartments (no phloem flow can occur if temperature is below zero). Turgor in sieve cells of each compartment depends on symplastic water potential and osmotic water potential, with Van’t Hoff’s equation being used to calculate the osmotic water potential, based on temperature, sugar concentration and the concentration of other solutes (control parameter nonSugarConcentration). Note that here leaf or sapwood sugar concentration is modulated to account for the effect of the relative water content of the compartment on osmotic water potential. 16.2.5 Sugar-starch dynamics When growth is simulated using the basic water balance submodel, sugar-starch dynamics (\\(SC_{leaf}\\) and \\(SC_{sapwood}\\)) are simply defined as the conversion between metabolic and storage carbon needed to keep the sugar concentration equal to an equilibrium required for metabolic functioning, which is specified by control parameters equilibriumOsmoticConcentration (including two values, for leaves and sapwood respectively) and nonSugarConcentration. For example, if leaf osmotic equilibrium concentration is 0.8 \\(mol\\,gluc \\cdot L^{-1}\\) and non-sugar concentration is 0.3 \\(mol\\,gluc \\cdot L^{-1}\\), the model will simulate sugar-starch dynamics to stabilize sugar concentration in leaves to 0.5 \\(mol\\,gluc \\cdot L^{-1}\\). A lower equilibrium osmotic concentration is required for sapwood, by default 0.6 \\(mol\\,gluc \\cdot L^{-1}\\), so that sugar equilibrium concentration is 0.1 \\(mol\\,gluc \\cdot L^{-1}\\). That lower equilibrium concentrations are required for sapwood than for leaves is necessary to sustain the phloem transport of sugars from leaves towards sapwood. When growth is simulated using the basic water balance submodel, sugar-starch dynamics are similar to the previous case, in the sense that equilibrium sugar concentrations are sought for leaves and sapwood. However, instantaneous conversion rates are calculated depending on equations regulating starch synthesis (occurring when sugar concentration is higher than the equilibrium concentration) and starch hydrolysis (occurring when sugar concentration is lower than the equilibrium concentration). Synthesis is modelled as a Michaelis-Menten function, whereas hydrolysis rate is simply a linear function of starch concentration. Maximum synthesis rates and hydrolysis linear factors are larger (i.e. faster sugar-starch dynamics) in leaves than sapwood. 16.2.6 Root exudation Surplus in leaf or sapwood storage carbon is diverted towards root exudation (\\(RE_{leaf}\\) or \\(RE_{sapwood}\\)). Hence, root exudation is not a process competing for metabolic carbon, but only a consequence of plant C storage capacity being surpassed (Prescott et al. 2020). Root exudation may happen in the model when growth is restricted due to sink limitations but photosynthesis continues and storage carbon levels have attained the storage capacity in the leaf compartment (\\(ST_{leaf} &gt; ST^{max}_{leaf}\\)) or the sapwood compartment (\\(ST_{sapwood} &gt; ST^{max}_{sapwood}\\)). Bibliography "],["growthsenescencemortality.html", "Chapter 17 Growth, senescence and mortality 17.1 Growth 17.2 Senescence 17.3 Update of plant traits and allocation targets 17.4 Plant mortality thresholds", " Chapter 17 Growth, senescence and mortality 17.1 Growth 17.1.1 Temperature and turgor sink limitations Sink limitations due to temperature and turgor effects on growth are modelled following Cabon, Fernández‐de‐Uña, et al. (2020) and Cabon, Peters, et al. (2020). These authors suggested equations to model sink limitations on cambium cell division and tracheid expansion, but we apply the same approach for simulating growth of leaves, sapwood and fine roots. Cell relative expansion rate (\\(r_{cell}\\)) is central to the approach by Cabon et al. and is defined as the relative time derivative of cell volume: \\[\\begin{equation} r_{cell} = \\frac{dV}{Vdt} \\end{equation}\\] Cabon, Fernández‐de‐Uña, et al. (2020) first suggested to model the dependence of \\(r_{cell}\\) on cell turgor using Lockhart’s equation: \\[\\begin{equation} r_{cell}(\\Psi, \\pi_0) = \\phi_{max} \\cdot (\\Psi - \\pi_0 - Y_{P}) \\end{equation}\\] where \\(\\Psi\\) is the water potential, \\(\\pi_0\\) is the osmotic water potential at full turgor, \\(Y_P\\) is the turgor yield threshold and \\(\\phi_{max}\\) is the maximum cell wall extensibility. Later, Cabon, Peters, et al. (2020) suggested to account for both turgor and temperature limitations on \\(r_{cell}\\) using the following expanded equation: \\[\\begin{equation} r_{cell}(T, \\Psi, \\pi_0) = \\phi_{max} \\cdot (\\Psi - \\pi_0 - Y_{P}) \\cdot \\frac{f_{met}(T_K)}{f_{met}(288.15)} \\cdot{f_{micro}(T, T_{thr})} \\tag{17.1} \\end{equation}\\] where \\(T\\) is temperature, \\(f_{met}(T_K)\\) is a function modulating the effect of temperature \\(T_K\\) in Kelvin, on metabolic rate, and \\(f_{micro}(T, T_{thr})\\) is a sigmoidal function modulating the effect of temperature on microtubule stability, depending on a temperature threshold \\(T_{thr}\\). Function \\(f_{met}(T_K)\\) is defined as: \\[\\begin{equation} f_{met}(T_K) = \\frac{T_K \\cdot \\exp \\big\\{ \\frac{\\Delta H_A}{R^n \\cdot T_K}\\big\\}}{1 + \\exp \\big\\{ \\frac{\\Delta S_D}{R^n} \\cdot \\left(1 - \\frac{\\Delta H_D}{\\Delta S_D \\cdot T_K} \\right)\\big\\}} \\end{equation}\\] where \\(R^n\\) is the ideal gas constant, \\(\\Delta H_A = 87500\\) the enthalpy of activation and \\(\\Delta H_D = 333000\\) and \\(\\Delta S_D = 1090\\) the enthalpy and entropy difference (respectively) between the catalytically active and inactive states of the enzymatic system). Scaling from the cell to the tissue level is conducted by assuming that maximum cell-level expansion rates correspond to maximum tissue-level relative growth rates. 17.1.2 Leaf growth Leaf area increment \\(\\Delta LA\\) only occurs when phenological state is unfolding, and is defined as the minimum of three values expressing three corresponding constraints: \\[\\begin{equation} \\Delta LA = \\min( \\Delta LA_{alloc}, \\Delta LA_{source}, \\Delta LA_{sink}) \\end{equation}\\] First, \\(\\Delta LA_{alloc}\\) is the maximum leaf area increment allowed by the leaf area target set by the allocation rule, \\(LA^{target}\\), in comparison with current leaf area \\(LA^{live}\\): \\[\\begin{equation} \\Delta LA_{alloc} = \\max(LA^{target} - LA^{live},0) \\end{equation}\\] Remember that leaf area target is updated during bud formation (see 17.3.2). Second, \\(\\Delta LA_{source}\\) represents the leaf area increment expected given carbon source limitations and is calculated: \\[\\begin{equation} \\Delta LA_{source} = \\frac{\\max(SS_{sapwood}-SS_{leaf,growth},0)\\cdot m_{gluc}\\cdot V_{sapwood,leaf}}{1000 \\cdot CC_{leaf} / SLA} \\end{equation}\\] where \\(SS_{sapwood}\\) is the current concentration of sapwood metabolic sugar, \\(SS_{leaf,growth}\\) is the minimum concentration required for growth (specified in control vector minimumSugarForGrowth), \\(V_{storage,sapwood}\\) is the sapwood storage volume, \\(m_{gluc}\\) is glucose molar mass and the denominator contains the construction costs per leaf area unit, see eq. (16.2). Finally, \\(\\Delta LA_{sink}\\) represents the leaf area increment expected by taking into account the maximum leaf tissue growth rate relative to sapwood area (\\(RGR_{leaf, max}\\); in \\(m^2 \\cdot cm^{-2} \\cdot day^{-1}\\)) and the relative cell expansion rate given \\(T_{day}\\), \\(\\Psi_{symp,leaf}\\) and \\(\\pi_{0,leaf}\\): \\[\\begin{equation} \\Delta LA_{sink} = SA \\cdot RGR_{leaf, max} \\cdot \\frac{r_{cell}(T_{day}, \\Psi_{symp,leaf}, \\pi_{0,leaf})}{r_{cell,max}} \\end{equation}\\] where cell relative expansion rate is divided by the maximum relative cell expansion rate \\(r_{cell,max} = r_{cell}(25, 0, -2)\\) so that \\(RGR_{leaf, max}\\) is attained when sink conditions are optimal. Other parameters for eq. (17.1) are \\(\\phi_{max} = 0.5\\), \\(Y_{P} = 0.05\\,MPa\\) and \\(T_{thr} = 5\\)ºC. 17.1.3 Sapwood growth Sapwood area increment \\(\\Delta SA\\) can only occur if \\(LA^{live}&gt;0\\). Unlike leaf area or fine root biomass, it is not explicitly constrained by any allocation rule. However, newly assimilated carbon is preferentially allocated to leaves and fine roots because sapwood growth depends on storage reserves and not on metabolic carbon. \\(\\Delta SA\\) is defined as the minimum of two values expressing source and sink constraints: \\[\\begin{equation} \\Delta SA = \\min(\\Delta SA_{source}, \\Delta SA_{sink}) \\end{equation}\\] \\(\\Delta SA_{source}\\) represents the sapwood area increment expected given carbon source limitations and is calculated using: \\[\\begin{equation} \\Delta SA_{source} = \\frac{\\max(ST_{sapwood}-SS_{sapwood,growth},0)\\cdot m_{gluc}\\cdot V_{storage,sapwood}}{CC_{sapwood} \\cdot (H + \\sum_{s}{FRP_s \\cdot L_s}) \\cdot \\rho_{wood}} \\end{equation}\\] where \\(ST_{sapwood}\\) is the current starch concentration, \\(SS_{sapwood,growth}\\) is the minimum concentration required for growth (specified in control vector minimumSugarForGrowth), \\(V_{storage,sapwood}\\) is the sapwood storage volume, \\(m_{gluc}\\) is glucose molar mass and the denominator contains the construction costs per sapwood area unit, see eq. (16.3). Sink limitations to sapwood growth are simulated using a set of \\(N_c = 10\\) cambium cells that undergo division and the new cells are added to a ring (i.e. a vector) of vessels that later suffer enlargement and maturation (Andrew D. Friend et al. 2019). Assuming that cambium cell volume must double before division, that cell-doubling time is the variable limiting cell division and that each division instantly results in a cell exiting the cambium and initiating differentiation into a vessel, production rate (\\(PR_{cambium}\\)) of new vessels cells can be related to the cambial cell expansion rate \\(r_{cambium}\\) such that (Cabon, Peters, et al. 2020): \\[\\begin{equation} PR_{cambium} = \\frac{N_c}{ln(2)}\\cdot r_{cambium} \\end{equation}\\] where \\(r_{cambium} = r_{cell}(T_{day},\\Psi_{symp,stem}, -0.8)\\), with other parameters of eq. (17.1) being \\(\\phi_{max}=0.13\\), \\(Y_{P} = 0.05\\,MPa\\) and \\(Y_{thr} = 8\\) ºC. The ring growth model is implemented at daily time steps and daily \\(PR_{cambium}\\) values are accumulated (i.e. \\(P_{cambium, t} = P_{cambium, t-1} + PR_{cambium,t}\\)). A new vessel is formed and added to the ring every time \\(P_{cambium}\\) advances one integer. All vessel cells in the ring undergo daily enlargement following eq. (17.1), again with \\(Y_{P} = 0.05\\,MPa\\) and \\(Y_{thr} = 8\\) ºC. During cell later stages of enlargement, the cell wall becomes thicker and more rigid as a consequence of cell wall deposition. Consequently, \\(\\phi_{max}=0.13\\) for newly formed cells, but then variations in \\(\\phi_{max}\\) are modelled as (Cabon, Fernández‐de‐Uña, et al. 2020): \\[\\begin{equation} \\frac{d\\phi_{max}}{\\phi_{max}\\cdot dt} = s\\cdot r_{cell} - h \\cdot \\frac{f_{met}(T_K)}{f_{met}(288.15)} \\end{equation}\\] where \\(s = 1.8\\) and \\(h = 0.043\\cdot1.8\\) are a softening factor and a constant hardening rate, respectively, and the hardening rate is modulated by temperature effects. Cell radial diameter is initially \\(8.3 \\mu m\\) and tangential diameter is assumed constant and equal to \\(20 \\mu m\\), so that volume increases in ring cells can be translated to daily ring area increases, \\(\\Delta A_{ring}\\) (in \\(\\mu m^{2}\\)). Assuming that the maximum relative sapwood growth rate \\(RGR_{sapwood, max}\\) corresponds to a maximum rate of daily ring area increase, we have that the daily increase in sapwood area according to sink limitations, \\(\\Delta SA_{sink}\\), is: \\[\\begin{equation} \\Delta SA_{sink} = SA \\cdot RGR_{sapwood, max} \\cdot \\frac{\\Delta A_{ring}}{\\Delta A_{ring,max}} \\end{equation}\\] where \\(\\Delta A_{ring,max} = N_c \\cdot 20\\,\\mu m^{2} \\cdot day^{-1}\\), which assumes a maximum daily cell area growth of \\(20\\,\\mu m^{2} \\cdot day^{-1}\\) or, equivalently, a maximum daily cell radial diameter increase of \\(1\\mu m \\cdot day^{-1}\\). 17.1.4 Fine root growth Fine root growth is only modelled when simulating growth with the advanced water balance submodel (when using the basic water balance submodel fine root respiration costs are proportional to leaf respiration costs). Fine root biomass increment is modelled for each soil layer separately, and is defined analogously to leaf area increment: \\[\\begin{equation} \\Delta B_{fineroot} = \\min( \\Delta B_{fineroot,alloc}, \\Delta B_{fineroot,source}, \\Delta B_{fineroot,sink}) \\end{equation}\\] First, \\(\\Delta B_{fineroot,alloc}\\) is the maximum fine root biomass increment allowed by the biomass target set by the allocation rule, \\(B_{fineroot,target}\\) (see 17.3.2), in comparison with current biomass, \\(B_{fineroot}\\): \\[\\begin{equation} \\Delta B_{fineroot,alloc} = \\max(B_{fineroot,target} - B_{fineroot},0) \\end{equation}\\] Second, \\(\\Delta B_{fineroot,source}\\) represents the biomass increment expected given carbon source limitations and is calculated: \\[\\begin{equation} \\Delta B_{fineroot,source} = \\frac{\\max(SS_{sapwood}-SS_{fineroot,growth},0)\\cdot m_{gluc}\\cdot V_{storage,sapwood}}{CC_{fineroot}} \\end{equation}\\] where \\(SS_{sapwood}\\) is the current sapwood concentration of metabolic sugar, \\(SS_{fineroot,growth}\\) is the minimum concentration required for fine root growth (specified in control vector minimumSugarForGrowth), \\(V_{storage,sapwood}\\) is the sapwood storage volume, \\(m_{gluc}\\) is glucose molar mass and \\(CC_{fineroot}\\) is the construction costs per fine root biomass unit. Finally, \\(\\Delta B_{fineroot,sink}\\) represents the biomass increment expected by taking into account maximum tissue growth rate (\\(RGR_{fineroot, max}\\); in \\(g\\,dry \\cdot g\\,dry^{-1} \\cdot day^{-1}\\)) and the relative cell expansion rate given temperature (\\(T_{day}\\)), water potential in the rhizosphere (\\(\\Psi_{rhizo,s}\\)) and the stem osmotic potential at full turgor(\\(\\pi_{0,stem}\\)): \\[\\begin{equation} \\Delta B_{fineroot,sink} = B_{fineroot} \\cdot RGR_{fineroot, max} \\cdot \\frac{r_{cell}(T_{day}, \\Psi_{rhizo,s}, \\pi_{0,stem})}{r_{cell,max}} \\end{equation}\\] cell relative expansion rate is divided by the maximum relative cell expansion rate \\(r_{cell,max} = r_{cell}(25, 0, -2)\\) so that \\(RGR_{fineroot, max}\\) is attained when sink conditions are optimal. Other parameters for eq. (17.1) are like for leaf growth, \\(\\phi_{max} = 0.5\\), \\(Y_{P} = 0.05\\,MPa\\) and \\(T_{thr} = 5\\)ºC. 17.2 Senescence 17.2.1 Leaf senescence Leaf senescence can occur due to three processes: aging, starvation or dessication. Leaf senescence due to carbon starvation occurs whenever the carbon balance for metabolic carbon becomes negative (\\(\\Delta SS_{sugar} &lt; 0\\)). At this point, the model determines \\(p_{starvation,leaf}\\), the proportion of leaf area that caused a respiration excess using: \\[\\begin{equation} p_{starvation,leaf} = \\frac{-\\Delta SS_{sugar} \\cdot (V_{storage, leaf} \\cdot m_{gluc})}{R_{leaf}} \\end{equation}\\] and applies this proportion to \\(LA^{live}\\). Senescence due to advanced leaf age is assumed to be programmed (Ca+ accumulation?). In deciduous species all live leaf area turns to death leaf area when the phenology submodel indicates it (4.1.3). In evergreen species the proportion of leaf area that undergoes senescence each day is determined by the species-specific leaf duration parameter (\\(LD\\)): \\[\\begin{equation} p_{aging,leaf} = \\frac{1}{365.25 \\cdot LD} \\end{equation}\\] Senescence due to drought effects occurs as a consequence of stem cavitation. The model first determines the leaf area corresponding to the current level of cavitation: \\[\\begin{equation} LA^{cavitation} = (1 - PLC_{stem}) \\cdot LA^{target} \\end{equation}\\] if \\(LA^{cavitation} &lt; LA^{live}\\) then the corresponding proportion \\(p_{cavitation, leaf}\\) is estimated. The maximum of \\(p_{aging,leaf}\\) and \\(p_{cavitation, leaf}\\) is applied as a reduction of leaf area. If growth is simulated using the advanced water model, it also checks whether the relative water content in leaves becomes less than 50% (i.e. \\(RWC_{leaf} &lt; 0.5\\)) and, if this happens, the plant cohort is completely defoliated. 17.2.2 Sapwood senescence Prentice, Sykes, and Cramer (1993) assumed a constant annual rate of 4% for the conversion from sapwood to heartwood. Similarly, Sitch et al. (2003) assumed a sapwood annual turnover rate of 5% for all biomes. A reasonable value for maximum daily turnover rate would be (assuming an annual rate 4.5%): \\[\\begin{equation} 1-0.955^{(1/365)} = 0.0001261398 \\end{equation}\\] The actual proportion of sapwood area that is transformed into heartwood daily is: \\[\\begin{equation} p_{aging, sapwood} = \\frac{0.0001261398}{1+15\\cdot e^{-0.01\\cdot H}} \\end{equation}\\] where 0.01 is a constant causing shorter plants to have slower turnover rates. It is important to mention that, while stem cavitation \\(PLC_{stem}\\) reduces the amount of functional sapwood in with respect to hydraulics, it does not increase the rate of sapwood senescence, because xylem vessels are already dead cells. Hence, when xylem embolism occurs air bubbles are formed within vessels but surrounding parenchymatic cells (as well as the storage carbon they contain) are unaffected. 17.2.3 Fine root senescence Fine root senescence only occurs when modelling growth with the advanced water balance. Aging is the only process leading to fine root senescence. Default daily turnover proportion for fine roots, \\(p_{aging,fineroot,25}\\) is specified via the control parameters turnoverRates, which are assumed to correspond to a temperature of 25 ºC. Actual turnover proportion for a given soil layer (\\(p_{aging,fineroot}\\)) decreases linearly with soil temperature down to zero at 5 ºC: \\[\\begin{equation} p_{aging,fineroot} = p_{aging,fineroot,25} \\cdot \\frac{\\max(T_{soil,s}-5,0)}{20} \\end{equation}\\] Default values for \\(p_{aging,fineroot,25}\\) are set to produce an annual 50% turnover of fine roots. 17.3 Update of plant traits and allocation targets 17.3.1 Plant traits Multiple anatomic and physiological parameters are updated every day after applying changes in the size of leaf, sapwood and fine root compartments, which creates a feedback to those hydraulic and physiological processes simulated in the water balance submodel (15.1.4). Hence, the growth model allows emulating plant acclimation to environmental cues, mediated by growth and senescence of plant tissues. First leaf area index (\\(LAI^{live}\\)) is updated from leaf area (\\(LA^{live}\\)) inverting eq. (16.1). The Huber value (\\(H_v\\), the sapwood area to leaf area ratio; in \\(m^{2}\\cdot m^{-2}\\)) is affected by changes in \\(LA^{live}\\) and sapwood area \\(SA\\): \\[\\begin{equation} H_v = \\frac{SA/10000}{LA^{live}} \\end{equation}\\] When simulating growth with the basic water balance model, leaf area index and Huber value are the only plant traits affected by changes in the size of carbon compartments. It is only when we simulate growth with the advanced water balance model that we get a real sense of plant acclimation. By definition, fine root biomass changes in each soil layer (\\(B_{fineroot,s}\\)) lead to updates in the proportion of fine roots in each layer (\\(FRP_s\\)): \\[\\begin{equation} FRP_s = \\frac{B_{fineroot,s}}{\\sum_{l}{B_{fineroot,l}}} \\end{equation}\\] Stem maximum conductance per leaf area unit (\\(k_{stem, max}\\); in \\(mmol \\cdot m^{-2}\\cdot s^{-1} \\cdot MPa^{-1}\\)) is determined as a function of species-specific xylem conductivity (\\(K_{xylem, max}\\); in \\(kg \\cdot m^{-1} \\cdot s^{-1} \\cdot MPa^{-1}\\)), leaf area, sapwood area and tree height (Christoffersen et al. 2016): \\[\\begin{equation} k_{stem, max} = \\frac{1000}{0.018} \\cdot \\frac{K_{xylem, max} \\cdot (SA/10000)}{(H/100) \\cdot LA^{live}} \\cdot \\chi_{taper} \\end{equation}\\] where \\(\\chi_{taper}\\) is a factor to account for taper of xylem conduit with height (Savage et al. 2010; Christoffersen et al. 2016), 0.018 is the molar weight of water (in \\(kg\\cdot mol^{-1}\\)). Both an increase in \\(SA\\) or a decrease in \\(LA^{live}\\) (i.e. an increase in \\(H_v\\)) increase \\(k_{stem, max}\\) and, hence, alleviate drought effects (i.e. a lower decrease in water potential across the stem for the same flow). In contrast, an increase in plant height will decrease stem conductance and increase drought stress. Changes in stem maximum conductance has cascade effects on root maximum conductance. First, coarse root minimum resistance is defined as a fixed proportion of whole-plant minimum resistance, so an increase in stem maximum conductance will increase whole-plant conductance and coarse root conductance, \\(k_{root,max}\\). Rhizosphere maximum conductance per leaf area unit in a given soil layer \\(s\\) (\\(k_{rhizo, max, s}\\); in \\(mmol \\cdot m^{-2}\\cdot s^{-1} \\cdot MPa^{-1}\\)) depends on fine root biomass in this layer (\\(B_{fineroot,s}\\)) and on leaf area (i.e. \\(LA^{live}\\)). The equations regulating these relationships are modulated by several soil and species parameters, such as soil saturated hydraulic conductance, species-specific root length, root length density and density of fine roots. The proportion of conductance loss due to cavitation (\\(PLC_{stem}\\)) is reduced whenever sapwood area growth occurs (provided control parameter cavitationRefill = \"growth\"): \\[\\begin{equation} PLC_{stem, t+1} = \\min(PLC_{stem,t} - \\frac{\\Delta SA}{SA},0) \\end{equation}\\] This allows a progressive increase in functional sapwood area. Update of osmotic water potentials at full turgor in leaf and stem symplastic tissues (\\(\\pi_{0,leaf}\\) and \\(\\pi_{0,stem}\\)) are determined from \\(SS_{leaf}\\) and \\(SS_{sapwood}\\), respectively, following Van’t Hoff’s equation: \\[\\begin{eqnarray} \\pi_{0,leaf} &amp;=&amp; - (SS_{leaf} + SI) \\cdot R^n \\cdot 293.15\\\\ \\pi_{0,stem} &amp;=&amp; - (SS_{sapwood} + SI) \\cdot R^n \\cdot 293.15 \\end{eqnarray}\\] where \\(SI\\) is the concentration of inorganic solutes (a constant), \\(R^n = 0.008314472\\) \\(MPa \\cdot L\\cdot K^{-1}\\cdot mol^{-1}\\) is the perfect gas constant and \\(293.15K\\) is the temperature of reference. If photosynthesis limitations are included, the model starts to limit photosynthesis \\(SS_{sugar,leaf} &gt; 0.5\\,mol\\cdot L^{-1}\\) and decreases linearly to zero \\(SS_{sugar,leaf} &gt; 1.5\\,mol\\cdot L^{-1}\\). 17.3.2 Leaf area and fine root biomass targets Leaf area target (\\(LA_{target}\\)) is updated when phenological phase is bud formation. If the allocation strategy pursues a stable Huber value, the model tries to bring \\(H_{v}\\) close to an initial value \\(H_{v,target}\\), and the leaf area target is defined as: \\[\\begin{equation} LA_{target} = \\frac{SA}{10000 \\cdot H_{v,target}} \\end{equation}\\] Note that the specification of \\(LA_{target}\\) will cause sapwood area increases to be followed by leaf area increases, as long as \\(H_{v} &gt; H_{v,target}\\). On the contrary, if \\(H_{v} &lt; H_{v,target}\\) then leaf area growth is inhibited and sapwood area growth will progressively increase \\(H_{v}\\). If the allocation strategy pursues a stable whole-plant conductance, the model tries to keep \\(k_{plant}\\) close to an initial value \\(k_{plant,target}\\), and here the leaf area target is defined as: \\[\\begin{equation} LA_{target} = LA^{live} \\cdot \\frac{k_{plant,max}}{k_{plant,target}} \\end{equation}\\] In this strategy, increases in leaf area will be scheduled whenever the current whole-plant conductance is above target value (i.e. \\(k_{plant,max} &gt; k_{plant,target}\\)). Analogously to the previous strategy, if \\(k_{plant,max} &lt; k_{plant,target}\\) then leaf area growth is inhibited and sapwood area growth will progressively increase \\(k_{plant,max}\\). While leaf area target depends on the allocation strategy, the target of fine root biomass for any given soil layer \\(s\\) (\\(B_{fineroot,target,s}\\)) directly follows changes in maximum whole-plant conductance. The average resistance in the rhizosphere is assumed to correspond to a fixed percentage of total soil-plant resistance. Hence, changes in the conductance of leaves, stem or coarse roots will entail a variation in the absolute rhizosphere maximum conductance to be targeted (\\(k_{rhizo,max, target,s}\\)), which in turn will determine \\(B_{fineroot,target,s}\\). For example \\(k_{rhizo,max, target,s}\\) will increase as a consequence of sapwood area growth. The model thus first estimate \\(k_{rhizo, max, target,s}\\) for each layer \\(s\\) and then translates \\(k_{rhizo,max, target,s}\\) values to \\(B_{fineroot,target,s}\\) using the relationships based on soil saturated hydraulic conductance, species-specific root length, root length density and density of fine roots mentioned above. 17.4 Plant mortality thresholds Plant cohorts can die from either starvation (if metabolic carbon is exhausted) or dessication (tissue dehydration). When simulating growth with the basic water balance submodel, starvation occurs if \\(SS_{sapwood} \\leq 0\\) and, since plant water balance is not explicitly modelled, dessication is determined if \\(PLC_{stem} \\geq 0.5\\). When simulating growth with the advanced water balance submodel, starvation occurs also if \\(SS_{sapwood} \\leq 0\\), but in this case a better indicator of dehydration can be used, the stem symplastic relative water content \\(RWC_{stem, symp}\\). Dessication is determined in this case if \\(RWC_{stem, symp} \\leq 0.5\\). Bibliography "],["structuralupdate.html", "Chapter 18 Update of structural variables 18.1 Tree diameter, height and crown ratio 18.2 Shrub height and cover", " Chapter 18 Update of structural variables Unlike functional variables, structural variables are updated for simplicity once a year only (or before the end of the simulated period). 18.1 Tree diameter, height and crown ratio In the case of tree cohorts, the cumulated new sapwood area (\\(\\sum{SA_{growth}}\\)) is translated to an increment in DBH (\\(\\Delta DBH\\), in cm) following: \\[\\begin{equation} \\Delta DBH = 2 \\cdot \\sqrt{(DBH/2)^2+(\\sum{SA_{growth}}/\\pi)} - DBH \\end{equation}\\] Furthermore, the model assumes that increments in height are linearly related to increments in diameter through a function \\(f_{HD}\\) (Lindner et al. 1997): \\[\\begin{equation} \\Delta H = f_{HD} \\cdot \\Delta DBH \\end{equation}\\] Hence, \\(f_{HD}\\) represents the height increment (in cm) per each cm of diameter increment. It was customary in forest gap models to prevent height from being larger than a species-specific value \\(H_{\\max}\\), so that beyond some point trees only grew in size by increasing their diameter. Moreover, light conditions influence growth in height with trees living under the shade of others generally showing larger increases in height than trees living in open conditions. Hence, our formulation for \\(f_{HD}\\) is (Lindner, Sievänen, and Pretzsch 1997; Rasche et al. 2012): \\[\\begin{equation} f_{HD} = \\left[f_{HD,\\min} \\cdot L + f_{HD,\\max} \\cdot (1-L) \\right] \\cdot \\left( 1 - \\frac{H-137}{H_{\\max} - 137} \\right) \\end{equation}\\] where \\(f_{HD,\\min}\\) would be the height-diameter ratio for a tree of 137 cm height growing in full light and \\(f_{HD,\\max}\\) would be the same ratio for a tree of the same height growing in the shadow. This formulation seems slightly easier to calibrate than that presented in Rasche et al. (2012). \\(H_{\\max}\\) could be dependent on environmental conditions, but we skip this here, because environmental conditions already affect growth rate and carbon balance. After updating tree diameter (\\(DBH\\)) and tree height (\\(H\\)), the model updates tree crown ratio (\\(CR\\)) by applying allometric relationships that take into account tree size and competition (see details in vignette XX). 18.2 Shrub height and cover Since shrub structural variables are height and cover, shrub growth is done in a way somewhat different from trees. Shrubs are often multi-stemmed (some trees also are), so that increases in sapwood area are not easily related to diameter growth. Since leaf biomass is related to sapwood area, one may model shrub growth assuming an allometric relationship between phytovolume of individual shrub crowns and photosynthetic biomass. This strategy entails that shrubs may grow or shrink in size depending on their C balance, in the same way that tree crowns would become denser or sparser depending on their C balance. Hence, shrubs can be understood as crowns in the floor. Starting from live leaf area (\\(m^2·m^{-2}\\)) we can calculate the foliar weight per shrub individual (in \\(kg · ind^{-1}\\)): \\[\\begin{equation} W_{leaves} = \\frac{LAI^{live}} {(N/10000) \\cdot SLA} \\end{equation}\\] An allometric relationship relating the biomass of leaves plus small branches and crown phytovolume (\\(PV\\); in \\(m^3·ind^{-1}\\)) can be drawn from fuel calculations: \\[\\begin{equation} W_{leaves+branches} = W_{leaves} \\cdot r_{6.35} = a_{bsh} \\cdot PV^{b_{bsh}} \\end{equation}\\] where \\(a_{bsh}\\) and \\(b_{bsh}\\) are allometric relationships and \\(r_{6.35}\\) is a species-specific ratio relating the dry weight of leaves plus small branches to the dry weight of leaves. Inverting this relationship we obtain an expression of shrub crown phytovolume: \\[\\begin{equation} PV = \\left[\\frac{W_{leaves} \\cdot r_{6.35}}{a_{bsh}}\\right]^{1/b_{bsh}} \\end{equation}\\] Phytovolume is defined as the volume occupied by the shrub crown, i.e.: \\[\\begin{equation} PV = (A_{sh}/10000) \\cdot (H/100) \\cdot CR \\end{equation}\\] where \\(A_{sh}\\) is the area of a single shrub individual (in \\(cm^2\\)). If we use the following quadratic relationship between \\(A_{sh}\\) and \\(H\\): \\[\\begin{equation} A_{sh} = a_{ash} \\cdot H^2 \\end{equation}\\] we can calculate shrub height from phytovolume using: \\[\\begin{equation} H = \\left[\\frac{10^6 \\cdot PV}{a_{ash} \\cdot CR}\\right]^{1/3} \\end{equation}\\] Finally, the new value for shrub cover (in percent) can be obtained from \\(H\\) and \\(N\\) (in ind·ha\\(^{-1}\\)): \\[\\begin{equation} Cover = 100 \\cdot (N/10000) \\cdot (A_{sh}/10000) = \\frac{N \\cdot a_{ash} \\cdot H^2}{10^6} \\end{equation}\\] Note that crown ratio for shrubs is assumed constant in the model. Like for trees, shrub height is limited to a maximum height \\(H_{\\max}\\). However, unlike trees, shrubs are not allowed to continue growing once this maximum size is attained. When the estimated height is over the maximum value, the exceeding amount of live leaf area is allocated to dead live area. Bibliography "],["dynamicsmodelling.html", "Chapter 19 Forest dynamics model 19.1 Design principles 19.2 State variables 19.3 Process scheduling 19.4 Inputs and outputs 19.5 Process details", " Chapter 19 Forest dynamics model This chapter provides an overview of a forest dynamics model, which builds on the previous models and allows simulating the recruitment, growth and mortality of woody plant cohorts in a forest stand. The model is run using function fordyn() for a set of years. 19.1 Design principles The design of the forest dynamics model is to a large degree inherited from the water balance and growth models it builds on. Readers should refer to former sections to learn the design of the basic water balance (see 3.1), advanced water/energy balance (see 7.1) or growth/mortality processes (see 15.1). Recruitment is explicitly simulated at the level of fordyn() and hence will be the focus of this section. Recruitment of saplings involves a number of processes (flowering and polinisation, fruit/seed production, dispersal, storage, seed predation, germination, seedling establishment and survival until the sapling stage). All these processes have their own biotic and abiotic drivers (Price, Zimmermann, and Meer 2001), so that modelling becomes a challenging task. Processes leading to recruiment are frequently extremely simplified or their mechanisms ignored in many forest models (Price, Zimmermann, and Meer 2001). The design of the forest dynamics model with respect to recruitment follows that of many gap models. Local seed production is considered in a binary way, where plants are considered fertile and able to produce viable seeds if they reach a given height (different for shrubs and trees). Alternatively, the user can specify a set of species whose seeds arrive to the target stand via dispersal processes. Actual recruitment depends on a set of regeneration thresholds are used to determine whether recruitment of new saplings occurs. Typically, regeneration thresholds concern environmental conditions, although some models also consider ungulate browsing (Wehrli et al. 2007). In our case we focus on three environmental drivers limiting the transition from seedlings to saplings: Tolerance to low temperatures, indicated by the mean temperature of the coldest month. Drought tolerance, indicated by the annual moisture index (annual precipitation divided by annual evapotranspiration). Shade tolerance, indicated by the percentage of photosynthetic active radiation reaching the ground. A target species will recruit on a given year if current conditions for all three environmental indicators are above the species tolerance thresholds. Recruitment densities and plant size of recruited individuals are specified via species parameters. 19.2 State variables The main state variables of the forest dynamic model are those conforming the structure and composition of the forest stand, i.e. the set of woody cohorts (either trees or shrubs) and their attributes (height, density, DBH, cover, etc.). Since the model performs calls to the growth() model, many other state variables are defined for intra-annual simulations (see 15.4). 19.3 Process scheduling The fordyn() model divides the period to be simulated in years, which is the top-level time step of simulations. Given an input forest object, the function first initializes the input for function growth(). For each year to be simulated the model the performs the following steps: Calls function growth() to simulate daily water/carbon balance, growth and mortality processes (subdaily processes may also be involved in transpirationMode = \"Sperry\"). See section 15.4 for details of growth scheduling. Removes plant cohorts whose density (ind. per hectare) is lower than a specified threshold (see control parameter minimumCohortDensity). Simulates recruitment (for species present in the stand or specified via control parameter seedRain). Merges surviving cohorts with recruitment in the forest object and prepares the input of function growth() for the next annual time step. Store current status of the forest object and update output tables/summaries. 19.4 Inputs and outputs An important difference between fordyn() and the previous simulation functions is that it does not require a specific input object, as in spwb()or growth() functions. In other words, soil, vegetation, meteorology and control inputs are directly introduced as parameters to the function call to fordyn(). 19.4.1 Soil, vegetation and meteorology Soil Soil input requirements are the same as for the former models and were fully described in section 2.2. Vegetation Unlike the former models, vegetation input for fordyn are objects of the class forest, which were described in section 2.3.2. Metereological input Weather input data must include variables calculated at the daily scale. The variables required by function fordyn() depend on the transpiration mode, similarly to the previous simulation model functions. We recommend meteorological input to be generated using package meteoland (De Cáceres et al. 2018). 19.4.2 Vegetation functional parameters The forest dynamics model requires many functional parameters to be specified for plant cohorts. Some of them depend on whether the basic or advanced water balance is adopted, whereas others are inherited from the growth model. Here we report functional parameters needed in addition to those necessary for the growth model (see 15.5.2). All of them concern the simulation of recruitment and are specified in the species parameter table (i.e. SpParams). Symbol Units R Description \\(H_{seed,i}\\) \\(cm\\) SeedProductionHeight Minimum height for seed production \\(TCM_{recr,i}\\) \\(^{\\circ} \\mathrm{C}\\) MinTempRecr Minimum average temperature (Celsius) of the coldest month for successful recruitment \\(MI_{recr,i}\\) MinMoistureRecr Minimum value of the moisture index (annual precipitation over annual PET) for successful recruitment \\(FPAR_{recr,i}\\) % MinFPARRecr Minimum percentage of PAR at the ground level for successful recruitment \\(DBH_{recr,i}\\) \\(cm\\) RecrTreeDBH Recruitment DBH for trees \\(H_{tree, recr,i}\\) \\(cm\\) RecrTreeHeight Recruitment height for trees \\(N_{tree, recr,i}\\) \\(ind \\cdot ha^{-1}\\) RecrTreeDensity Recruitment density for trees \\(Cover_{shrub, recr,i}\\) % RecrShrubCover Recruitment cover for shrubs \\(H_{shrub, recr,i}\\) \\(cm\\) RecrShrubHeight Recruitment height for shrubs \\(Z50_{recr,i}\\) \\(mm\\) RecrZ50 Soil depth corresponding to 50% of fine roots for recruitment \\(Z95_{recr,i}\\) \\(mm\\) RecrZ95 Soil depth corresponding to 95% of fine roots for recruitment 19.4.3 Control parameters Control parameters modulate the overall behavior of fordyn simulations, which extend the parameters used for growth simulations (see section 15.5.3). First, there are parameters that regulate the application of recruiment and the removal of cohorts with few individuals: recruitmentMode [= \"deterministic\"]: String describing how recruitment is applied. Current accepted values are “deterministic” or “stochastic.” removeDeadCohorts [= TRUE]: Boolean flag to indicate the removal of cohorts whose density is too low. minimumCohortDensity [= 1]: Threshold of density resulting in cohort removal. Next, a few parameters control the production of seeds in a qualitative way: seedRain [= NULL]: Vector of species codes whose seed rain is to be simulated. If NULL the species identity of seed rain is taken from species currently present in the forest stand and with minimum size (see below). seedProductionTreeHeight [= 300]: Default minimum tree height for producing seeds (when species parameter SeedProductionHeight is missing). seedProductionShrubHeight [= 30]: Default minimum shrub height for producing seeds (when species parameter SeedProductionHeight is missing). Then we have default parameters determining whether recruitment occurs: minTempRecr [= 0]: Default threshold of minimum average temperature of the coldest month necessary for recruiting (when species parameter MinTempRecr is missing). minMoistureRecr [= 0.3]: Default threshold of minimum moisture index (annual precipitation over annual ETP) necessary for recruiting (when species parameter MinMoistureRecr is missing). minFPARRecr [= 10]: Default threshold of minimum fraction of PAR (in %) reaching the ground necessary for recruiting (when species parameter MinFPARRecr is missing). Finally, there are a set of parameters specifying default values for recruited cohort attributes: recrTreeDBH [= 1]: Default DBH (cm) for recruited trees (when species parameter RecrTreeDBH is missing). recrTreeDensity [= 100]: Default density (ind·ha-1) for recruited trees (when species parameter RecrTreeDensity is missing). recrTreeHeight [= 100]: Default height (cm) for recruited trees (when species parameter RecrTreeHeight is missing). recrShrubCover [= 1]: Default cover (%) for recruited shrubs (when species parameter RecrShrubCover is missing). recrShrubHeight [= 100]: Default height (cm) for recruited shrubs (when species parameter RecrShrubHeight is missing). recrTreeZ50 [= 100]: Default value for Z50 (mm) in recruited trees (when species parameter RecrZ50 is missing). recrShrubZ50 [= 50]: Default value for Z50 (mm) in recruited shrubs (when species parameter RecrZ50 is missing). recrTreeZ95 [= 1000]: Default value for Z95 (mm) in recruited trees (when species parameter RecrZ50 is missing). recrShrubZ50 [= 500]: Default value for Z95 (mm) in recruited shrubs (when species parameter RecrZ50 is missing). 19.4.4 Model output Element Description StandSummary A data frame with stand-level summaries (leaf area index, tree basal area, tree density, shrub cover, etc.) at the beginning of the simulation and after each simulated year. SpeciesSummary A data frame with species-level summaries (leaf area index, tree basal area, tree density, shrub cover, etc.) at the beginning of the simulation and after each simulated year. CohortSummary A data frame with cohort-level summaries (leaf area index, tree basal area, tree density, shrub cover, etc.) at the beginning of the simulation and after each simulated year. TreeTable A data frame with tree-cohort data (species, density, diameter, height, etc.) at the beginning of the simulation (if any) and after each simulated year. DeadTreeTable A data frame with dead tree-cohort data (species, density, diameter, height, etc.) at the beginning of the simulation and after each simulated year. ShrubTable A data frame with shrub-cohort data (species, density, cover, height, etc.) at the beginning of the simulation and after each simulated year. DeadShrubTable A data frame with dead shrub-cohort data (species, density, cover, height, etc.) at the beginning of the simulation (if any) and after each simulated year. ForestStructures A list with the forest object of the stand at the beginning of the simulation and after each simulated year. GrowthResults A list with the results of calling function growth (i.e., see 15.5.4) for each simulated year. 19.5 Process details At the end of a given year, the model first determines the seed rain in the stand by determining which cohorts have heights above maturity thresholds for trees (control parameter seedProductionTreeHeight) and shrubs (control parameter seedProductionShrubHeight). Additionally, the user can impose a seed rain arriving to the stand via dispersal processes, which are not explicitly modelled. Actual sapling recruitment depends on environmental conditions in the stand. Specifically, the model calculates, for the year that ended, the mean temperature of the coldest month (\\(TCM\\)), the moisture index (\\(MI\\)) and the fraction of photosynthetic active radiation reaching the ground, given the current structure (\\(FPAR\\)). These values are compared to species specific parameter thresholds \\(TCM_{recr}\\), \\(MI_{recr}\\) and \\(FPAR_{recr}\\). More specifically, a given species \\(i\\) will recruit if and only if \\(TCM &gt; TCM_{recr, i}\\), \\(MI &gt; MI_{recr, i}\\) and \\(FPAR &gt; FPAR_{recr, i}\\). Tree recruitment density, diameter and height are determined by control parameters recrTreeDensity, recrTreeDBH and recrTreeHeight, respectively; whereas cover and height of shrub recruiment is determined by control parameters recrShrubCover and recrShrubHeight. If stochastic simulation of recruitment is requested, then density values are considered mean values of a Poisson distribution. Bibliography "],["watershedhydrology.html", "Chapter 20 Watershed hydrology 20.1 Design principles 20.2 State variables 20.3 Water balance 20.4 Process scheduling 20.5 Inputs and outputs 20.6 Process details", " Chapter 20 Watershed hydrology This chapter describes the distributed watershed water balance model implemented in function wswb of package medfateland. 20.1 Design principles Watersheds are described in raster (i.e. gridded) mode, each cell representing a patch of vegetation (or another land cover) in a catchment. Watershed water balance simulations extend the simulation of soil water balance to the landscape scale. Hence, the design of most vertical hydrological processes is the same as those of forest water balance. However, additional water compartments and processes are represented in watershed water balance simulations. Each cell in the watershed may include the following: a snowpack comparment, one or several soil layers (including a rocky layer down to several meters depth), and a groundwater compartment assumed to be beyond the reach of plant roots. Similar to other models such as TETIS (Francés, Vélez, and Vélez 2007), three lateral flows are considered between adjacent cells: Overland surface flows from upper elevation cells. Lateral saturated soil flows (i.e. interflow) between adjacent cells. Lateral groundwater flow (i.e. baseflow) between adjacent cells. Overland surface flows are modeled following T-HYDRO Ostendorf and Reynolds (1993). Subsurface flows, including both soil saturated flow and groundwater flow, are modeled following the kinematic wave approach of DSHVM M. Wigmosta, Vail, and Lettenmaier (1994). Split-parameter parametrization following Francés, Vélez, and Vélez (2007). 20.2 State variables Distributed simulation of rainfall-runoff processes implies that state variables are defined for each cell of the watershed. For this kind of simulations, state variables describing the water content of different compartments are the most important. In the case of wildland and agricultural cells these are: \\(W_s\\), the proportion of soil moisture in relation to field capacity for each soil layer \\(s\\) in the cell. \\(S_{snow}\\) the snow water equivalent (mm) of the snow pack storage over the cell surface. \\(S_{aquifer}\\) the water content (mm) in the cell’s aquifer beyond the reach of plant roots. Additional cell state variables in wildland cells concern the water status (or other state variables) of plant cohorts in the cell, and they were described in chapters 3 and 7. In the case of cells of other land cover types (i.e. rock, artificial or water) soils are not defined, and so are soil state variables. 20.3 Water balance In distributed watershed simulations water balance can be defined both at the cell level and at the watershed level. 20.3.1 Cell level water balance At the cell level, daily variations in water content can occur in the snowpack, soil or groundwater compartments: Variations in snowpack water equivalent content follows eq. (3.2). Variations in soil water content (\\(\\Delta{V_{soil}}\\)) need to account for additional flows and are summarized as (compare to (3.1)): \\[\\begin{equation} \\Delta{V_{soil}} = Pr + Sm + Ro + Ad - In - Ru - Dd - Es - Tr + \\Delta{S_{sat}} \\tag{20.1} \\end{equation}\\] where \\(Pr\\) is precipitation as rainfall, \\(Sm\\) is snowmelt, \\(Ro\\) is surface runon water entering the cell from neighboring cells at higher elevation, \\(Ad\\) is aquifer discharge, \\(In\\) is rainfall interception loss, \\(Ru\\) is cell surface runoff, \\(Dd\\) is deep drainage towards the aquifer, \\(Es\\) is soil evaporation, \\(Tr\\) is plant transpiration and \\(\\Delta{S_{sat}}\\) is the variation in soil water content derived from the balance between saturated soil lateral inputs and outputs. Variations in the aquifer water content of a cell are summarized by: \\[\\begin{equation} \\Delta{S_{aquifer}} = Dd - Ad - \\Delta{S_{base}} \\tag{20.2} \\end{equation}\\] where \\(\\Delta{S_{base}}\\) is the variation in water content of the aquifer derived from the balance between groundwater lateral inputs and outputs. 20.3.2 Watershed water balance At the watershed level, separate water balances can again be defined for the average water content of snow pack, soil or groundwater compartments. These result from averaging water balances across cells. Additionally, a water balance is defined regarding the overall water content in the watershed. Changes in the average snow pack water equivalent over cells is the result of balancing precipitation as snow (\\(Ps\\)) and snow melt (\\(Sm\\)), both flows averaged over cells: \\[\\begin{equation} \\Delta{\\hat{S}_{snow}} = \\hat{Ps} - \\hat{Sm} \\end{equation}\\] where \\(\\hat{Ps}\\) and \\(\\hat{Sm}\\) are the average snow fall and snow melt over cells. Changes in the average soil moisture (\\(\\Delta{\\hat{V}_{soil}}\\)) are the result of pooling soil inputs and outputs over cells, which yields: \\[\\begin{equation} \\Delta{\\hat{V}_{soil}} = \\hat{Pr} + \\hat{Sm} + \\hat{Ad} + \\hat{Ro} - \\hat{Ru} - \\hat{In} - \\hat{Dd} - \\hat{Es} - \\hat{Tr} \\end{equation}\\] where \\(\\hat{Pr}\\), \\(\\hat{Ad}\\), \\(\\hat{Ro}\\), \\(\\hat{Ru}\\), \\(\\hat{In}\\), \\(\\hat{Dd}\\), \\(\\hat{Es}\\) and \\(\\hat{Tr}\\) are the average (over cells) of precipitation (including rain and snow), aquifer discharge, lateral surface water input (runon), runoff, rainfall interception loss, deep drainage, soil evaporation and plant transpiration, respectively. Lateral saturated soil flows are not included as they cancel out at the watershed level. Changes in the average of cell aquifer water content (\\(\\Delta{\\hat{S}_{aquifer}}\\)) are the result of balancing deep drainage (\\(Dd\\)) from soils and aquifer discharge (\\(Ad\\)): \\[\\begin{equation} \\Delta{\\hat{S}_{aquifer}} = \\hat{Dd} - \\hat{Ad} \\end{equation}\\] If we integrate the three water compartments, water balance at the watershed level is given by: \\[\\begin{equation} \\Delta{S_{watershed}} = \\hat{Pr} - \\hat{In} - \\hat{Es} - \\hat{Tr} - \\hat{Ex} \\end{equation}\\] where \\(\\Delta{S_{watershed}} = \\Delta{\\hat{S}_{snow}}+\\Delta{\\hat{V}_{soil}}+\\Delta{\\hat{S}_{aquifer}}\\) is the change in water content in the watershed and \\(\\hat{Ex}\\) is the water exported as runoff from cells without neighbors (i.e. catchment outlet cells). 20.4 Process scheduling For every day to be simulated, the model performs the following steps: Calculation of soil and groundwater hydraulic heads for each cell (see 20.6.1). Calculation of soil and groundwater lateral flows between adjacent cells, according to hydraulic gradients (see 20.6.1). Apply changes in cell soil moisture content due to soil lateral flows (i.e. determine \\(\\Delta{S_{sub}}\\) for each cell), including the possibility of a return flow to the surface if the soil becomes saturated (i.e. saturation excess flow). Apply changes in cell aquifer water content, including the possibility of discharge from the aquifer to the soil and a saturation excess flow (eq. (20.2)). Determine remaining cell flows by processing watershed cells in order of decreasing elevation (i.e. cells at higher elevation are processed before cells at lower elevation). For each cell to be processed: Determine snowpack dynamics, rainfall interception loss, infiltration and runoff, transpiration, soil evaporation processes as described in 3.4, while including saturation excess flow as well as potential runon (\\(Ro\\)) from upslope cells as additional water inputs. Distribute surface runoff among cells downhill (20.6.2). If a cell does not have downhill neighbors (i.e outlet cell) its runoff becomes water exported from the watershed. The steps listed in the previous steps refer to cells whose land cover is either wildland or agricultural. In contrast, rock and artificial cells lack a soil object defined, so that snow pack dynamics is still processed in these cells, but all runon or rainfall input becomes runoff to be passed downhill, and when the level of the aquifer reaches the surface any discharge also becomes runoff. In the case of water cells, which also lack a soil, snow pack dynamics is also processed, but all liquid water inputs are poured onto the aquifer water content, and runoff can still occur when the aquifer reaches the surface. 20.5 Inputs and outputs 20.5.1 Gridded inputs Hydrological distributed models demand large amounts of data, information and parameters in order to accurately represent the spatial variability of the main hydrological processes and weather inputs. As mentioned in design principles, watersheds are described in raster (i.e. gridded) mode, each cell representing a patch of vegetation (or another land cover) in a catchment. Rasters do not need to be (should not be) complete, since the model is intended to be used on individual catchments with defined boundaries. Given a set of grid cells representing the watershed at a given spatial resolution, the following information needs to be specified: Land cover type for all cells, with pixels classified into wildland (forests, shrublands or grasslands), agriculture, rock (for rock outcrops), artificial (for urban areas) or water (for water bodies). Topography, i.e. elevation, slope and aspect for each cell. For each wildland cell, a description of plant cohorts in terms of a forest object (see 2.3.2). For each wildland and agriculture cell, a data frame of soil physical properties or an initialized soil object (see 2.2.3). Bedrock hydraulic conductivity and depth to unaltered bedrock for all cells. 20.5.2 Watershed meteorology input Simulation of watershed hydrology requires specifying weather variables for all cells and the simulation period considered. Function wswb allows weather to be specified in three ways: If a single data frame of daily weather is provided, the model assumes that all watershed cells experience the same weather. If an object of class SpatialPixelsMeteorology is provided, the model will read daily weather grids from that object (see documentation of package meteoland). If an object of class MeteorologyInterpolationData is provided, the model will call function interpolationpixels from package meteoland (see package documentation) every day to be simulated. 20.5.3 Watershed hydraulic correction parameters Distributed hydrological models suffer from the need to specify many parameters. Frances et al. (2007) demonstrated that by using a proper parameter structure, it is possible to obtain an excellent automatic calibration of a distributed conceptual model while maintaining the spatial variability of parameters. In particular, they showed how to define effective model parameters for those quantities normally estimated at the point scale, so that model parameters and estimates usually suffer from being uncommensurable. Effective model parameters can in this situation be defined as a correction function of the corresponding hydrological characteristic. If the correction function takes into account the model and input errors, the temporal and spatial scale effects and also the hydrological characteristics estimation error, it is reasonable to assume the correction function for each parameter will be common to all cells within the watershed. Frances et al. (2007) suggest using a correction factor for each hydraulic parameter, in a strategy called split-parameter. From the calibration point of view, a very important consequence of the split-parameter approach is that the number of variables to be adjusted is reduced dramatically. Our model follows Frances et al. (2007) in that correction factors are defined for three hydraulic parameters with spatial variation across the watershed: \\(K_{drain}\\) vertical saturated soil conductivity for deep drainage. \\(K_{sat}\\) horizontal saturated soil conductivity for soil lateral flows. \\(K_{base}\\) bedrock conductivity for groundwater lateral flows. The effective model parameter for each of these is defined for the spatial (depending on the grid resolution) and temporal (daily) scales of the model. Each effective parameter is split into the input value, assumed to have been estimated at a given spatial and temporal scale, and the corresponding correction factor, i.e. \\(R_{drain}\\), \\(R_{sat}\\) and \\(R_{base}\\). The values for these correction factors should be the target of calibration procedures, assuming that the spatial heterogeneity of effective parameters is adequately covered by the soil and bedrock spatial inputs. 20.5.4 Model outputs Distributed hydrological models can produce very detailed spatial and temporal outputs, hence consuming lots of memory resources. While the model runs at a daily scale, function wswb can be asked to retain spatial outputs and summaries at coarser temporal scales (i.e. weekly, monthly, etc.). The output of function wswb is an S3 list of the same class name with the following data elements: Element Description WatershedBalance Data frame with averaged (over cell) components of the watershed balance corresponding to each summary. WatershedSoilBalance Averaged (over cell) components of the watershed balance, including only cells that have defined soils (i.e. wildland and agriculture cells), corresponding to each summary. CellBalance Gridded data with the water balance components at each cell, corresponding to each summary. CellState Gridded data with the water status at each cell, corresponding to each summary. DailyRunoff A matrix with daily runoff (in m3/day) at each of the outlet cells of the landscape. 20.6 Process details 20.6.1 Subsurface flows Both soil saturated lateral flow and groundwater lateral flow follow the saturated subsurface flow model of Wigmosta et al. (1994), which is based on a kinematic wave approximation. Each grid cell can exchange water with its eight adjacent neighbors. Local hydraulic gradients are approximated by local ground surface slopes, so that each cell will generally receive water from its upslope neighbors and discharge to its downslope neighbors. The rate of saturated flow from cell \\(i\\) to its downgradient neighbors is equal to (M. S. Wigmosta and Lettenmaier 1999): \\[\\begin{eqnarray} q_{ij} &amp;=&amp; - T_{i}\\cdot \\tan(\\beta_{i,j})\\cdot w_j \\;\\; \\beta_{i,j} &lt; 0\\\\ q_{ij} &amp;=&amp; 0 \\;\\; \\beta_{i,j} \\geq 0 \\end{eqnarray}\\] where \\(q_{i,k}\\) is the flow rate from cell \\(i\\) in the direction towards neighbor \\(j\\), \\(T_{i}\\) is the transmissivity at cell \\(i\\), \\(\\beta_{i,j}\\) is the water table slope in the direction of \\(j\\). The transmissivity function for soil saturated lateral flow in cell \\(i\\) (\\(T_{sat,i}\\)) is specified using: \\[\\begin{equation} T_{sat,i} = \\frac{R_{sat}\\cdot K_{sat,i} \\cdot Z_{soil,i}}{n_{sat}} \\cdot (1 - Z_{wt,i}/Z_{soil,i})^{n_{sat}} \\end{equation}\\] where \\(K_{sat,i}\\) is the saturated conductivity of the first (top) soil layer in cell \\(i\\), \\(Z_{soil,i}\\) is the soil depth at cell \\(i\\), \\(Z_{wt,i}\\) is the water table depth at cell \\(i\\) and \\(n_{sat}\\) is a power exponent. \\(R_{sat}\\) is a correction factor (a watershed parameter) for the fact that \\(K_{sat,i}\\) is assessed from soil samples, whereas the parameter in the model is defined at the scale of a grid cell (Francés, Vélez, and Vélez 2007). The transmissivity function for groundwater lateral flow in cell \\(i\\) (\\(T_{base,i}\\)) is analogous: \\[\\begin{equation} T_{base,i} = \\frac{R_{base}\\cdot K_{base,i} \\cdot Z_{bedrock,i}}{n_{base}} \\cdot (1 - Z_{aquifer,i}/Z_{bedrock,i})^{n_{base}} \\end{equation}\\] where \\(K_{base,i}\\) is the bedrock conductivity at cell \\(i\\), \\(Z_{bedrock,i}\\) is the depth of the unaltered bedrock, \\(Z_{aquifer,i}\\) is the depth of the aquifer water table and \\(n_{base}\\) is again a power exponent. Saturated lateral flow inputs and outputs for a given cell \\(i\\) are balanced to determine increase or decrease in soil moisture: \\[\\begin{equation} \\Delta{S_{sat,i}} = \\sum_{j}{q_{sat, ji}} - \\sum_{j}{q_{sat, ij}} \\end{equation}\\] and the same occurs for groundwater lateral flows and aquifer balance: \\[\\begin{equation} \\Delta{S_{base,i}} = \\sum_{j}{q_{base, ji}} - \\sum_{j}{q_{base, ij}} \\end{equation}\\] 20.6.2 Overland flows To simulate surface runoff routing from one cell to the other, the approach of Ostendorf and Reynolds (1993) is used, as in SIERRA (Mouillot, Rambal, and Lavorel 2001). Overland water lateral transport for a given day occurs instantaneously (i.e. no velocities are calculated) and depends on topography only. The model determines cell neighbors following the queen rule (up to eight neighbors per cell). The proportion of surface water runoff of cell \\(i\\) that will be added to the infiltration input (runon) of a neighboring cell \\(j\\) is Ostendorf and Reynolds (1993): \\[\\begin{equation} q_{ij} = \\frac{\\Delta z_{ij}/L_{ij}}{\\sum_{j}{\\Delta z_{ij}/L_{ij}}} \\end{equation}\\] if \\(\\Delta z_{ij} = z_i - z_j &gt; 0\\), that is, if the difference in elevation between the two cells is positive (i.e. if \\(z_j &lt; z_i\\)). Otherwise there is no overland transport from \\(i\\) to \\(j\\), i.e. \\(q_{ij} = 0\\). \\(L_{ij}\\) indicates the distance between cell \\(i\\) and \\(j\\) (which depends on cell size and on whether the neighboring cell \\(j\\) is diagonal to cell \\(i\\)). The summation of the denominator is done only for neighbors at lower elevation, so that \\(\\sum_{i}{q_{ij}} = 1\\). The table of \\(q_{ij}\\) values is calculated when initializing distributed watershed objects. Every day, cells are processed in order from higher to lower elevation. After the daily water balance of a given cell \\(i\\), water runoff \\(Ru_i\\) is divided among the neighboring cells at lower elevation. The runon of a neighbor \\(j\\), \\(Ro_j\\) is updated as: \\[\\begin{equation} Ro_j = Ro_j + Ru_i \\cdot q_{ij} \\end{equation}\\] Note that a given cell \\(j\\) can receive overland flow from more than one neighbor. 20.6.3 Watershed runoff A special situation arises when processing cells that do not have downhill neighbors defined (i.e. where \\(q_{ij} = 0\\) for all \\(j\\)), either because they are in flat surfaces or at the watershed boundary. In both cases, these cells should correspond to water bodies or streams connecting to the catchment outlet. Hence, these cells are called outlet cells in the model, and the runoff they generate becomes watershed runoff. Bibliography "],["allometricmodels.html", "Chapter 21 Allometric models 21.1 Input data 21.2 Allometric relationships", " Chapter 21 Allometric models The purpose of this chapter is to describe how certain plant structural attributes are estimated in medfate using allometric relationships. These static models are used to initialize vegetation input parameters from forest plot data before simulations (in functions forest2spwbInput() and forest2growthInput()), to update vegetation structure during growth simulations or to calculate foliar biomass for fuel assessments. 21.1 Input data 21.1.1 Forest plot data As explained in section 2.3, medfate has been specially designed to work with forest inventory plots with data in form of plant cohorts. The tree/shrub cohort attributes required to apply allometric models are the following: Symbol Units R Description trees shrubs \\(SP_i\\) Species Species identity Y Y \\(H_i\\) \\(cm\\) Height Average tree or shrub height Y Y \\(N_i\\) \\(ind · ha^{-1}\\) N Density of tree individuals Y N \\(DBH_i\\) \\(cm\\) DBH Tree diameter at breast height Y N \\(Cover_i\\) % Cover Shrub percent cover N Y Most allometric functions require data in form of a forest object (see section 2.3.2). 21.1.2 Species parameters The following table shows the allometric coefficients needed for the calculations detailed in this chapter. Symbol Units R param Description \\(a_{fbt}\\), \\(b_{fbt}\\), \\(c_{fbt}\\), \\(d_{fbt}\\) a_fbt, b_fbt, c_fbt, d_fbt Coefficients to calculate foliar biomass of an individual tree \\(a_{ash}\\) a_ash Coefficient relating the square of shrub height with shrub area \\(a_{bsh}\\), \\(b_{bsh}\\) a_bsh, b_bsh Coefficients relating crown volume with dry weight of shrub individuals \\(a_{cr}\\), \\(b_{1cr}\\), \\(b_{2cr}\\), \\(b_{3cr}\\), \\(c_{1cr}\\), \\(c_{2cr}\\) a_cr, b_1cr, b_2cr, b_3cr, c_1cr, c_2cr Coefficients to calculate crown ratio of trees \\(cr\\) [0-1] cr Ratio between crown length and total height for shrubs \\(r_{6.35}\\) r635 Ratio between the weight of leaves plus branches and the weight of leaves alone for branches of 6.35 mm \\(SLA\\) \\(m^2 \\cdot kg^{-1}\\) SLA Specific leaf area 21.2 Allometric relationships 21.2.1 Leaf biomass Leaf biomass calculations are done differently for trees and shrub cohorts. They are calculated from forest objects using function plant_foliarBiomass(). Tree cohorts Foliar biomass for a single tree of cohort \\(i\\) (\\(FB_{tree,i}\\); in \\(kg\\)) is calculated using: \\[\\begin{equation} FB_{tree,i} = a_{fbt} \\cdot DBH_{i}^{b_{fbt}}\\cdot e^{c_{fbt}\\cdot BAL_i} \\cdot DBH_{i}^{d_{fbt} \\cdot BA_{sup}} \\tag{21.1} \\end{equation}\\] where \\(DBH_{i}\\) is the diameter of the tree (in \\(cm\\)), \\(BAL_i\\) is the cummulative basal area (\\(m^2\\cdot ha^{-1}\\)) of trees having a larger diameter, and \\(a_{fbt}\\), \\(b_{fbt}\\), \\(c_{fbt}\\) and \\(c_{fbt}\\) are species-specific regression coefficients. The foliar biomass of the whole tree cohort (\\(FB_{i}\\); in \\(kg\\cdot m^{-2}\\)) is obtained multiplying tree foliar biomass by tree density (\\(N_{i}\\); in \\(ind.\\cdot ha^{-1}\\)): \\[\\begin{equation} FB_{i} = FB_{tree,i}\\cdot (N_{i}/10000) \\tag{21.2} \\end{equation}\\] Shrub cohorts To calculate the leaf biomass of a shrub cohort, we first determine \\(A_{sh,i}\\), the area (in \\(cm^2\\)) occupied by one average individual of height \\(H_{i}\\) (in \\(cm\\)), using the quadratic relationship: \\[\\begin{equation} A_{sh,i} = a_{ash} \\cdot H_{i}^2 \\end{equation}\\] where \\(a_{ash}\\) is a species-specific parameter. The model then estimates the dry weight of leaves and branches up to 6.35mm in diameter (\\(B_{sh,i}\\), in kg) of this average individual (i.e. fine fuel biomass), using an allometric relationship with shrub crown phytovolume assuming a cylinder (in \\(cm^3\\)): \\[\\begin{equation} B_{sh,i} = a_{bsh} \\cdot (A_{sh,i}\\cdot H_{i}\\cdot cr_i)^{b_{bsh}} \\end{equation}\\] where \\(a_{bsh}\\) and \\(b_{bsh}\\) are species-specific parameters and \\(cr_i\\) is the crown ratio (a value between 0 and 1, the ratio between crown length and total height). Shrub density (\\(N_{i}\\); in \\(ind.\\cdot m^{-2}\\)) can be grossly estimated from percent cover (\\(C_{i}\\), in percent) and \\(A_{sh,i}\\) (in \\(cm^{-2}\\)): \\[\\begin{equation} N_{i} = \\frac{C_{i}/100}{A_{sh,i}/10000} \\end{equation}\\] The fine fuel biomass of a shrub cohort (\\(W_{i}\\), in \\(kg \\cdot m^{-2}\\)) is simply the product of \\(B_{sh,i}\\) (\\(kg\\) of dry weight) and \\(N_{i}\\): \\[\\begin{equation} W_{i} = B_{sh,i} \\cdot N_{i} \\tag{21.3} \\end{equation}\\] Foliar biomass (in \\(kg \\cdot m^{-2}\\)) can be obtained using the species-specific ratio \\(r_{6.35,i}\\): \\[\\begin{equation} FB_{i} = W_{i}/r_{6.35, i} \\tag{21.4} \\end{equation}\\] If not known, \\(r_{6.35,i}\\) can be set to a default value of 2 (equivalent to 50% of weight corresponding to leaves). 21.2.2 Leaf area and LAI Leaf area index (\\(LAI\\) in \\(m^2 \\cdot m^{-2}\\)) of a given cohort \\(i\\) can be calculated from its foliar biomass (in \\(kg \\cdot m^{-2}\\)) by using a specific leaf area coefficient (\\(SLA\\), in \\(m^2 \\cdot kg^{-1}\\)) that in medfate is species-specific: \\[\\begin{equation} LAI_{i} = FB_{i} \\cdot SLA \\end{equation}\\] The leaf area (\\(LA\\) in \\(m^2\\)) of an individual of the cohort is found by dividing it by plant density (\\(N_i\\), in \\(ind.\\cdot ha^{-1}\\)) and multiplying by 10000 \\(m^2 \\cdot ha^{-1}\\): \\[\\begin{equation} LA_{i} = 10000 \\cdot LAI_{i} / N_{i} \\end{equation}\\] LAI values are calculated from forest objects using function plant_LAI(). 21.2.3 Crown vertical dimensions Crown base height, i.e. the height were the first living branch of trees or shrubs occurs, is an important parameter to know the vertical distribution of leaves (see section 2.3.3). Crown base height of a plant cohort \\(i\\) (i.e., \\(H_{crown,i}\\), in \\(cm\\)) is related to the total height of the cohort (\\(H_i\\), in \\(cm\\)) and its crown ratio (\\(CR_i\\)), which is the ratio between crown length and plant height: \\[\\begin{equation} H_{crown,i} = (1 - CR_i) \\cdot H_i \\tag{21.5} \\end{equation}\\] In the case of shrubs the crown ratio \\(CR_i\\) is normally an input (species-specific) parameter (\\(cr\\)). In the case of trees, the crown ratio is modelled as a function of tree size and stand competition, following a modification of the logistic equation of Hasenauer and Monserud (1996) : \\[\\begin{equation} CR_i = \\frac{1}{1+e^{-(a_{cr}+b_{1cr}\\cdot HD_i +b_{2cr} \\cdot (H_i/100)+b_{3cr} \\cdot DBH_i^2+c_{1cr} \\cdot BAL_i + c_{2cr} \\cdot ln(CCF_i))}} \\tag{21.6} \\end{equation}\\] where \\(HD_i = H_i/(100\\cdot DBH_i)\\) is the height to diameter ratio (in \\(m\\cdot cm^{-1}\\)), \\(H_i\\) is the tree height, \\(DBH_i\\) is the diameter, \\(CCF_i\\) is the crown competition factor and \\(a_{cr}\\), \\(b_{1cr}\\), \\(b_{2cr}\\), \\(b_{3cr}\\), \\(c_{1cr}\\) and \\(c_{2cr}\\) are species-specific parameters. The crown competition factor is in turn calculated using (Krajicek, Brinkman, and Gingrich 1961): \\[\\begin{equation} CCF_i = \\sum_{i}{N_i \\cdot \\pi \\cdot (CW_i/2)^2/100} \\end{equation}\\] where \\(N_i\\) is the tree density and \\(CW_i\\) is the crown width (in \\(m\\)) assuming an open-grown tree, estimated from an allometric relationship with tree diameter: \\[\\begin{equation} CW_i = a_{cw}\\cdot DBH_i^{b_{cw}} \\end{equation}\\] where again \\(a_{cw}\\) and \\(b_{cw}\\) are species-specific parameters. Crown ratios can be calculated from forest objects using function plant_crownRatio(). Similar calculations are performed to estimate crown length and crown base height, with functions plant_crownLength() and plant_crownBaseHeight(), respectively. Bibliography "],["post-simulation-procedures.html", "Chapter 22 Post-simulation procedures 22.1 Live fuel moisture content 22.2 Water use efficiency", " Chapter 22 Post-simulation procedures 22.1 Live fuel moisture content Given an average relative water content (\\(RWC\\)) of a plant organ, its live fuel moisture content (\\(LFMC\\) in \\(g H_2O \\cdot g^{-1}\\) of dry tissue) can be calculated using: \\[\\begin{equation} LFMC = RWC \\cdot \\Theta \\cdot \\frac{\\rho_{H_2O}}{\\rho} = RWC \\cdot LFMC_{max} \\end{equation}\\] where \\(\\Theta\\) is the tissue porosity (\\(cm^3\\) of water per \\(cm^3\\) of tissue), \\(\\rho\\) is the density of the tissue and \\(\\rho_{H_2O}\\) is the density of water. In practice estimates of maximum fuel moisture content \\(LFMC_{max}\\) are easier to obtain than porosity estimates, so it is more straightforward to estimate \\(LFMC\\) as the product of \\(RWC\\) and \\(LFMC_{max}\\). In medfate, \\(LFMC\\) estimates are assumed to correspond to fine fuels (i.e. leaves and twigs of &lt; 6.5 mm) but are estimated from leaf water content. The relative water content of leaves, and hence its \\(LFMC\\), are estimated using (see 10.3.3): \\[\\begin{equation} LFMC = (RWC_{apo, leaf} \\cdot f_{apo, leaf} + RWC_{sym,leaf} \\cdot (1 - f_{apo,leaf})) \\cdot LFMC_{max} \\end{equation}\\] where \\(RWC_{apo,leaf}\\) and \\(RWC_{sym,leaf}\\) are the relative water content of apoplastic and symplastic leaf tissue and \\(f_{apo,leaf}\\) is the fraction of apoplastic tissue in leaves. The package allows estimating \\(LFMC\\) from the output of spwb() or growth() using function moisture_cohortFMC(), but the post-processing function performs slightly different calculations depending on the complexity of the water balance. Basic soil water balance produces, among other outputs, the daily water potential of each plant cohort, \\(\\Psi_{plant}\\) (representing an weighted average of soil layer water potentials using fine root distribution as weights) and an estimate of the level of stem cavitation, \\(PLC_{stem}\\). Daily \\(LFMC\\) estimates can be obtained from this output if we use \\(RWC_{apo, leaf} = 1 - PLC_{stem}\\) and calculate \\(RWC_{sym, leaf}\\) from \\(\\Psi_{plant}\\) using symplasmic leaf pressure-volume curves (see 10.3.1). When using basic water balance, function moisture_cohortFMC() takes daily values \\(\\Psi_{plant}\\) and \\(PLC_{stem}\\) from the simulation output, but parameters \\(\\pi_{0,leaf}\\), \\(\\epsilon_{leaf}\\) (i.e. pressure-volume curve parameters), \\(f_{apo,leaf}\\) and \\(LFMC_{max}\\) are drawn from the data frame SpParams of species parameter values. Unlike the basic water balance, the advanced water balance explicitly tracks the water potential in different plant segments and distinguishes between apoplastic and symplastic tissues. In this case, \\(RWC_{apo,leaf}\\) and \\(RWC_{sym,leaf}\\) are obtained directly from the plant water balance, and only \\(LFMC_{max}\\) is drawn from the data frame SpParams. 22.2 Water use efficiency "],["windextinction.html", "Chapter 23 Wind extinction 23.1 Wind speed at the top of the canopy 23.2 Wind extinction profile", " Chapter 23 Wind extinction In this chapter we describe a few wind extinction models that are implemented in medfate. Wind extinction is rellevant: (a) to determine convective heat exchanges between the soil and the canopy; (b) to estimate wind speed and energy balance at the leaf level for different plant cohorts; and (c) for fire behaviour calculations. 23.1 Wind speed at the top of the canopy Input wind speed (\\(u\\)) is assumed to represent the speed of wind at 6 m (20 feet) above the canopy. Following F. Albini and Baughman (1979) the wind speed (in \\(m·s^{-1}\\)) at the top of the canopy is: \\[\\begin{equation} u_{top} = \\frac{(1.01857\\cdot u) \\cdot 0.4265092 \\cdot H_{canopy}}{log(20 + 1.181102 \\cdot H_{top})} \\end{equation}\\] where \\(H_{top}\\) is the canopy top height in \\(m\\). 23.2 Wind extinction profile The wind extinction profile, i.e the wind speed at any height \\(z\\) in \\(m\\), can be calculated following Massman (1987): \\[\\begin{eqnarray} \\beta_{stand} &amp;=&amp; \\frac{4.0 \\cdot 0.2 \\cdot LAI_{stand}^{phi}}{0.16 \\cdot 1.5^2} \\\\ u(z) &amp;=&amp; u_{top} \\cdot \\sqrt{\\frac{\\cosh(\\beta_{stand} \\cdot z / H_{top})}{\\cosh(\\beta_{stand})}} \\end{eqnarray}\\] Bibliography "],["fuel-characteristics-and-fire-behaviour.html", "Chapter 24 Fuel characteristics and fire behaviour 24.1 Overview 24.2 Input data 24.3 Fuel characteristics 24.4 Surface fire behavior 24.5 Crown fire behavior 24.6 Fire potentials 24.7 Unit conversion of outputs", " Chapter 24 Fuel characteristics and fire behaviour 24.1 Overview Functions fuel_FCCS() and fire_FCCS() allow calculating potential fire behaviour for forest inventory plots. Formulation of fuel characteristics and fire behaviour is an adaptation of the Fuel Characteristics Classification System [FCCS; Prichard et al. (2013)]. In FCCS, fuelbed is divided into six strata, including canopy, shrub, herbaceous vegetation, dead woody materials, leaf litter and ground fuels. All except ground fuels are considered here. The intensity of burning depends on several factors, including topography, wind conditions, fuel structure and its moisture content, which is determined from antecedent and current meteorological conditions. A modification of the Rothermel’s (1972) model is used to calculate the intensity of surface fire reaction (in \\(kW/m^2\\)) and the rate of fire spread (in \\(m/min\\)) of surface fires assuming a steady-state fire. Both quantities are dependent on fuel characteristics, windspeed and direction, and topographic slope and aspect. The model returns the following results: (1) Fuel characteristics by stratum; (2) Surface fire behavior (i.e. reaction intensity, rate of spread, fireline intensity and flame length); (3) Crown fire behavior; (4) Fire potential ratings of surface fire behavior and crown fire behavior. 24.2 Input data 24.2.1 Forest plot data As explained in section 2.3, medfate has been specially designed to work with forest inventory plots. The tree/shrub cohort attributes required to apply allometric models are same as for chapter 21: Symbol Units R Description trees shrubs \\(SP_i\\) Species Species identity Y Y \\(H_i\\) \\(cm\\) Height Average tree or shrub height Y Y \\(N_i\\) \\(ind · ha^{-1}\\) N Density of tree individuals Y N \\(DBH_i\\) \\(cm\\) DBH Tree diameter at breast height Y N \\(Cover_i\\) % Cover Shrub percent cover N Y Cohorts are not distinguished for the herbaceous stratum, and the variables needed are: Symbol Units R Description \\(C_{he}\\) % herbCover Herbaceous percent cover \\(H_{he}\\) \\(cm\\) herbHeight Mean herb height Finally, the model also requires the percent cover of trees in the canopy (\\(C_{ca}\\)). This is easily available from forest inventory data, but could also be derived from the description of tree cohorts. Fire behaviour functions require data in form of a forest object (see section 2.3.2). 24.2.2 Species parameters \\(r_{6.35}(SP_i)\\) [r635]: Ratio between the weight of leaves plus branches and the weight of leaves alone for branches of 6.35 mm. \\(\\rho_p(SP_i)\\) [PD]: Particle density. \\(\\sigma(SP_i)\\) [SAV]: Surface-area-to-volume ratio of the small fuel (1h) fraction (leaves and branches &lt; 6.35mm). \\(h(SP_i)\\) [HeatContent]: High fuel heat content. \\(\\eta_{F}(SP_i)\\) [Flammability]: Flammability value (either 1 or 2 for normal or high, respectively). \\(LD(SP_i)\\) [LeafDuration]: Leaf duration (in years). \\(LI(SP_i)\\) [PercentLignin]: Percentage of lignin in leaves. 24.2.3 Other inputs Other inputs may be given by expert opinion or they may be calculated from another model. Specifically, for each plant cohort (and for any day of application) the fire behaviour model requires: \\(P_{dead,i}\\): Proportion of the plant that is dead. \\(M_i\\): Foliar moisture value (in percent of dry weight). Analogously, the same variables are needed for the herbaceous stratum. \\(P_{dead,he}\\): Proportion of herb fuels that respond to humidity changes as 1-h dead fuels. \\(M_{live,he}\\): Foliar moisture value of live herb fuels (in percent of dry weight). The model also needs the following input parameters: \\(M_{dead}\\): the moisture of 1-h dead fuels (in percent of dry weight). \\(U\\): Midflame windspeed (in \\(m\\cdot s^{-1}\\)). \\(S\\): Slope (in percent). 24.3 Fuel characteristics 24.3.1 Fuel strata The Fuel Characteristics Classification System (FCCS) on which this document is based, defines six fuel strata (Prichard et al. 2013): Canopy: Trees, snags and ladder fuels. Shrubs: Primary and secondary layers. Non-woody vegetation (herbs): grasses, sedges, rushes and forbs. Woody fuels: All downed and dead wood, sound wood, rotten wood and stumps. Litter-lichen-moss: Lichen, litter and moss layers. Ground fuels: Duff, basal accumulation and squirrel middens. Shrubs, herbs and woody fuels are constitute the upper surface fuels, whereas herbs and woody fuels alone consitute the lower surface fuels. FCCS summarizes and calculates characteristics for each fuelbed stratum and layer. Our model estimates fuel loading and characteristics for canopy, shrub, non-woody vegetation, as well as fine (1h) woody fuels and litter fuels. Larger woody fuels (10h or 100h) could be considered if information about forest management actions is available. Ground fuels are not included here. 24.3.2 Cohort fuel loading Here we consider as burnable fuels foliage and branches up to 6.35 mm = 0.25 in in diameter. The same consideration applies to both trees and shrubs. They are calculated from forest objects using function plant_fuel(). Tree cohorts Fine fuel loading for a tree cohort (\\(W_{i}\\); in \\(kg\\cdot m^{-2}\\)), including its leaves and branches with diameter up to 6.35 mm = 0.25 in, is calculated from foliar biomass (\\(FB_{i}\\), see eq. (21.2)) using: \\[\\begin{equation} W_{i} = r_{6.35,i}\\cdot FB_{i} \\end{equation}\\] where \\(r_{6.35,i}\\) is the ratio between the weight of leaves plus branches and the weight of leaves alone for branches of 6.35 mm in diameter for the species of cohort \\(i\\). The biomass corresponding to branches of less than &lt; 6.35 mm (\\(SBB_{i}\\), also in \\(kg\\cdot m^{-2}\\)) is obtained by subtraction: \\[\\begin{equation} SBB_{i} = (r_{6.35,i}-1)\\cdot FB_{i} \\end{equation}\\] Whereas \\(W_{i}\\) is the cohort loading variable influencing fire behavior, \\(FB_{i}\\) and \\(SBB_{i}\\) are cohort variables used to estimate fine dead woody and leaf litter loadings. Shrub cohorts Our procedure to estimate shrub fuel loading differs from Prichard et al. (2013) because they calculate first total biomass of the shrub species and then consider the percentage of total weight that corresponds to leaves and small branches. In our case, we estimate fine fuel loading (\\(W_{i}\\), in \\(kg \\cdot m^{-2}\\)) and foliar biomass (\\(FB_i\\), in \\(kg \\cdot m^{-2}\\)) of shrubs from eqs. (21.3) and (21.4). Biomass of small branches (in \\(kg \\cdot m^{-2}\\)) can be obtained from : \\[\\begin{equation} SBB_{i} = W_{i} - FB_{i} \\end{equation}\\] 24.3.3 Vertical distribution of cohort fuels Vertical distribution of fine fuels are distributed between the crown base height (\\(H_{crown,i}\\); in \\(cm\\)) and the total height (\\(H_i\\), in \\(cm\\)) following a truncated Gaussian distribution, as done for the distribution of leaves (see section 2.3.3). Crown base height of trees is calculated as explained in 21.2.3. The loading of a cohort that occurs within a given height interval of limits \\(H_1\\) and \\(H_2\\) is calculated as: \\[\\begin{equation} W_i(H_1, H_2) = W_i\\cdot p_i(H_1, H_2) \\end{equation}\\] where \\(p_i(H_1, H_2)\\) is the proportion of the crown of cohort \\(i\\) that corresponds to the height interval \\((H_1, H_2)\\). 24.3.4 Fuel bulk density profile Knowing at which height fuels are placed, the fuel bulk density profile (Reinhardt, Lutes, and Scott 2006) is defined for any given interval \\((H_1, H_2)\\) as the bulk density (\\(kg/m^3\\)) of fine fuels corresponding to that interval: \\[\\begin{equation} BDP(H_1, H_2) = \\frac{\\sum_{i} W_i(H_1, H_2)}{H_2-H_1} \\end{equation}\\] Canopy bulk density normally ranges between 0 and 0.4 \\(kg/m^3\\) (Scott and Reinhardt 2002). Sando and Wick (1972) arbitrarily defined canopy base height as the lower vertical 0.3-m section with a weight greater than \\(0.01124 kg/m^3\\). A user-defined threshold \\(t_{BDP}\\) (in \\(kg/m^3\\)) in 0.1-m sections is used to differentiate the surface fuelbed from canopy fuels. Using this threshold the model calculates the following three heights (Reinhardt, Lutes, and Scott 2006): Shrub stratum base height, \\(H_{sb}\\) (in \\(cm\\)): the minimum height between 0 and 2 m where fuel bulk density is larger than \\(t_{BDP}\\). Shrub stratum top height, \\(H_{st}\\) (in \\(cm\\)): the maximum height between 0 and 2 m where fuel bulk density larger than \\(t_{BDP}\\). With this definition \\(h_{s}\\) cannot be higher than 2 m (corresponding to fuel model 4 in Anderson 1982). Canopy base height, \\(H_{cb}\\) (in \\(cm\\)): In terms of its consequences to crown fire initiation, canopy base height can be defined as the lowest height above the ground at which there is sufficient canopy fuel to propagate fire vertically through the canopy. It is calculated as the minimum height over \\(H_st\\) when the bulk density starts again to be larger than \\(t_{BDP}\\). Canopy top height, \\(H_{ct}\\) (in \\(cm\\)): the maximum height where bulk density is larger than \\(t_{BDP}\\). Canopy gap, \\(H_{gap}\\) (in \\(cm\\)): the difference between \\(H_{cb}\\) and \\(H_{st}\\). The canopy gap is used to calculate crown initiation potential. Figure 24.1 illustrates the definition and analysis of the fuel bulk density profile for a given forest stand (see function vprofile_fuelBulkDensity()). Following Mitsopoulos and Dimitrakopoulos (2007), a threshold \\(t_{BDP} = 0.04\\) is used to determine shrub and canopy heights. Figure 24.1: Bulk density profile of an example forest 24.3.5 Fuel loading (\\(w\\)) and fuel depth (\\(\\delta\\)) 24.3.5.1 Canopy stratum Canopy loading (in \\(kg\\cdot m^{-2}\\)) is the sum of (tree and shrub) cohort loadings above 2 m (i.e. 200 cm): \\[\\begin{equation} w_{ca} = \\sum_{i}w_{i,ca} =\\sum_{i}{W_i(200, \\infty}) \\end{equation}\\] where \\(w_{i,ca}\\) is the canopy stratum loading of cohort \\(i\\). Canopy depth (in \\(m\\)) is defined as the average of tree (or shrub) crown lengths above 2 m, weighted by the loadings of cohorts in the canopy: \\[\\begin{equation} \\delta_{ca} = \\frac{1}{100}\\cdot\\frac{\\sum_{i}{w_{i,ca}\\cdot (H_i - H_{b,i})\\cdot p_{i,ca} }}{\\sum_{i}{w_{i,ca}}} \\end{equation}\\] where the proportion of a tree (or shrub) cohort in the canopy stratum is \\(p_{i,ca}=p_{i}(200,\\infty)\\). 24.3.5.2 Shrub stratum Shrub loading (in \\(kg\\cdot m^{-2}\\)) is the sum of (tree and shrub) cohort loadings between the ground and 2 m (i.e. 200 cm): \\[\\begin{equation} w_{sh} = \\sum_{i}w_{i,sh} =\\sum_{i}W_i(0, 200) \\end{equation}\\] where \\(w_{i,sh}\\) is the shrub stratum loading of cohort \\(i\\). The depth of the shrub stratum (in \\(m\\)) is defined as the average of tree (or shrub) crown lengths below 2 m, weighted by the loadings of cohorts in the shrub stratum: \\[\\begin{equation} \\delta_{sh} = \\frac{1}{100}\\cdot \\frac{\\sum_{i}{w_{i,sh}\\cdot (H_i - H_{b,i})\\cdot p_{i,sh} }}{\\sum_{i}{w_{i,sh}}} \\end{equation}\\] where the proportion of a shrub (or tree) cohort in the shrub stratum is \\(p_{i,sh}=p_{i}(0,200)\\). 24.3.5.3 Non-woody stratum Herb percent cover and average herb height are transformed into herbaceous loading (\\(kg\\cdot m^{-2}\\)) using (ref piropinos): \\[\\begin{equation} w_{he} = 0.014 \\cdot C_{he} \\cdot (H_{he}/100) \\end{equation}\\] The depth of the herbaceous stratum (in \\(m\\)) is simply the mean height of herbs: \\[\\begin{equation} \\delta_{he} = H_{he}/100 \\end{equation}\\] 24.3.5.4 Woody and litter strata In FCCS (Prichard et al. 2013), woody surface loading includes several fuel sizes. However, when calculating surface fire behavior \\(w_{wo}\\) includes 100% of 1h fuels, 25% of 10h fuels and 12.5% of 100h fuels, which represents the material available for flaming combustion. Obtaining loading estimates for 10h- and 100h-fuels is very difficult without field fuel sampling. However, we might estimate 1h woody fuels and leaf litter from standing biomass of small branches (&lt; 6.35mm) and leaves for trees and shrubs. Hence, our treatment of surface woody fuels includes only fine (1h) fuels. Assuming a continuous input of litter, the variation in accumulated litter is described by a simple differential equation (Birk and Simpson 1980): \\[\\begin{equation} \\frac{\\mathrm{d}X}{\\mathrm{d}t} = L - k\\cdot X \\end{equation}\\] where \\(k\\) is the decay constant, \\(L\\) is the rate of litterfall and \\(X\\) is the litter mass accumulated in the forest floor. Assuming that litter mass has reached a steady state, \\(X\\) can be estimated as the ratio between \\(L\\) and \\(k\\). If litterfall is estimated as the total foliar biomass divided by leaf duration, the amount of steady state leaf litter corresponding to each tree and srhub cohort can be estimated using: \\[\\begin{equation} w_{li, i} = \\frac{FB_i}{LD(SP_i) \\cdot k_i} \\end{equation}\\] where \\(FB_i\\) is the foliar biomass of cohort \\(i\\), \\(LD(SP_i)\\) is the species-specific average leaf duration (in years) and \\(k_i\\) is the rate of decay of leaves of cohort \\(i\\), which is given by the regreession model of Meentemeyer (1978): \\[\\begin{equation} k_i = (-0.5365+0.00241\\cdot AET) - (-0.01586+0.000056\\cdot AET) \\cdot LI(SP_i) \\end{equation}\\] where \\(LI(SP_i)\\) is the species-specific percentage of lignin content in leaves and AET is actual evapotranspiration (default \\(AET = 1000 mm\\)). Litter loadings are summed for four litter types (short pine needles, long pine needles, other conifers, broadleaves). In the case of fine dead woody materials (small fallen branches), loading of small branches is taken as woody litter and it is assumed that small branch litterfall occurs at the same time as leaf litterfall (i.e. according to leaf duration): \\[\\begin{equation} w_{wo} = \\sum_{i}{w_{wo, i}} = \\sum_{i}{\\frac{SBB_i}{LD(SP_i)\\cdot k_{wo}} } \\end{equation}\\] where \\(k_{wo} = 0.95 y^{-1}\\) is a constant rate of decomposition for small branches. In FCCS, the depth of woody and LLM strata are inputs. In our case the depth of the woody and litter strata are estimated from the corresponding fuel loadings: \\[\\begin{eqnarray} \\delta_{wo} &amp;= w_{wo}/\\rho_{b, wo}\\\\ \\delta_{li} &amp;= w_{li}/\\rho_{b, li} \\end{eqnarray}\\] where \\(\\rho_{b, wo}\\), \\(\\rho_{b, li}\\) are the woody and litter bulk density (in \\(kg\\cdot m^{-3}\\)), respectively. Litter bulk density \\(\\rho_{b,li}\\) is calculated as a weighted average of litter types: \\[\\begin{equation} \\rho_{b,li} = \\frac{\\sum_{k}{ \\rho_{b,k}\\cdot w_{li,k}}}{\\sum_{k} {\\cdot w_{li,k}}} \\end{equation}\\] where \\(k\\) indicates litter type. The bulk density for litter types are [Prichard et al. (2013); Table 1]: \\[\\begin{eqnarray} \\rho_{b,shortneedlepine} &amp;= \\rho_{b,longneedlepine} = \\rho_{b,otherconifer}= 1.65 lb\\cdot ft^{-3} = 26.43 kg\\cdot m^{-3}\\\\ \\rho_{b,hardwood} &amp;= 0.83 lb\\cdot ft^{-3} = 13.30 kg\\cdot m^{-3} \\end{eqnarray}\\] 24.3.6 Other fuel characteristics All the following characteristics are calculated in metric units (although British units are indicated to qualify specific values for compatibility). 24.3.6.1 Particle density (\\(\\rho_{p}\\)) Particle density is the ratio of dry weight over volume for fuel particles (in \\(kg\\cdot m^{-3}\\)). When species have different values, particle density averages for shrub and canopy strata can be obtained as: \\[\\begin{eqnarray} \\rho_{p, sh} &amp;= \\frac{\\sum_{i}{w_{i,sh} \\cdot \\rho_p(SP_i)}}{\\sum_{i}{w_{i,sh}}}\\\\ \\rho_{p, ca} &amp;= \\frac{\\sum_{i}{w_{i,ca} \\cdot \\rho_p(SP_i)}}{\\sum_{i}{w_{i,ca}}} \\end{eqnarray}\\] where \\(\\rho_p(SP_i)\\) is the species-specific particle density. \\(\\rho_{p, he}\\), \\(\\rho_{p, wo}\\) and \\(\\rho_{p, li}\\) are all set to a default value \\(\\rho_{p} = 400 kg\\cdot m^{-3}= 25 lb\\cdot ft^{-3}\\) (Prichard et al. 2013). 24.3.6.2 Particle volume (\\(PV\\)) Particle volume is defined as the volume of particles per surface area (in \\(m^3\\cdot m^{-2}\\)). Is calculated as dry weight loading divided by particle density. If species have different particle density values, the particle volume for canopy (\\(PV_{ca}\\)) and shrub(\\(PV_{sh}\\)) strata can be calculated using: \\[\\begin{eqnarray} PV_{ca} &amp;= \\sum_{i}{PV_{i,ca}} = \\sum_{i}{w_{i,ca}/\\rho_{p}(SP_i)}\\\\ PV_{sh} &amp;= \\sum_{i}{PV_{i,sh}} = \\sum_{i}{w_{i,sh}/\\rho_{p}(SP_i)} \\end{eqnarray}\\] where \\(PV_{i,ca}\\) and \\(PV_{i,sh}\\) are the particle volume of cohort \\(i\\) in the canopy and shrub strata, respectively. The particle volume for woody and herb strata are simply: \\[\\begin{eqnarray} PV_{wo} &amp;= w_{wo}/\\rho_{p,wo}\\\\ PV_{he} &amp;= w_{he}/\\rho_{p,he} \\end{eqnarray}\\] The particle volume for the litter stratum is the sum of particle volume of litter components: \\[\\begin{equation} PV_{li} = \\sum_{i}{PV_{li,k}} = \\sum_{i}{w_{li,k}/\\rho_{p, li}} \\end{equation}\\] 24.3.6.3 Packing ratio (\\(\\beta\\)) The proportion of fuelbed stratum volume occupied by fuel particles is an important factor to predict fire behavior. At low packing ratios (low particle density) fire intensity is limited by excessive heat loss. At high packing ratios (high particle density), lack of oxygen limits combustion. The packing ratios for the canopy and shrub stratum (\\(\\beta_{ca}\\) and \\(\\beta_{sh}\\); dimensionless) are given by: \\[\\begin{eqnarray}\\@ref(eq:packingratioshrub) \\beta _{ca} &amp;= \\frac{PV_{ca}}{\\delta_{ca}}\\\\ \\beta _{sh} &amp;= \\frac{PV_{sh}}{\\delta_{sh}} \\end{eqnarray}\\] where \\(w_{i,ca}\\) and \\(w_{i,sh}\\) are the contribution of cohort \\(i\\) to canopy and shrub strata loading (in \\(kg\\cdot m^{-2}\\)), respectively, and \\(\\rho_p(SP_i)\\) is the particle density (in \\(kg\\cdot m^{-3}\\)) of fuels in cohort \\(i\\). The packing ratio for the herbaceous, woody and litter strata are: \\[\\begin{eqnarray} \\beta _{he} &amp;= \\frac{PV_{he}}{\\delta_{he}}\\\\ \\beta _{wo} &amp;= \\frac{PV_{wo}}{\\delta_{wo}}= \\frac{\\rho_{b,wo}}{\\rho_{p,wo}}\\\\ \\beta _{li} &amp;= \\frac{PV_{li}}{\\delta_{li}}= \\frac{\\rho_{b,li}}{\\rho_{p,li}} \\end{eqnarray}\\] Note that the packing ratio expressions for woody and litter strata as a ratio of bulk and particle density arises as a consequence of how fuel depth and particle volume are estimated. 24.3.6.4 Surface-area-to-volume ratio (\\(\\sigma\\)) The surface-area-to-volume ratio (in \\(m^2\\cdot m^{-3}\\)) for the canopy or shrub strata are calculated using weighted averages: \\[\\begin{eqnarray} \\sigma_{ca} &amp;= \\frac{\\sum_{i}{w_{i,ca} \\cdot \\sigma(SP_i)}}{\\sum_{i}{w_{i,ca}}}\\\\ \\sigma_{sh} &amp;= \\frac{\\sum_{i}{w_{i,sh} \\cdot \\sigma(SP_i)}}{\\sum_{i}{w_{i,sh}}} \\end{eqnarray}\\] where \\(w_{i,ca}\\) and \\(w_{i,sh}\\) are the contribution of cohort \\(i\\) to canopy and shrub strata loading (in \\(kg\\cdot m^{-2}\\)), respectively, and \\(\\sigma(SP_i)\\) is the species-specific surface-area-to-volume ratio. The surface-area-to-volume ratio of herbs is assumed constant \\(\\sigma_{he} = 11483 m^2\\cdot m^{-3} = 3500 ft^2\\cdot ft^{-3}\\) and that of small (1-h) woody fuels is \\(\\sigma_{wo} = 1601.05 m^2\\cdot m^{-3} = 488 ft^2\\cdot ft^{-3}\\). The surface-area-to-volume ratio for the litter stratum is: \\[\\begin{equation} \\sigma_{li} = \\frac{\\sum_{k}{w_{li,k} \\cdot \\sigma_{k}}}{\\sum_{k}{w_{li,k}}} \\end{equation}\\] and the surface-area-to-volume ratio for litter types are: \\[\\begin{eqnarray} \\sigma_{shortneedlepine} &amp;= 6562 m^{2}\\cdot m^{-3}= 2000 ft^{2}\\cdot ft^{-3}\\\\ \\sigma_{longneedlepine} &amp;= 4921 m^{2}\\cdot m^{-3}= 1500 ft^{2}\\cdot ft^{-3}\\\\ \\sigma_{otherconifer} &amp;= 8202 m^{2}\\cdot m^{-3}= 2500 ft^{2}\\cdot ft^{-3}\\\\ \\sigma_{hardwood} &amp;= 8202 m^{2}\\cdot m^{-3}= 2500 ft^{2}\\cdot ft^{-3} \\end{eqnarray}\\] 24.3.6.5 Fuel area index (FAI) The fuel area index (FAI) is the total fuel surface area per unit of ground area (unitless). It is analogous to leave area index (LAI), and it is used to calculate FCCS fire potentials (Schaaf et al. 2007). For shrub and canopy strata, FAI is calculated as: \\[\\begin{eqnarray} FAI_{ca} &amp;= \\sum_{i}{FAI_{i, ca}} = \\sum_{i}{PV_{i,ca} \\cdot\\sigma(SP_i)}\\\\ FAI_{sh} &amp;= \\sum_{i}{FAI_{i, sh}}= \\sum_{i}{PV_{i,sh} \\cdot \\sigma(SP_i)} \\end{eqnarray}\\] where \\(FAI_{i, ca}\\) and \\(FAI_{i, sh}\\) are the FAI of cohort \\(i\\) in the canopy and shrub strata, respectively. The FAI of herbs and woody strata are given by: \\[\\begin{eqnarray} FAI_{he} &amp;= PV_{he} \\cdot \\sigma_{he}\\\\ FAI_{wo} &amp;= PV_{wo} \\cdot \\sigma_{wo} \\end{eqnarray}\\] For the litter layer, FAI is calculated as a sum of FAI for litter components: \\[\\begin{equation} FAI_{li} = \\sum_{k}{FAI_{li,k}} = \\sum_{k}{PV_{li,k} \\cdot \\sigma_{k}} \\end{equation}\\] 24.3.6.6 Moisture (\\(M\\)) Live foliar moisture (in percent of dry weight) is also averaged across cohorts composing the shrub or canopy strata: \\[\\begin{eqnarray} M_{live, sh} &amp;= \\frac{\\sum_{i}{w_{i,sh} \\cdot M_i}}{\\sum_{i}{w_{i,sh}}} \\\\ M_{live, ca} &amp;= \\frac{\\sum_{i}{w_{i,ca} \\cdot M_i}}{\\sum_{i}{w_{i,ca}}} \\end{eqnarray}\\] Live foliar moisture of herb stratum (\\(M_{live, he}\\)) is an input. The moisture of dead plant in the canopy and shrub layers (\\(M_{dead, ca}\\) and \\(M_{dead, sh}\\)), the moisture of dead herbs (\\(M_{dead, he}\\)), as well as that of litter (\\(M_{li}\\)) and woody (\\(M_{wo}\\)) strata are all assumed equal to the moisture of 1-h dead fuels, which is an input of the model. 24.3.6.7 Proportion of dead fuel (\\(P_{dead}\\)) Woody and litter strata are dead fuels, but for canopy, shrub and herb strata the proportion of fuels that are dead are variable. The proportion of dead fuels in the herbaceous stratum (\\(P_{dead,he}\\)) is an input of the model, but for the shrub and canopy strata these are calculated from the proportion of dead fuels in each cohort: \\[\\begin{eqnarray} P_{dead,sh} &amp;= \\frac{\\sum_{i}{w_{i,sh} \\cdot P_{dead,i}}}{\\sum_{i}{w_{i,sh}}} \\\\ P_{dead, ca} &amp;= \\frac{\\sum_{i}{w_{i,ca} \\cdot P_{dead,i}}}{\\sum_{i}{w_{i,ca}}} \\end{eqnarray}\\] 24.3.6.8 Low heat content (\\(h\\)) The low fuel heat content of each surface fuel stratum (in \\(kJ\\cdot kg^{-1}\\)) is used for the calculation of reaction intensity. Heat content values are adjusted for live foliar moisture content in canopy, shrub and herb strata; and are left to the default value for woody and litter strata: \\[\\begin{eqnarray} h_{ca} &amp;=&amp; h_{ca, def} - (M_{live, ca}/100)\\cdot V \\\\ h_{sh} &amp;=&amp; h_{sh, def} - (M_{live, sh}/100)\\cdot V \\\\ h_{he} &amp;=&amp; h_{def} - (M_{live, he}/100)\\cdot V \\\\ h_{wo} &amp;=&amp; h_{li} = h_{def} \\end{eqnarray}\\] where \\(h_{def} = 18608 kJ\\cdot kg^{-1} = 8000 Btu\\cdot lb^{-1}\\) is the default low heat content value for herbs, woody and litter strata, and \\(V = 2596 kJ\\cdot kg^{-1} = 1116 Btu\\cdot lb\\) is the latent heat of vaporisation of water. The default low heat of contents for the canopy and shrub strata (\\(h_{ca, def}\\) and \\(h_{sh, def}\\)) are calculated as a weighted average across cohorts: \\[\\begin{eqnarray} h_{ca, def} &amp;=&amp; \\frac{\\sum_{i}{w_{i,ca} \\cdot h(SP_i)}}{\\sum_{i}{w_{i,ca}}}\\\\ h_{sh, def} &amp;=&amp; \\frac{\\sum_{i}{w_{i,sh} \\cdot h(SP_i)}}{\\sum_{i}{w_{i,sh}}} \\end{eqnarray}\\] where \\(h(SP_i)\\) is a species-specific low heat content value. 24.3.6.9 Flammability index (\\(\\eta_{F}\\)) Flammability index (\\(\\eta_{F} \\in [1, 2]\\)) is a multiplier of reaction efficiency based on expert opinion applied to species that burn with more intensity than others, resulting from differences in fuel chemistry. Flammability index of canopy and shrub strata are the result of averaging the flammability of cohorts using loading as weights: \\[\\begin{eqnarray} \\eta_{F, ca} &amp;= \\frac{\\sum_{i}{w_{i,ca} \\cdot \\eta_{F}(SP_i)}}{\\sum_{i}{w_{i,ca}}}\\\\ \\eta_{F, sh} &amp;= \\frac{\\sum_{i}{w_{i,sh} \\cdot \\eta_{F}(SP_i)}}{\\sum_{i}{w_{i,sh}}} \\end{eqnarray}\\] where \\(\\eta_{F}(SP_i)\\) is a species-specific flammability value. Flamability index for other strata are set to default values: \\[\\begin{eqnarray} \\eta_{F, he} &amp;= \\eta_{F, li} = 1.5 \\\\ \\eta_{F, wo} &amp;= 1.0 \\end{eqnarray}\\] 24.3.6.10 Reactive volume (\\(RV\\)) The volume per surface unit (\\(m^3\\cdot m^{-2}\\)) that would be involved in flaming combustion. \\[\\begin{eqnarray} RV_{sh} &amp;=&amp; w_{shrub}/\\rho_{p, sh}\\\\ RV_{he} &amp;=&amp; w_{he}/\\rho_{p, he}\\\\ RV_{wo} &amp;=&amp; w_{wo}/\\rho_{p, wo}\\\\ RV_{li} &amp;=&amp; \\min(w_{li}, w_{\\max,li})/\\rho_{p, li} \\end{eqnarray}\\] In the case of litter, the flame loading is limited by \\(w_{\\max,li}\\), the maximum loading that would be consumed in the flaming stage of combustion, calculated as a weighted average of litter types: \\[\\begin{equation} w_{\\max,li} = \\frac{\\sum_{k}{ w_{\\max,k}\\cdot w_{li,k}}}{\\sum_{k} {\\cdot w_{li,k}}} \\end{equation}\\] where \\(k\\) indicates litter type. The maximum combustion loadings for litter types are [Prichard et al. (2013); Table 2]: \\[\\begin{eqnarray} w_{\\max,shortneedlepine} &amp;=&amp; w_{\\max,otherconifer} = 0.3248 kg \\cdot m^{-2} = 2900 lb\\cdot ac^{-1} \\\\ w_{\\max,longneedlepine} &amp;=&amp; 0.6496 kg \\cdot m^{-2}= 5800 lb\\cdot ac^{-1} \\\\ w_{\\max,hardwood} &amp;=&amp; 0.3472 kg \\cdot m^{-2}= 3100 lb\\cdot ac^{-1} \\end{eqnarray}\\] 24.3.7 Unit conversion of fuel characteristics FCCS calculations employ empirical equations that were derived in British units system. Hence, all the fuel characteristics and model inputs that are in metric units have to be translated into British units prior to fire behaviour calculations: Loading: \\(1 kg\\cdot m^{-2} = 0.204918 lb\\cdot ft^{-2}\\) Depths: \\(1m = 3.2808399ft\\) Particle density and bulk density: \\(1 kg\\cdot m^{-3} = 0.06242796 lb\\cdot ft^{-3}\\) Particle volume and reactive volume: \\(1 m^{3}\\cdot m^{-2} = 3.2808399 ft^{3}\\cdot ft^{-2}\\) Surface-to-area-volume ratio: \\(1 m^{2}\\cdot m^{-3} = 0.3048 ft^{2}\\cdot ft^{-3}\\) Heat content: \\(1kJ\\cdot kg^{-1} = 0.429922614 Btu\\cdot lb^{-1}\\) Wind speed: \\(1 m \\cdot s^{-1} = 2.23693629 mph\\) 24.4 Surface fire behavior 24.4.1 Surface rate of spread (\\(R\\)) In the Rothermel (1972) model, surface rate of spread is defined as the ratio of heat source (i.e. the surface fire energy propagated to unburned fuels) to surface fuel heat sink (i.e. the energy required to preheat fuels). Owing to the difference in packing ratio between the litter stratum and the other surface fuels, litter-dominated fuelbeds may have substantially different spread rates than other fuelbeds. For this reason, in FCCS the rate of spread (in \\(ft \\cdot min^{-1}\\)) is calculated separately for litter stratum and the final rate of spread is the maximum of the rate of spread of all surface fuels and that of the litter stratum. Rate of spread is also limited to a maximum based in windspeed and slope. \\[\\begin{equation} R = \\min(WindSlopeCap, \\max(R_{surf}, R_{litter})) \\end{equation}\\] The surface fuel and litter fuel rates of spread are given by the application of Rothermel’s (1972) equation to each case: \\[\\begin{eqnarray} R_{surf} &amp;= \\frac{I_{R,surf} \\cdot \\xi_{surf}\\cdot (1 + \\phi_W + \\phi_S)}{q_{surf}}\\\\ R_{litter} &amp;= \\frac{I_{R,litter} \\cdot \\xi_{litter}\\cdot (1 + \\phi_W + \\phi_S)}{q_{litter}} \\end{eqnarray}\\] where \\(I_{R,surf}\\) and \\(I_{R,litter}\\) are the reaction intensities (in \\(Btu \\cdot ft^{-2} \\cdot min^{-1}\\)), \\(\\xi_{surf}\\) and \\(\\xi_{litter}\\) are the propagating flux ratios, \\(q_{surf}\\) and \\(q_{litter}\\) are the heat sinks. Finally, \\(\\phi_W\\) and \\(\\phi_S\\) are the slope and wind modifiers. All of them are explained in the following sections. The maximum rate of spread calculated from windspeed and slope is: \\[\\begin{equation} WindSlopeCap = 88 \\cdot U \\cdot (1 + \\phi_S) \\end{equation}\\] where \\(U\\) is windspeed (in \\(mph\\)) and \\(88\\) is a conversion factor (from \\(mph\\) to \\(ft/min\\)). 24.4.1.1 Reaction intensity (\\(I_R\\)) Reaction intensity of surface fuels (in \\(Btu \\cdot ft^{-2} \\cdot min^{-1}\\)) is calculated as the sum of component reaction intensities of the four different surface fuel strata, whereas the reaction intensity in the litter uses this strata alone: \\[\\begin{eqnarray} I_{R,surf} &amp;= I_{R, sh} + I_{R, he}+ I_{R, wo}+I_{R, li}\\\\ I_{R,litter} &amp;= I_{R, li} \\tag{24.1} \\end{eqnarray}\\] Each component reaction intensity is calculated using: \\[\\begin{eqnarray} I_{R,sh} &amp;= (\\eta_{\\beta_{allsurf}&#39;})^{A_{sh}}\\cdot \\Gamma_{\\max, sh}&#39;\\cdot w_{sh} \\cdot h_{sh} \\cdot \\eta_{M,sh}\\cdot \\eta_{K,sh}\\cdot \\eta_{F,sh}\\\\ I_{R,he} &amp;= (\\eta_{\\beta_{lowsurf}&#39;})^{A_{he}}\\cdot \\Gamma_{\\max, he}&#39;\\cdot w_{he} \\cdot h_{he} \\cdot \\eta_{M,he}\\cdot \\eta_{K,he}\\cdot \\eta_{F,he}\\\\ I_{R,wo} &amp;= (\\eta_{\\beta_{lowsurf}&#39;})^{A_{wo}}\\cdot \\Gamma_{\\max, wo}&#39;\\cdot w_{wo} \\cdot h_{wo} \\cdot \\eta_{M,wo}\\cdot \\eta_{K,wo}\\cdot \\eta_{F,wo}\\\\ I_{R,li} &amp;= (\\eta_{\\beta_{litter}&#39;})^{A_{li}}\\cdot \\Gamma_{\\max, li}&#39;\\cdot w_{li} \\cdot h_{li} \\cdot \\eta_{M,li}\\cdot \\eta_{K,li}\\cdot \\eta_{F,li} \\tag{24.2} \\end{eqnarray}\\] In the above equations, \\(w_{sh}\\), \\(w_{he}\\), \\(w_{wo}\\) and \\(w_{li}\\) are the loadings of the corresponding shrub, herb, woody and litter strata, respectively. These quantities were defined in previous sections, as were the corresponding low heat fuel contents (\\(h_{sh}\\), \\(h_{he}\\), \\(h_{wo}\\) and \\(h_{li}\\)) and flammability indices (\\(\\eta_{F,sh}\\), \\(\\eta_{F,he}\\), \\(\\eta_{F,wo}\\) and \\(\\eta_{F,li}\\)). Mineral damping coefficient (\\(\\eta_{K}\\); dimensionless) is set to the same value (corresponding to the conventional value for silica-free ash content of 1%) for all strata: \\[\\begin{equation} \\eta_{K,sh} = \\eta_{K,he} =\\eta_{K,wo} = \\eta_{K,li} = 0.42 \\end{equation}\\] In the following subsections, we describe the calculation of the remaining variables for each stratum: reaction efficiency (\\(\\eta_{\\beta&#39;}\\)), Rothermel’s \\(A\\) parameter, maximum reaction velocity (\\(\\Gamma_{\\max}&#39;\\)) and moisture damping coefficient (\\(\\eta_{M}\\)). 24.4.1.2 Reaction efficiency (\\(\\eta_{\\beta&#39;}\\)) Reaction efficiency (between 0 and 1) represents the damping effect of inefficiently packed fuels in the reaction intensity. Because shrubs rarely burn without lower surface fuels, the reaction efficiency of the surface layer (\\(\\eta_{\\beta_{allsurf}&#39;}\\)) includes shrubs, herbs and woody fuels. Low surface fuels may carry flames without involving shrubs, so are assumed to burn with a single reaction efficiency (\\(\\eta_{\\beta_{lowsurf}&#39;}\\)) determined by the combined characteristics of herb and woody fuel strata. Both are calculated similarly: \\[\\begin{eqnarray} \\eta_{\\beta_{allsurf}&#39;} &amp;= \\beta_{allsurf}&#39;\\cdot e^{1- \\beta_{allsurf}&#39;}\\\\ \\eta_{\\beta_{lowsurf}&#39;} &amp;=\\beta_{lowsurf}&#39;\\cdot e^{1- \\beta_{lowsurf}&#39;} \\tag{24.3} \\end{eqnarray}\\] where \\(\\beta_{allsurf}&#39;\\) and \\(\\beta_{lowsurf}&#39;\\) are the relative packing ratios corresponding to all surface fuels and low surface fuels, respectively. Relative packing ratios (\\(\\beta&#39;\\); dimensionless) are defined as the ratio of optimum depth (\\(\\delta_{opt}\\)) to effective depth (\\(\\delta_{eff}\\)): \\[\\begin{eqnarray} \\beta_{allsurf}&#39; &amp;= \\delta_{opt, allsurf} / \\delta_{eff, allsurf} \\\\ \\beta_{lowsurf}&#39; &amp;= \\delta_{opt, lowsurf} / \\delta_{eff, lowsurf} \\tag{24.4} \\end{eqnarray}\\] Optimum depth is the depth (in \\(ft\\)) at which fuels are optimally packed for maximum reaction intensity: \\[\\begin{eqnarray} \\delta_{opt, allsurf} &amp;= PV_{allsurf} +OptAirVol_{allsurf}\\\\ \\delta_{opt, lowsurf} &amp;= PV_{lowsurf} +OptAirVol_{lowsurf} \\end{eqnarray}\\] where \\(PV_{allsurf}\\) and \\(PV_{lowsurf}\\) are the volume of particles (in \\(ft^3 \\cdot ft^{-2}\\)) for all surface fuels and low surface fuels, respectively, given by: \\[\\begin{eqnarray} PV_{allsurf} &amp;= PV_{sh} + PV_{he} + PV_{wo}\\\\ PV_{lowsurf} &amp;= PV_{he} + PV_{wo} \\end{eqnarray}\\] \\(OptAirVol_{allsurf}\\) and \\(OptAirVol_{allsurf}\\) are the volume of air space (in \\(ft^3 \\cdot ft^{-2}\\)) between fuel particles that would result in maximum reaction intensity: \\[\\begin{eqnarray} OptAirVol_{allsurf} &amp;= 45\\cdot (RV_{sh} + RV_{he} + RV_{wo})\\\\ OptAirVol_{lowsurf} &amp;= 45\\cdot (RV_{he} + RV_{wo}) \\end{eqnarray}\\] On the other hand, effective depths of all surface fuels and low surface fuels (in \\(ft\\)) are calculated as their depth, weighted by the reactive volume (and percentage cover in FCCS): \\[\\begin{eqnarray} \\delta_{eff, allsurf} &amp;= \\frac{(RV_{sh}\\cdot \\delta_{sh}) +(RV_{he}\\cdot \\delta_{he}) + (RV_{wo}\\cdot \\delta_{wo})}{RV_{sh} +RV_{he}+RV_{wo}}\\\\ \\delta_{eff, lowsurf} &amp;= \\frac{(RV_{he}\\cdot \\delta_{he}) + (RV_{wo}\\cdot \\delta_{wo})}{RV_{he}+RV_{wo}} \\end{eqnarray}\\] Reaction efficiency of the litter stratum is determined separately from the other strata. It is defined as the average of reaction efficiency across litter types, calculated using loadings as weights: \\[\\begin{equation} \\eta_{\\beta_{litter}&#39;} = \\frac{\\sum_{k} {\\eta_{\\beta_{k}&#39;}\\cdot w_{li,k}}}{\\sum_{k} {\\cdot w_{li,k}}} \\end{equation}\\] where \\(k\\) indicates litter type. The reaction efficiencies of litter types are [Prichard et al. (2013); Table 2]: \\[\\begin{eqnarray} \\eta_{\\beta_{shortneedlepine}&#39;} &amp;= \\eta_{\\beta_{otherconifer}&#39;} = 0.18\\\\ \\eta_{\\beta_{longneedlepine}&#39;} &amp;= 0.27\\\\ \\eta_{\\beta_{hardwood}&#39;} &amp;= 0.11 \\end{eqnarray}\\] 24.4.1.3 Rothermel’s A A dimensionless coefficient that modifies reaction’s efficiency (eq. (24.3)) to account for lower sensitivity of reaction efficiency to relative packing ratio in flash fuels: \\[\\begin{eqnarray} A_{wo} &amp;= A_{li} = 1.0\\\\ A_{sh} &amp;= 133\\cdot \\sigma_{sh}^{-0.7913}\\\\ A_{he} &amp;= 133\\cdot \\sigma_{he}^{-0.7913} \\end{eqnarray}\\] where \\(\\sigma_{sh}\\) and \\(\\sigma_{he}\\) have to be expressed in \\(ft^2\\cdot ft^{-3}\\); Values \\(133\\) and \\(-0.7913\\) are empirical constants (Rothermel 1972). 24.4.1.4 Maximum reaction velocity (\\(\\Gamma_{\\max}&#39;\\)) The reaction velocity (in \\(min^{-1}\\)) that would exist at optimum fuelbed depth with no fuel moisture or mineral content. \\[\\begin{eqnarray} \\Gamma_{\\max, sh}&#39; &amp;= 9.495 \\cdot \\frac{\\sigma_{sh}}{\\sigma_{wo}}\\\\ \\Gamma_{\\max, he}&#39; &amp;= 9.495 \\cdot \\frac{\\sigma_{he}}{\\sigma_{wo}}\\\\ \\Gamma_{\\max, wo}&#39; &amp;= 9.495 \\\\ \\Gamma_{\\max, li}&#39; &amp;= 15 \\tag{24.5} \\end{eqnarray}\\] where \\(\\sigma_{wo} = 488 ft^2\\cdot ft^{-3} = 1601.05 m^2\\cdot m^{-3}\\) is the surface-to-area-volume ratio typical of small woody fuels. In Prichard et al. (2013) \\(\\sigma_{sh}\\) is defined as the average of shrub foliar surface-to-area-volume ratio and \\(\\sigma_{wo}\\), but in our case \\(\\sigma_(SP_i)\\) for each species includes both leaves and small branches. Eq. (24.5) represent a significant departure from Rothermel (1972) maximum reaction velocity, and are also different from Sandberg, Riccardi, and Schaaf (2007). 24.4.1.5 Moisture damping coefficient (\\(\\eta_M\\)) Moisture damping reduces reaction velocity and hence reaction intensity (eq. (24.1)). It is calculated for each stratum using the following regression equations: \\[\\begin{eqnarray} \\eta_{M, live, sh} &amp;= \\left[1-2.59\\cdot \\left(\\frac{M_{live, sh}}{X_{live, sh}}\\right)\\right] +\\left[ 5.11\\cdot \\left(\\frac{M_{live, sh}}{X_{live, sh}}\\right)^2\\right]-\\left[ 3.52\\cdot \\left(\\frac{M_{live, sh}}{X_{live, sh}}\\right)^3\\right] \\\\ \\eta_{M, dead, sh} &amp;= \\left[1-2.59\\cdot \\left(\\frac{M_{dead, sh}}{X_{dead, sh}}\\right)\\right] +\\left[ 5.11\\cdot \\left(\\frac{M_{dead, sh}}{X_{dead, sh}}\\right)^2\\right]-\\left[ 3.52\\cdot \\left(\\frac{M_{dead, sh}}{X_{dead, sh}}\\right)^3\\right] \\\\ \\eta_{M, live, he} &amp;= \\left[1-2.59\\cdot \\left(\\frac{M_{live, he}}{X_{live, he}}\\right)\\right] +\\left[ 5.11\\cdot \\left(\\frac{M_{live, he}}{X_{live, he}}\\right)^2\\right]-\\left[ 3.52\\cdot \\left(\\frac{M_{live, he}}{X_{live, he}}\\right)^3\\right] \\\\ \\eta_{M, dead, he} &amp;= \\left[1-2.59\\cdot \\left(\\frac{M_{dead, he}}{X_{dead, he}}\\right)\\right] +\\left[ 5.11\\cdot \\left(\\frac{M_{dead, he}}{X_{dead, he}}\\right)^2\\right]-\\left[ 3.52\\cdot \\left(\\frac{M_{dead, he}}{X_{dead, he}}\\right)^3\\right] \\\\ \\eta_{M, wo} &amp;= \\left[1-2.59\\cdot \\left(\\frac{M_{wo}}{X_{wo}}\\right)\\right] +\\left[ 5.11\\cdot \\left(\\frac{M_{wo}}{X_{wo}}\\right)^2\\right]-\\left[ 3.52\\cdot \\left(\\frac{M_{wo}}{X_{wo}}\\right)^3\\right] \\\\ \\eta_{M, li} &amp;= \\left[1-2.59\\cdot \\left(\\frac{M_{li}}{X_{li}}\\right)\\right] +\\left[ 5.11\\cdot \\left(\\frac{M_{li}}{X_{li}}\\right)^2\\right]-\\left[ 3.52\\cdot \\left(\\frac{M_{li}}{X_{li}}\\right)^3\\right] \\tag{24.6} \\end{eqnarray}\\] where moisture contents of extinctions were arbitrarily set to \\(X_{dead, sh} = X_{dead, he} X_{wo} = X_{li} = 25\\), \\(X_{live, sh} = 180\\) and \\(X_{live, he} = 120\\) in Sandberg et al. (2007). As it can be seen in the equations above, in the case of shrub and herb strata, moisture damping of live and dead fuels are differentiated. Average values are found after accounting for the proportion of live and dead material: \\[\\begin{eqnarray} \\eta_{M, sh} &amp;= \\eta_{M, live, sh} \\cdot (1 - P_{dead, sh})+ \\eta_{M, dead, sh} \\cdot P_{dead, sh}\\\\ \\eta_{M, he} &amp;= \\eta_{M, live, he} \\cdot (1 - P_{dead, he})+ \\eta_{M, dead, he} \\cdot P_{dead, he} \\end{eqnarray}\\] 24.4.1.6 Propagating flux ratio (\\(\\xi\\)) The propagating flux ratio (dimensionless) is the proportion of the reaction intensity (eq. (24.1)) that contributes to the forward rate of spread, estimated using an empirical regression: \\[\\begin{eqnarray} \\xi_{surf} &amp;= 0.03 + 2.5 \\cdot \\min \\left[0.06, \\frac{RV_{sh}+RV_{he}+RV_{wo}+RV_{li}}{\\delta_{surfheatsink}} \\right]\\\\ \\xi_{litter} &amp;= 0.03 + 2.5 \\cdot \\min \\left[0.06, \\frac{RV_{li}}{\\delta_{li}} \\right] \\end{eqnarray}\\] where \\(\\delta_{surfheatsink}\\) is the depth of surface heat sink (in \\(ft\\)), which in Prichard et al. (2013) is calculated as the sum of strata depths weighted by their relative cover. In our case we weighted stratum depths as in the calculation of effective depth (\\(\\delta_{eff, allsurf}\\)), but considering all four strata: \\[\\begin{equation} \\delta_{surfheatsink} = \\frac{(RV_{sh}\\cdot \\delta_{sh}) +(RV_{he}\\cdot \\delta_{he}) + (RV_{wo}\\cdot \\delta_{wo})+ (RV_{li}\\cdot \\delta_{li})}{RV_{sh} +RV_{he}+RV_{wo}+RV_{li}} \\end{equation}\\] 24.4.2 Heat sink (\\(q\\)) Like reaction intensity, the heat sink term (in \\(Btu \\cdot ft^{-3}\\)) of the rate of spread equation is calculated in FCCS for each fuel stratum and then summed: \\[\\begin{eqnarray} q_{surf} &amp;= q_{sh}+q_{he}+q_{wo}+q_{li}\\\\ q_{litter} &amp;= q_{li} \\tag{24.7} \\end{eqnarray}\\] where the heat sink for each stratum is: \\[\\begin{eqnarray} q_{sh} &amp;= \\eta_{\\beta_{surf}&#39;}\\cdot \\frac{RV_{sh}\\cdot \\rho_{p,sh}\\cdot Qig_{sh}}{\\min(\\delta_{sh}, 1ft)}\\\\ q_{he} &amp;= \\eta_{\\beta_{lowsurf}&#39;}\\cdot \\frac{RV_{he}\\cdot \\rho_{p,he}\\cdot Qig_{he}}{\\min(\\delta_{he}, 1ft)}\\\\ q_{wo} &amp;= \\eta_{\\beta_{lowsurf}&#39;}\\cdot \\frac{RV_{wo}\\cdot \\rho_{p,wo}\\cdot Qig_{wo}}{\\min(\\delta_{wo}, 1ft)}\\\\ q_{li} &amp;= \\eta_{\\beta_{li}&#39;}\\cdot \\frac{RV_{li}\\cdot \\rho_{p,li}\\cdot Qig_{li}}{\\min(\\delta_{li}, 1ft)} \\tag{24.8} \\end{eqnarray}\\] Where \\(\\rho_{p,sh}\\), \\(\\rho_{p,he}\\), \\(\\rho_{p,wo}\\) and \\(\\rho_{p,li}\\) are the particle densities (in \\(lb\\cdot ft^{-3}\\)) of each fuel stratum; and \\(RV_{sh}\\), \\(RV_{he}\\), \\(RV_{wo}\\), and \\(RV_{li}\\) are the reactive volumes of each fuel stratum. Unlike in Sandberg et al. (2007), the calculated heat sink is corrected by the reaction-efficiency term (\\(\\eta_{\\beta_{surf}&#39;}\\), \\(\\eta_{\\beta_{lowsurf}&#39;}\\) or \\(\\eta_{\\beta_{li}&#39;}\\)), and the effective depth of each stratum included is limited to 1ft, based on the assumption that it is not necessary to preheat more than one 1ft of depth within a stratum to achieve ignition. Heat of pre-ignition (\\(Qig\\); in \\(Btu \\cdot lb^{-1}\\)) is the amount of heat required to ignite \\(1 lb\\) of fuel. It is calculated by stratum as a weighted average of live and dead fuels in shrubs and herbs. \\[\\begin{eqnarray} Qig_{sh} &amp;= Qig_{live, sh} \\cdot (1 - P_{dead, sh})+ Qig_{dead, sh} \\cdot P_{dead, sh}\\\\ Qig_{he} &amp;= Qig_{live, he} \\cdot (1 - P_{dead, he})+ Qig_{dead, he} \\cdot P_{dead, he} \\end{eqnarray}\\] Whereas \\(Qig_{live, sh}\\) and \\(Qig_{live, he}\\) are corrected by fuel moisture, \\(Qig_{dead, sh}\\), \\(Qig_{dead, he}\\) and the other strata (\\(Qig_{wo}\\) and \\(Qig_{li}\\)) are assumed a constant value: \\[\\begin{eqnarray} Qig_{live, sh} &amp;= 250 + (V\\cdot (M_{live, sh}/100))\\\\ Qig_{live, he} &amp;= 250 + (V\\cdot (M_{live, he}/100))\\\\ Qig_{dead, sh} &amp;= Qig_{dead, he} = Qig_{wo} = Qig_{li} = 250 \\end{eqnarray}\\] where \\(250 Btu/lb\\) is the heat of preignition of dry cellulose and \\(V = 1116 Btu/lb\\) is the latent heat of vaporization. Wind and slope coefficients modify the heat source term of the rate of spread equation. Owing to differences in fuel characteristics and boundary conditions between the litter stratum and other surface fuel strata, in FCCS wind and slope coefficients are calculated separately for the litter stratum. The wind and slope coefficients terms in the rate fo spread equation are a weighted average of litter and surface wind and slope coefficients using the relative contribution to reaction intensity as weights: \\[\\begin{eqnarray} \\phi_W &amp;= (1 - I_{R, litter}/I_{R, surf})\\cdot \\phi_{W, surf} + (I_{R, litter}/I_{R, surf})\\cdot \\phi_{W, litter}\\\\ \\phi_S &amp;= (1 - I_{R, litter}/I_{R, surf})\\cdot \\phi_{S, surf} + (I_{R, litter}/I_{R, surf})\\cdot \\phi_{S, litter} \\end{eqnarray}\\] Wind coefficients are calculated using: \\[\\begin{eqnarray} \\phi_{W, surf} &amp;= 8.8 \\cdot \\beta_{surf}&#39;^{-E}\\cdot (U/BMU)^B\\\\ \\phi_{W, litter} &amp;= 8.8 \\cdot \\beta_{litter}^{-E}\\cdot (U/BMU)^B \\end{eqnarray}\\] where \\(U\\) is the input midflame windspeed (in \\(ft\\cdot min^{-1}\\)), \\(BMU=352 ft\\cdot min^{-1}\\) is the benchmark midflame windspeed, \\(\\beta_{surf}&#39;\\) is the relative packing ratio (eq. ), \\(B\\) is the exponential response of wind coefficient to windspeed (\\(B=1.2\\) in Sandberg, Riccardi, and Schaaf (2007)), and \\(E\\) is the exponential term representing the mild effect of large fuels in reducing the accelerating effect of wind on fire spread by attenuating wind flow, given by: \\[\\begin{equation} E = 0.55 - 0.2 \\cdot \\frac{FAI_{sh}+FAI_{he}}{FAI_{sh}+FAI_{he}+FAI_{wo}} \\end{equation}\\] \\(E\\) is assumed to be the same for both all surface fuels and litter fuels. Slope coefficients are calculated using the empirical equation of Rothermel (1972), applied to all surface fuels and litter fuels: \\[\\begin{eqnarray} \\phi_{S, surf} &amp;= 5.275 \\cdot (S/100)^{2}\\cdot (\\beta_{sh}+\\beta_{he}+\\beta_{wo})^{-0.3}\\\\ \\phi_{S, litter} &amp;= 5.275 \\cdot (S/100)^{2}\\cdot \\beta_{li}^{-0.3} \\end{eqnarray}\\] where \\(S\\) is the slope (in percent) and \\(\\beta\\) is the packing ratio (not relative!) of fuels. 24.4.3 Fireline intensity (\\(I_B\\)) and flame length (\\(FL\\)) Byram’s fireline intensity (\\(I_B\\)) is the rate of heat release per unit of fire edge (in \\(Btu\\cdot ft^{-1} \\cdot min^{-1}\\)), and in FCCS is calculated as (F. A. Albini 1976): \\[\\begin{equation} I_B = I_{R,surf} \\cdot (R \\cdot t_R) \\end{equation}\\] where \\(I_{R,surf}\\) is the surface reaction intensity, \\(R\\) is the rate of spread and \\(t_R\\) is the flame residence time, which is defined as the time (in \\(min\\)) fuels contribute to propagating flux and is estimated as F. A. Albini (1976): \\[\\begin{equation} t_R = 192 \\cdot \\frac{(I_{R,sh}\\cdot RT_{sh})+(I_{R,he}\\cdot RT_{he})+(I_{R,wo}\\cdot RT_{wo})+(I_{R,li}\\cdot RT_{li})}{I_{R,surf}} \\end{equation}\\] where \\(RT\\) is the reaction thickness, the approximate thickness (in \\(ft\\)) of a fuel element shell that contributes to reaction intensity. In FCCS, reaction thickness is estimated as \\(RT = 0.0028 ft\\) for thermally thick fuel elements (Sandberg, Riccardi, and Schaaf 2007). When the diameter of a fuel element is less than twice the reaction thickness, the entire fuel element contributes to reaction intensity. Reaction thickness values for each stratum are given by: \\[\\begin{eqnarray} RT_{sh} &amp;= \\min(0.0028, 2/\\sigma_{sh})\\\\ RT_{he} &amp;= \\min(0.0028, 2/\\sigma_{he})\\\\ RT_{wo} &amp;= \\min(0.0028, 2/\\sigma_{wo})\\\\ RT_{li} &amp;= \\min(0.0028, 2/\\sigma_{li}) \\end{eqnarray}\\] Flame length is defined as the distance (in \\(ft\\)) between the flame tip and the midpoint of the flame depth at the base of the flame, and is calculated (Byram 1959): \\[\\begin{equation} FL = 0.45 \\cdot (I_B/60)^{0.46} \\end{equation}\\] where 60.0 is a factor to convert from \\(Btu\\cdot ft^{-1} \\cdot min^{-1}\\) to \\(Btu\\cdot ft^{-1} \\cdot s^{-1}\\). 24.5 Crown fire behavior Crown fire behavior is difficult to model and actual rates of spread are not possible to predict. Here we mainly follow the approach given in FCCS (Prichard et al. 2013), although in our case the canopy is not subdivided into layers (overstory, midstory and understory). The rate of spread of crown fires is estimated by using a modification of Rothermel’s equation: \\[\\begin{equation} R_{crown} = \\frac{I_{R,crown} \\cdot \\xi_{crown}\\cdot WAF}{q_{crown}} = \\frac{(I_{R,surf}+I_{R,ca}) \\cdot \\xi_{crown}\\cdot WAF}{q_{surf}+q_{ca}} \\end{equation}\\] where \\(I_{R,surf}\\) is the surface reaction intensity, \\(I_{R,ca}\\) is the canopy reaction intensity, \\(\\xi_{crown}\\) is the propagating flux ratio in the canopy, \\(q_{surf}\\) is the surface heat sink and \\(q_{ca}\\) is the canopy heat sink. Note that reaction intensities and heat sinks of canopy and surface fuels are added for the application of Rothermel’s equation. Other modifications include the exclusion of slope effects and the consideration of wind effects through a wind adjusment factor (WAF). Crown propagating flux ratio (\\(\\xi_{crown}\\); in \\(Btu \\cdot ft^{-3}\\)) represents the proportion of the crown reaction intensity that contributes to crown fire’s forward rate of spread: \\[\\begin{equation} \\xi_{crown} = 1 - e^{\\left(-\\frac{FAI_{ca}}{4 \\cdot \\delta_{ca}}\\right)} \\end{equation}\\] where \\(FAI_{ca}\\) is the fuel area index of the canopy, and \\(\\delta_{ca}\\) is the canopy depth (in \\(ft\\)). Wind adjustment factor (\\(WAF\\)) is defined as: \\[\\begin{equation} WAF = \\frac{U/\\sqrt{U^2+VS^2}}{BMU/\\sqrt{BMU^2+VS^2}} \\end{equation}\\] where \\(U\\) is the input (midflame) windspeed (in \\(ft \\cdot min^{-1}\\)), \\(BMU = 352 ft \\cdot min^{-1}\\) is the benchmark windspeed and \\(VS = 900 ft \\cdot min^{-1}\\) is the vertical stack velocity. The following two subsections detail the calculation of canopy reaction intensity (\\(I_{R, ca}\\)) and canopy heat sink (\\(q_{ca}\\)). 24.5.1 Canopy reaction intensity (\\(I_{R, ca}\\)) Reaction intensity of canopy fuels (in \\(Btu \\cdot ft^{-2} \\cdot min^{-1}\\)) is estimated as: \\[\\begin{equation} I_{R,ca} = (\\eta_{\\beta_{ca}&#39;})^{A_{ca}}\\cdot \\Gamma_{\\max, ca}&#39;\\cdot w_{ca} \\cdot h_{ca} \\cdot \\eta_{M,ca}\\cdot \\eta_{K,ca}\\cdot \\eta_{F,ca} \\end{equation}\\] where \\(A_{ca} = 133\\cdot \\sigma_{ca}^{-0.7913}\\) is Rothermel’s A coefficient, \\(\\Gamma_{\\max, ca}&#39; = 15 min^{-1}\\) is the maximum reaction velocity of the canopy, \\(w_{ca}\\) is the loading of canopy fuels (in \\(lb \\cdot ft^{-2}\\)), \\(h_{ca}\\) is the heat content of the canopy fuels (in \\(Btu \\cdot lb^{-1}\\)), \\(\\eta_{K,ca}=0.42\\) is the mineral damping coefficient and \\(\\eta_{F,ca}\\) is the flammability index of the canopy stratum. Moisture damping coefficient for the canopy (\\(\\eta_{M,ca}\\)) is estimated as done for shrub and herb strata: \\[\\begin{eqnarray} \\eta_{M, live, ca} &amp;= \\left[1-2.59\\cdot \\left(\\frac{M_{live, ca}}{X_{live, ca}}\\right)\\right] +\\left[ 5.11\\cdot \\left(\\frac{M_{live, ca}}{X_{live, ca}}\\right)^2\\right]-\\left[ 3.52\\cdot \\left(\\frac{M_{live, ca}}{X_{live, ca}}\\right)^3\\right] \\\\ \\eta_{M, dead, ca} &amp;= \\left[1-2.59\\cdot \\left(\\frac{M_{dead, ca}}{X_{dead, ca}}\\right)\\right] +\\left[ 5.11\\cdot \\left(\\frac{M_{dead, ca}}{X_{dead, ca}}\\right)^2\\right]-\\left[ 3.52\\cdot \\left(\\frac{M_{dead, ca}}{X_{dead, ca}}\\right)^3\\right] \\\\ \\eta_{M, ca} &amp;= \\eta_{M, live, ca} \\cdot (1 - P_{dead, ca})+ \\eta_{M, dead, ca} \\cdot P_{dead, ca} \\end{eqnarray}\\] where moisture contents of extinctions were arbitrarily set to \\(X_{dead, ca} = 25\\) and \\(X_{live, ca} = 180\\). The reaction efficiency in the canopy (\\(\\eta_{\\beta_{canopy}&#39;}\\)) represents the damping effect of inefficiently packed fuels in the canopy: \\[\\begin{equation} \\eta_{\\beta_{canopy}&#39;} =\\beta_{canopy}&#39;\\cdot e^{1- \\beta_{canopy}&#39;} \\end{equation}\\] where \\(\\beta_{canopy}&#39;\\) is the relative packing ratio in the canopy: \\[\\begin{equation} \\beta_{canopy}&#39; = \\delta_{opt, canopy} / \\delta_{eff, canopy} \\end{equation}\\] where the effective depth is \\(\\delta_{eff, canopy}=\\delta_{ca}\\) (in \\(ft\\)) and the optimum canopy depth is calculated using: \\[\\begin{equation} \\delta_{opt, canopy} = 0.4 \\cdot FAI_{ca} + \\beta_{ca} \\cdot (\\delta_{ca} \\cdot C_{ca}/100) \\end{equation}\\] where \\(C_{ca}\\) is the percent cover of the canopy, \\(FAI_{ca}\\) is the fuel area index of the canopy, \\(\\beta_{ca}\\) is the packing ratio of canopy fuels and \\(\\delta_{ca}\\) is the canopy depth (in \\(ft\\)). 24.5.2 Canopy heat sink (\\(q_{ca}\\)) Canopy heat sink (in \\(Btu \\cdot ft^{-3}\\)) is estimated using: \\[\\begin{equation} q_{ca} = \\frac{0.5 \\cdot FAI_{ca} \\cdot RT_{ca} \\cdot \\rho_{p, ca} \\cdot Qig_{ca}}{(C_{ca}/100)\\cdot \\delta_{ca}} \\end{equation}\\] where \\(C_{ca}\\) is the percent cover of the canopy, \\(FAI_{ca}\\) is the fuel area index of the canopy, \\(RT_{ca} = \\min(0.0028, 2/\\sigma_{ca})\\) is the reaction thickness of the canopy stratum (in \\(ft\\)), \\(\\rho_{p, ca}\\) is the particle density of the canopy (in \\(lb \\cdot ft^{-3}\\)), \\(\\delta_{ca}\\) is the canopy depth (in \\(ft\\)) and \\(Qig_{ca}\\) is the heat of pre-ignition of the canopy stratum (in \\(Btu \\cdot lb^{-1}\\)), which is calculated as a weighted average of live and dead fuels: \\[\\begin{eqnarray} Qig_{live, ca} &amp;= 250 + (V\\cdot (M_{live, ca}/100))\\\\ Qig_{dead, ca} &amp;= 250\\\\ Qig_{ca} &amp;= Qig_{live, ca} \\cdot (1 - P_{dead, ca})+ Qig_{dead, ca} \\cdot P_{dead, ca} \\end{eqnarray}\\] where \\(250 Btu/lb\\) is the heat of preignition of dry cellulose and \\(V = 1116 Btu/lb\\) is the latent heat of vaporization of water. 24.5.3 Fireline intensity (\\(I_{B,crown}\\)) and flame length (\\(FL_{crown}\\)) Byram’s fireline intensity for crown fires is estimated using: \\[\\begin{equation} I_{B,crown} = I_{R,crown} \\cdot (R_{crown} \\cdot t_{R,crown}) \\end{equation}\\] where \\(I_{R,crown}\\) is the crown reaction intensity (i.e. the sum of canopy and surface reaction intensities), \\(R_{crown}\\) is the rate of crown fire spread and \\(t_{R,crown}\\) is the flame residence time, estimated as: \\[\\begin{equation} t_R = 192 \\cdot RT_{ca} \\end{equation}\\] where \\(RT_{ca} = \\min(0.0028, 2/\\sigma_{ca}\\) is the reaction thickness of the canopy. As for surface fires, flame length is calculated using: \\[\\begin{equation} FL_{crown} = 0.45 \\cdot (I_{B,crown}/60)^{0.46} \\end{equation}\\] where 60.0 is a factor to convert from \\(Btu\\cdot ft^{-1} \\cdot min^{-1}\\) to \\(Btu\\cdot ft^{-1} \\cdot s^{-1}\\). 24.6 Fire potentials 24.6.1 Surface fire behavior potentials The (\\(SFP\\); between 0 and 9) is an index defined as the maximum of spread potential (\\(SP\\)) and flame length (\\(FL\\)) potential indices (both between 0 and 9): \\[\\begin{equation} SFP = \\max(SP, FP) \\end{equation}\\] Spread potential is derived from \\(R\\) (in \\(ft\\cdot min^{-1}\\)), and flame length potential is derived from \\(FL\\) (in \\(ft\\)), both quantities being calculated at benchmark environmental conditions: \\[\\begin{eqnarray} SP &amp;= \\min \\left[ 9, R^{1/2}\\right] \\\\ FP &amp;= \\min \\left[ 9, FL^{1/2}\\right] \\end{eqnarray}\\] 24.6.2 Crown fire behavior potentials The crown fire summary potential (\\(CPF\\)) combines three subpotentials into a single index value between 0 and 9. It places more emphasis on crown fire initiation (\\(IC\\)) and rate of spread (\\(RC\\)) than to crown-to-crown transmissivity (\\(TC\\)): \\[\\begin{equation} CFP = 0.4286 \\cdot (IC+(TC/3)+RC) \\end{equation}\\] where \\(0.4286\\) is used to limit \\(CPF\\) between 0 and 9. The crown fire initiation potential (\\(IC\\)) represents the likelihood of a surface fire torching into single or multiple trees. \\(IC\\) is based on the work by Van Wagner. If \\(FAI_{ca} = 0\\) then \\(IC = 0\\). Otherwise it is calculated as: \\[\\begin{equation} IC = \\min \\left[ 9, 4 \\cdot \\left(\\frac{I_B/60}{I_c}\\right)^{0.2}\\right] \\end{equation}\\] where \\(I_B\\) is the surface fireline intensity (60 is used to convert it to \\(Btu\\cdot ft^{-1} \\cdot s^{-1}\\)) and \\(I&#39;\\) is Van Wagner’s critical fireline intensity (Scott and Reinhardt 2002): \\[\\begin{equation} I_c = 0.288894658 \\cdot \\left[ 0.01\\cdot (H_{gap}/100) \\cdot (460 +25.9\\cdot M_{live, ca})\\right]^{1.5} \\end{equation}\\] where \\(M_{live, ca}\\) is the moisture content of the canopy (in percent of dry weight), 0.288894658 is used to convert from \\(kJ \\cdot m^{-1}\\cdot s^{-1}\\) to \\(Btu \\cdot ft^{-1}\\cdot s^{-1}\\) and \\(H_{gap}\\) is the canopy gap (in \\(cm\\)) determined from the analysis of the bulk density profile. The crown-to-crown transmittivity potential (\\(TC\\)) is set to zero if \\(FAI_{ca} &lt; TFAI/(3\\cdot \\pi)\\), where \\(TFAI\\) is a threshold for FAI calculated as: \\[\\begin{equation} TFAI = A_{q}\\cdot e^{-0.0019 \\cdot U} \\end{equation}\\] where \\(A_{q} = 3.2868\\) if \\(\\sigma_{ca} &gt; 2000 ft^{2}\\cdot ft^{-3}\\) and \\(A_{q} = 2.6296\\) otherwise. If \\(FAI_{ca} &gt; TFAI/(3\\cdot \\pi)\\), then \\(TC\\) is calculated as: \\[\\begin{equation} TC = \\min \\left[ 9, 10 \\cdot TC_q \\right] \\end{equation}\\] where \\(TC_q\\) is the efficiency of crown-to-crown heat transfer, as a proportion of maximum efficiency at 100 % canopy cover: \\[\\begin{equation} TC_q = \\frac{(\\max(0.0, C_{ca}\\cdot WAF - 40))^{0.3}}{(100 \\cdot WAF -40)^{0.3}} \\end{equation}\\] In this last equation 40 represents the threshold of canopy cover necessary to initiate dependent crown spread, and 0.3 is a coefficient describing the assumed effect of crown cover on transmittivity at benchmark windspeed. The canopy adjustment ratio \\(WAF\\) is added to modulate transmittivity depending on windspeed. Finally, the crown fire rate of spread potential (\\(RC\\)) is defined as: \\[\\begin{equation} RC = \\min \\left[ 9, 2.5 \\cdot R_{crown}^{1/e} \\right] \\end{equation}\\] where \\(R_{crown}\\) is the rate of spread (in \\(ft \\cdot min^{-1}\\)) of the crown fire. 24.7 Unit conversion of outputs The following factors are used to express fire behavior outputs to metric units: Fire spread rates: \\(1 ft\\cdot min^{-1} = 0.3048 m\\cdot min^{-1}\\) Flame length: \\(1 ft = 0.3048 m\\) Reaction intensity: \\(1 Btu\\cdot ft^{-2} \\cdot min^{-1} = 11.3484 kJ \\cdot m^{-2}\\cdot min^{-1}\\) Heat sink: \\(1 Btu\\cdot ft^{-3} = 37.2589458 kJ \\cdot m^{-3}\\) Fireline intensity: \\(1 Btu\\cdot ft^{-1} \\cdot min^{-1} = 0.0576911555 kW\\cdot m^{-1}\\) Bibliography "],["modelparametrization.html", "A Model parametrization A.1 Horizontal root overlap A.2 Plant Hydraulics A.3 Stomatal regulation and photosynthesis", " A Model parametrization Package medfate provides routines to estimate them from a minimum set of input parameters. The whole process of estimation of those parameters is done automatically in functions spwbInput() and forest2spwbInput(), with the user controlling the process through the species parameter table input (e.g., SpParamsMED) an object control (see default values in defaultControl()). In the following we detail the calculations and present individual functions that perform partial calculations. A.1 Horizontal root overlap A.1.1 Basic water balance A given plant cohort \\(i\\) will have its roots in layer \\(s\\) partitioned among different water pools. We thus need to define \\(fr_{i,s,j}\\), the (horizontal) proportion of fine roots of cohort \\(i\\) in layer \\(s\\) of the water pool \\(j\\), with the restriction that: \\[\\begin{equation} \\sum_{j}{fr_{i,s,j}} = 1 \\,\\, \\forall i,s \\end{equation}\\] It is important to realize that proper estimation of \\(fr_{i,s,j}\\) is challenging when we do not have explicit plant coordinates, root lateral widths, etc. For this reason, an intuitive approach is followed here based on the following two premises: The amount of overlap between roots of different plants should monotonically increase along with the LAI of the stand (i.e. \\(LAI^{live}_{stand}\\)). The amount of overlap between roots of different plants at a given soil depth should increase/decrease with the vertical proportion of roots at that depth. The specific formulation we chose for \\(fr_{i,s,j}\\) is: \\[\\begin{equation} fr_{i,s,j} = f_{pool,j} \\cdot (1 - \\exp(- f_{overlap} \\cdot LAI^{live}_{stand})) \\cdot \\left( \\frac{\\sqrt{FRP_{i,s} \\cdot FRP_{j,s}}}{\\max_{s}(FRP_{i,s})} \\right) \\end{equation}\\] for all \\(j \\neq i\\), where \\(f_{overlap}\\) is an overlap factor (a control parameter called poolOverlapFactor). For \\(j=i\\) then we simply have: \\[\\begin{equation} fr_{i,s,i} = 1 - \\sum_{j}{fr_{i,s,j}} \\end{equation}\\] Note that if \\(f_{overlap} = 0\\) then \\(fr_{i,s,j} = 1\\) if \\(j=i\\) and zero otherwise (i.e. plants exploit their corresponding water pools only. For very large values of \\(LAI^{live}_{stand}\\) and/or \\(f_{overlap}\\) we have that \\((1 - \\exp(- f_{overlap} \\cdot LAI^{live}_{stand})) = 0\\) and \\(fr_{i,s,j} = f_{pool,j}\\) (neglecting vertical differences), so that plants exploit the each water pool in the same proportion as the fraction of stand occupied by the pool (i.e. overlap is maximum). A.2 Plant Hydraulics A.2.1 Vulnerability curves Leaf and xylem vulnerability curves are often described using \\(\\Psi_{50}\\), the water potential at which hydraulic conductance is half of maximum. As noted above, parameter \\(d\\) in eq. (10.1) is the water potential \\(\\Psi\\) at which \\(k_{x}(\\Psi)/k_{x,max} = e^{-1} = 0.367\\) (and the same for eq. (10.2)). Hence, the two definitions do not match. Using the definition of \\(\\Psi_{50}\\) in eq. (10.1) we have: \\[\\begin{equation} 0.5 = e^{-((\\Psi_{50}/d)^c)} \\end{equation}\\] from which we obtain that the value for parameter \\(d\\) should be: \\[\\begin{equation} d = \\frac{\\Psi_{50}}{(-ln(0.5))^{1/c}}= \\frac{\\Psi_{50}}{0.69314^{1/c}} \\end{equation}\\] Hence, this operation should be used when specifying this parameter from \\(\\Psi_{50}\\). Vulnerability curves for root xylem are less common than for stem xylem. If these values are missing, functions spwbInput() and forest2spwbInput() will use for \\(c\\) the same value as in stems, and for \\(d\\) half the value of that of stems (Sperry et al. 2017). If the values for leaves are missing, initialization functions will use for \\(c\\) the same value as in stems, and for \\(d\\) 66% of the value for stems. Rhizosphere conductance is regulated in the model using the van Genuchten function given in eq. (10.3), and parameters \\(n\\) and \\(\\alpha\\) for each soil layer were already available from soil initialization (i.e. function soil()): s = soil(defaultSoilParams(3)) s$VG_n ## [1] 1.267359 1.303861 1.303861 s$VG_alpha ## [1] 147.32468 89.16112 89.16112 Aboveground and belowground stem maximum conductance values at the plant level (\\(k_{s, max}\\) and \\(k_{r, max}\\)) will not be normally available and the same for the rhizosphere (\\(k_{rh, max}\\)). A.2.2 Leaf maximum conductance Leaf maximum conductance (\\(k_{l, max}\\), in \\(mmol \\cdot m^{-2} \\cdot s^{-1} \\cdot MPa^{-1}\\)) is an input parameter that should be provided for each species. When missing, leaf maximum hydraulic conductance is assumed \\(k_{l, max}=6\\) for conifers and \\(k_{l, max}=8\\) for angiosperms (Sack and Holbrook 2006). A.2.3 Stem xylem maximum conductance Estimation of maximum stem conductance (\\(k_{s,max}\\), in \\(mmol \\cdot m^{-2} \\cdot s^{-1} \\cdot MPa^{-1}\\)) is done by function hydraulics_maximumStemHydraulicConductance() and follows the work by Savage et al. (2010), Olson et al. (2014) and Christoffersen et al. (2016). Calculations are based on tree height and two species-specific parameters: maximum sapwood reference conductivity (\\(K_{s,max,ref}\\)) and the ratio of leaf area to sapwood area (\\(A_{l}/A_{s}\\); Al2As in SpParamsMED), i.e. the inverse of the Huber value \\(H_v\\). The reference value for maximum sapwood conductivity \\(K_{s,max,ref}\\) is assumed to have been measured on a terminal branch of a plant of known height \\(H_{ref}\\). If our target plant is very different in height, the conduits of terminal branches will have different radius and hence conductivity. We correct the reference conductivity to the target plant height using the following empirical relationship, developed by Olson et al. (2014) between tree height and diameter of conduits for angiosperms and the equation described by Christoffersen et al. (2016): \\[\\begin{eqnarray} 2 \\cdot r_{int,H}&amp;=&amp; 10^{1.257+(0.24\\cdot log_{10}(H))} \\\\ 2 \\cdot r_{int,ref}&amp;=&amp;10^{1.257+(0.24\\cdot log_{10}(H_{ref}))}\\\\ K_{s,max,cor}&amp;=&amp;K_{s,max,ref}\\cdot (r_{int,H}/r_{int,ref})^{2} \\end{eqnarray}\\] Where \\(r_{int,H}\\) is the radius of conduits for a terminal branch of a tree of height \\(H\\) and \\(r_{int,ref}\\) is the corresponding radius for a tree of height \\(H_{ref}\\) (\\(H\\) and \\(H_{ref}\\) are measured in m). The form of the empirical relationship by Olson et al. (2014) is: Let’s consider an example for a Quercus ilex target tree of 4m height and where species-specific conductivity \\(K_{s,max,ref} = 0.77\\) is the apical value for trees of \\(H_{ref} = 6.6\\) m (in , values of \\(H_{ref}\\) are taken from median height values; see parameter Hmed in SpParamsMED). The corrected conductivity for a tree of height 4 m will be a bit lower than that of the reference height: xylem_kmax = 0.77 H = 400 # in cm Href = 660 # in cm f = hydraulics_referenceConductivityHeightFactor(Href, H); f ## [1] 0.7863352 xylem_kmax_cor = xylem_kmax * f xylem_kmax_cor ## [1] 0.6054781 Once the reference conductivity is corrected, the maximum stem conductance without accounting for conduit taper is: \\[\\begin{equation} k_{s,max, notaper}=\\frac{1000}{0.018} \\frac{K_{s,max,cor}\\cdot A_{s}}{H\\cdot A_{l}} \\end{equation}\\] where \\(H\\) is the tree height (here in m), \\(A_{s}\\) is the sapwood area, \\(A_{l}\\) is the leaf area and 1000/0.018 is a factor used to go from kg to mmol. The ratio \\(A_{l}/A_{s} = 1/H_v\\) is a fixed species parameter in soil water balance calculations (see parameter Al2As), but becomes variable when simulating plant growth. Let’s assume that Quercus ilex the leaf to sapwood area ratio is \\(A_{l}/A_{s} = 2512\\). The maximum (leaf-specific) stem conductance without taper (\\(k_{s, max, notaper}\\)) for the tree of 4 m height is then: Al2As = 2512 kstemmax = hydraulics_maximumStemHydraulicConductance(xylem_kmax, Href, Al2As, H, taper = FALSE) kstemmax ## [1] 3.347698 In order to consider taper of xylem conduits we calculate the whole-tree conductance per unit leaf area (\\(k_{s, max, taper}\\)) as described in Christoffersen et al. (2016): \\[\\begin{equation} k_{s, max, taper}=\\frac{1000}{0.018} \\cdot \\frac{K_{s,max,pet}\\cdot A_{s}}{H\\cdot A_{l}}\\cdot \\chi_{tap:notap,ag}(H) \\end{equation}\\] where \\(K_{s,max,pet}\\) is the conductivity at the petiole level and \\(\\chi_{tap:notap,ag}(H)\\) is the taper factor accounting for the decrease in the xylem conduits diameter with the height, from the petiole to base of the trunk, which mitigates the negative effects of height on the hydraulic safety. The conductivity at the petiole level is obtained from \\(K_{s,max,ref}\\) using again: \\[\\begin{equation} K_{s,max,pet} = K_{s,max,ref}\\cdot (r_{int, pet}/r_{int,ref})^{2} \\end{equation}\\] where \\(r_{int, pet}\\) is the radius of the petiole in the model of Savage et al. (2010). Christoffersen et al. (2016) use \\(r_{int, pet} = 10\\) \\(\\mu m\\) but we define it as the radius of apical conduits in a tree of 1 m height: hydraulics_terminalConduitRadius(100.0) ## [1] 9.035871 \\(\\chi_{tap:notap,ag}(H)\\) is calculated as described in the Appendix 1 section of Christoffersen et al. (2016) (see also Savage et al. (2010)). The following figure shows the value of \\(\\chi_{tap:notap,ag}\\) for different heights: Note that, since \\(\\chi_{tap:notap,ag}(1) = 3.82\\) (indicated using grey dashed lines in the last figure), the equation of maximum conductance with taper would give a higher conductance than the equation without taper for a tree of 1 m height, which is supposed to have a conductance equal to conductivity. To solve this issue we define the taper factor as \\(\\chi_{tap:notap,ag}(H)/\\chi_{tap:notap,ag}(1)\\): \\[\\begin{equation} k_{s, max, taper}=\\frac{1000}{0.018} \\cdot \\frac{K_{s,max,pet}\\cdot A_{s}}{H\\cdot A_{l}}\\cdot \\frac{\\chi_{tap:notap,ag}(H)}{\\chi_{tap:notap,ag}(1)} \\end{equation}\\] The maximum stem conductance with taper (\\(k_{s, max, taper}\\)) of a Q. ilex tree of 4 m height, calculated with this second equation, is: kstemmax_tap = hydraulics_maximumStemHydraulicConductance(xylem_kmax, Href, Al2As, H, taper = TRUE) kstemmax_tap ## [1] 4.764396 The next two plots show the variation of \\(k_{s,max}\\) for Q. ilex depending on the tree height and with/without considering taper of conduits. The plot on the right (both axes in log) show the slope of the dependency of conductance with height in both cases: A.2.4 Root xylem maximum hydraulic conductance To obtain maximum root xylem conductance (\\(k_{r, max}\\), in \\(mmol \\cdot m^{-2} \\cdot s^{-1} \\cdot MPa^{-1}\\)), one option taken by Christoffersen et al. (2016) is to assume that minimum stem resistance (inverse of maximum conductance) represents a fixed proportion of the minimum total tree (stem+root) resistance. A value 0.625 (i.e. 62.5%) suggested by these authors leads to maximum total tree conductance for our Q. ilex tree being: ktot = kstemmax*0.625 ktot ## [1] 2.092311 and the maximum root xylem conductance would be therefore: krootmax = 1/((1/ktot)-(1/kstemmax)) krootmax ## [1] 5.579497 Now, we need to divide total maximum conductance of the root system xylem among soil layers we need weights inversely proportional to the length of transport distances (Sperry et al. 2017). Vertical transport lengths can be calculated from soil depths and radial spread can be calculated assuming cylinders with volume proportional to the proportions of fine root biomass. Let’s assume a soil with three layers: d = s$dVec d ## [1] 300 700 1000 The proportion of fine roots in each layer, assuming a linear dose response model, will be: Z50 = 200 Z95 = 1500 v1 = root_ldrDistribution(Z50,Z95, d) v1 ## [,1] [,2] [,3] ## [1,] 0.6661036 0.2784153 0.05548106 Having this information, the calculation of root length (i.e. the sum of vertical and radial lengths) to each layer (\\(L_j\\)) is done using function root_coarseRootLengths(): rfc = c(20,50,70) Vol = root_coarseRootSoilVolumeFromConductance(1.0, 2500,krootmax, v1, d, rfc) l = root_coarseRootLengthsFromVolume(Vol, v1, d, rfc) l ## [1] 4503.445 3250.363 3085.055 where lengths are in mm. The proportion of total root xylem conductance corresponding to each layer (\\(w_j\\)) is given by root_xylemConductanceProportions(): w1 = hydraulics_rootxylemConductanceProportions(v1, l) w1 ## [1] 0.09131268 0.15767645 0.75101087 Xylem conductance proportions can be quite different than the fine root biomass proportions. This is because radial lengths are largest for the first top layers and vertical lengths are largest for the bottom layers. The maximum root xylem conductances of each layer will be the product of maximum total conductance of root xylem and weights: w1*krootmax ## [1] 0.5094788 0.8797553 4.1902629 The maximum root xylem conductances of each layer would be: krootmaxvec = w1*krootmax krootmaxvec ## [1] 0.5094788 0.8797553 4.1902629 and the fraction of total xylem resistance due to stem would be: (1/kstemmax)/((1/kstemmax)+(1/krootmax)) ## [1] 0.625 In contrast with the approach of Christoffersen et al. (2016), in this approach the root maximum conductance depends root length and distribution, and is not a fixed fraction of stem maximum conductance. Assuming constant root length, then the proportion of total resistance due to the stem will increase with tree height (Magnani, Mencuccini, and Grace 2000): where the horizontal gray line indicates the value of 62.5%. Of course rooting depth also increases with tree age, but young trees have higher root-to-shoot ratios than older ones. Hence, a root maximum conductance that is not fixed but increases with age seems a priori more realistic. Moreover, Christoffersen et al. (2016) justify the value of 62.5% from a study which quantified total aboveground and belowground resistance in tropical trees (Fisher et al. 2006) under near-saturated (wet season) conditions, but values of belowground resistance reported in this study for wet conditions and trees of 30 m height are around 13%, which equals to 87% fraction of aboveground resistance. On the other hand, while rooting depths are limited by soil depth, lateral root length increases with age and, hence, the model could be made more realistic if this is taken into account and the curve above would probably saturate at lower percentages. A.2.5 Rhizosphere maximum hydraulic conductance Maximum rhizosphere conductance (\\(k_{rh, max}\\), in \\(mmol \\cdot m^{-2} \\cdot s^{-1} \\cdot MPa^{-1}\\)) is difficult to measure directly, as it depends on the rhizosphere (i.e. fine root) surface in each soil layer, and will probably always be a parameter to be calibrated. Instead of trying to estimate rhizosphere surface from root architecture (Sperry et al. 1998), we follow Sperry et al. (2016) and determine the maximum rhizosphere conductance in each layer from an inputed ‘average percentage rhizosphere resistance.’ The percentage of continuum resistance corresponding to the rhizosphere is calculated from the vulnerability curves of stem, root and rhizosphere at the same water potential. The average resistance is found by evaluating the percentage for water potential values between 0 and \\(\\Psi_{crit}\\). The following figure illustrates how the supply function, for different soil water potentials, is affected by increasing values of the average percentage of rhizosphere resistance: Sperry et al. (2016) found average percentages of rhizosphere resistance around 67%, but these exceptionally-high values were probably a consequence of using an unsegmented supply function (i.e. single vulnerability curve for roots, stem and leaves). If we specify a 15% of average resistance in the rhizosphere (see parameter averageFracRhizosphereResistance in function defaultControl()), the maximum rhizosphere conductance values for the three layers are found calling: krmax = rep(0,3) krmax[1]= hydraulics_findRhizosphereMaximumConductance(15, s$VG_n[1],s$VG_alpha[1], krootmax, rootc,rootd, kstemmax, stemc, stemd, kleafmax, leafc, leafd) krmax[2] = hydraulics_findRhizosphereMaximumConductance(15, s$VG_n[2],s$VG_alpha[2], krootmax, rootc,rootd, kstemmax, stemc, stemd, kleafmax, leafc, leafd) krmax[3] = hydraulics_findRhizosphereMaximumConductance(15, s$VG_n[3],s$VG_alpha[3], krootmax, rootc,rootd, kstemmax, stemc, stemd, kleafmax, leafc, leafd) krmax ## [1] 240174188 85636744 85636744 The values are the same because the texture of the three layers is the same in this case. If we take into account root distribution, actual maximum rhizosphere conductance values are: krmax*v1 ## [,1] [,2] [,3] ## [1,] 159980896 23842581 4751218 A.2.6 Pressure-volume curves Parameters of the pressure-volume curve (i.e. \\(\\pi_{0,stem}\\) and \\(\\epsilon_{stem}\\)) for leaf and stem symplastic tissue are required for each species. When parameters for stem tissue are missing, medfate estimates them from wood density following Christoffersen et al. (2016): \\[\\begin{equation} \\pi_{0,stem} = 0.52 - 4.16 \\cdot \\rho_{wood} \\end{equation}\\] \\[\\begin{equation} \\epsilon_{stem} = \\sqrt{1.02 \\cdot e^{8.5\\cdot \\rho_{wood}}-2.89} \\end{equation}\\] A.2.7 Plant water storage capacity The water storage capacity of sapwood tissue per leaf area unit (\\(V_{sapwood}\\); in \\(l \\cdot m^{-2}\\)) can be estimated as the product of stem height (\\(H\\) in m) and Huber value (\\(H_v\\); ratio of sapwood area to leaf area in \\(m^2 \\cdot m^{-2}\\)) times a factor to account for the non-cylindrical shape (http://www.fao.org/forestry/17109/en/): \\[\\begin{equation} V_{sapwood} = 10^3 \\cdot 0.48 \\cdot H \\cdot H_v \\cdot \\Theta_{sapwood} \\end{equation}\\] \\(\\Theta_{sapwood}\\) is sapwood porosity (\\(cm^3\\) of water per \\(cm^3\\) of sapwood tissue), which can be estimated from wood density (\\(\\rho_{wood}\\); in \\(g \\cdot cm^{-3}\\)): \\[\\begin{equation} \\Theta_{sapwood} = 1 - (\\rho_{wood} / 1.54) \\end{equation}\\] where the density of wood substance can be assumed to be fixed and equal to 1.54 \\(g \\cdot cm^{-3}\\) (Dunlap 1914). For example, wood densities ranging from 0.443 to 1.000 \\(g \\cdot cm^{-3}\\) result in sapwood porosity values between 0.35 and 0.71. Water storage capacity of leaf tissue per leaf area unit (\\(V_{leaf}\\); in \\(l \\cdot m^{-2}\\)) can be estimated as the product of specific leaf area (SLA; in \\(m^2 \\cdot kg^{-1}\\)) and leaf density (\\(\\rho_{leaf}\\); in \\(g \\cdot cm^{-3}\\)): \\[\\begin{equation} V_{leaf} = \\frac{1}{SLA \\cdot \\rho_{leaf}} \\cdot \\Theta_{leaf} \\end{equation}\\] \\(\\Theta_{leaf}\\) is leaf porosity (\\(cm^3\\) of water per \\(cm^3\\) of leaf tissue), which can be estimated from leaf density: \\[\\begin{equation} \\Theta_{leaf} = 1 - (\\rho_{leaf} / 1.54) \\end{equation}\\] where the density of wood substance can be assumed to be fixed and equal to 1.54 \\(g \\cdot cm^{-3}\\) (Dunlap 1914). For example, let’s calculate the stem and leaf water capacity for a Q. ilex tree of 15 m height: wd = 1.0 Al2As = 2512 H = 1500 # 15 m hydraulics_stemWaterCapacity(Al2As, H, wd) ## [1] 2.093846 ld = 0.7 SLA = 5.870 hydraulics_leafWaterCapacity(SLA, ld) ## [1] 0.1327463 A.3 Stomatal regulation and photosynthesis A.3.1 Stomatal conductance Maximum stomatal conductance (\\(g_{swmax}\\)) is an input parameter for each species. When species-specific values are missing, the following relation with maximum leaf hydraulic conductance (\\(k_{l, max}\\)) is used (Mencuccini 2003): \\[\\begin{equation} g_{swmax} = e^{4.797 + 0.633\\cdot \\log(k_{l, max})} \\end{equation}\\] Species values for \\(g_{swmin}\\) were taken from Duursma et al. (2018). Following the same authors, a value of \\(g_{swmin}\\) = 0.0045 \\(mol H_2O \\cdot s^{-1} \\cdot m^{-2}\\) is taken as default, when species-specific values are missing. A.3.2 Photosynthesis Rubisco’s maximum carboxylation rate at 25ºC (\\(V_{max, 298}\\), in \\(\\mu mol CO_2 \\cdot s^{-1} \\cdot m^{-2}\\)) is a required input parameter for each species (Vmax298), and if its value is missing a default value of 100 \\(\\mu mol CO_2 \\cdot s^{-1} \\cdot m^{-2}\\) is used. The maximum rate of electron transport at the same temperature (\\(J_{max, 298}\\)) can be provided by the user (Jmax298) but, if not, it is estimated from \\(V_{max, 298}\\) using Walker et al. (2014): \\[\\begin{equation} J_{max, 298} = e^{1.197 + 0.847\\cdot \\log(V_{max,298})} \\end{equation}\\] Bibliography "],["symbols.html", "B Symbols B.1 Dimensions B.2 Soils B.3 Vegetation B.4 Meteorology B.5 Anatomy B.6 Radiation B.7 Water balance B.8 Energy balance B.9 Forest hydrology B.10 Plant hydraulics B.11 Photosynthesis B.12 Plant water content B.13 Stomatal regulation B.14 Carbon pools B.15 Carbon balance B.16 Growth, senescence and mortality", " B Symbols The following tables list all symbols used in this document, along with their units and definition. When symbols are input for medfate model functions, the R name of those parameters in the package (either in data frame SpParamsMED, soil input data frame, or the output of functions such as spwbInput()) is also indicated. B.1 Dimensions Symbol Units R Description \\(\\Delta t_{step}\\) \\(s\\) 86400/ndailysteps Subdaily temporal step \\(\\Delta t_{substep}\\) \\(s\\) 86400/(ndailysteps*nsubsteps) Subdaily temporal substep \\(c\\) (count) Number of plant cohorts \\(l\\) (count) Number of vertical layers \\(\\Delta z\\) \\(m\\) verticalLayerSize/100 Width of vertical layers \\(S\\) (count) Number of soil layers \\(d_{s}\\) \\(mm\\) widths Width of soil layer \\(s\\) \\(Z_{s}\\) \\(mm\\) widths Depth of soil layer \\(s\\) \\(Z_{soil}\\) \\(mm\\) Overall soil depth B.2 Soils Symbol Units R Description \\(P_{clay,s}\\) % clay Percent of clay in soil layer \\(s\\) \\(P_{sand,s}\\) % sand Percent of sand in soil layer \\(s\\) \\(OM_s\\) % om Percentage of organic mater per dry weight in soil layer \\(s\\) \\(BD_{s}\\) \\(g\\cdot cm^{-3}\\) bd Bulk density in soil layer \\(s\\) \\(P_{rocks,s}\\) % rfc Percentage of rock fragment content in soil layer \\(s\\) \\(\\theta_s\\) \\(m^3 \\cdot m^{-3}\\) Volumetric moisture in soil layer \\(s\\) \\(\\Psi_s\\) MPa Water potential in soil layer \\(s\\) \\(\\Psi_{fc}\\) MPa Water potential at field capacity \\(A_s\\), \\(B_s\\) Parameters of the Saxton pedotransfer functions for soil layer \\(s\\) \\(\\theta_{sat, s}\\) \\(m^3 \\cdot m^{-3}\\) VG_theta_sat Volumetric moisture at saturation for soil layer \\(s\\) \\(\\theta_{fc, s}\\) \\(m^3 \\cdot m^{-3}\\) Volumetric moisture at field capacity (-0.033 MPa) for soil layer \\(s\\) \\(\\theta_{wp,s}\\) \\(m^3 \\cdot m^{-3}\\) Volumetric moisture at wilting point (-1.5 MPa) for soil layer \\(s\\) \\(\\theta_{res,s}\\) \\(m^3 \\cdot m^{-3}\\) VG_theta_res Residual volumetric moisture for soil layer \\(s\\) \\(n_s\\) VG_n Parameter \\(n\\) of the Van Genuchten (1980) model for soil layer \\(s\\) \\(\\alpha_s\\) VG_alpha Parameter \\(\\alpha\\) of the Van Genuchten (1980) model for soil layer \\(s\\) \\(K_{sat,s}\\) \\(mmol \\cdot s^{-1} \\cdot m^{-1} \\cdot MPa^{-1}\\) Ksat Saturated soil conductivity for soil layer \\(s\\). \\(K_{drain}\\) \\(mm \\cdot d^{-1}\\) Kdrain Hydraulic conductivity for deep drainage. \\(P_{macro, s}\\) % macro Percentage of macroporosity corresponding to soil layer \\(s\\). \\(\\gamma_{soil}\\) \\(mm \\cdot day^{-1}\\) Gsoil The maximum daily evaporation from soil \\(\\kappa_{soil}\\) (unitless) Ksoil Extinction parameter to regulate the amount of water evaporated from each soil layer \\(Z_{wt}\\) \\(mm\\) Water table depth \\(V_{s}\\) \\(mm\\) Water volume in soil layer \\(s\\) \\(V_{soil}\\) \\(mm\\) Overall water volume in the soil \\(V_{fc, soil}\\) \\(mm\\) Water retention capacity of the whole soil \\(W_{s}\\) [0-1] W Proportion of moisture in relation to field capacity in soil layer \\(s\\) \\(W_{i,s}\\) [0-1] W Proportion of moisture in relation to field capacity in soil layer \\(s\\) within fraction of stand area covered by cohort \\(i\\) \\(W_{rhizo, i,s}\\) [0-1] Proportion of moisture in relation to field capacity in soil layer \\(s\\) within the rhizosphere of cohort \\(i\\) \\(S_{snow}\\) \\(mm\\) SWE Snow water equivalent of the snow pack storage over the soil surface B.3 Vegetation Symbol Units R Description \\(SP_i\\) (count) Species Species identity of cohort \\(i\\) \\(A_{sh,i}\\) \\(cm^2\\) Area occupied by an average shrub individual of cohort \\(i\\) \\(B_{sh,i}\\) \\(kg\\) Fine-fuel biomass of an average shrub individual of cohort \\(i\\) \\(H_i\\) \\(cm\\) Height Average tree or shrub height of cohort \\(i\\) \\(H_{crown,i}\\) \\(cm\\) Crown base height (i.e. the height corresponding to the first living branch) of cohort \\(i\\) \\(CCF_i\\) Crown competition factor of cohort \\(i\\) \\(CW_i\\) \\(m\\) Crown width that a tree of cohort \\(i\\) would have in open-ground conditions \\(CR_i\\) [0-1] CR Crown ratio (i.e. ratio between crown length and plant height) of cohort \\(i\\) \\(N_i\\) \\(ind · ha^{-1}\\) N Density of tree individuals of cohort \\(i\\) \\(DBH_i\\) \\(cm\\) DBH Diameter at breast height of trees in cohort \\(i\\) \\(Cover_i\\) % Cover Percent cover of shrubs in cohort \\(i\\) \\(FB_{i}\\) \\(kg \\cdot m^{-2}\\) Foliar biomass of cohort \\(i\\) \\(FB_{tree,i}\\) \\(kg\\) Foliar biomass of a single tree of cohort \\(i\\) \\(\\phi_i\\) [0-1] Fraction of maximum leaf area currently expanded for cohort \\(i\\) \\(LAI^{live}_i\\) \\(m^2 \\cdot m^{-2}\\) LAI_live (Maximum) leaf area index (one-side leaf area per surface area of the stand) of cohort \\(i\\) \\(LAI^{dead}_i\\) \\(m^2 \\cdot m^{-2}\\) LAI_dead Dead leaf area index (one-side dead leaf area per surface area of the stand) of cohort \\(i\\) \\(LAI^{\\phi}_i\\) \\(m^2 \\cdot m^{-2}\\) LAI_expanded Current expanded leaf area index (one-side expanded leaf area per surface area of the stand) of cohort \\(i\\) \\(LAI^{all}_{i}\\) \\(m^2 \\cdot m^{-2}\\) Total leaf area index (live or dead) of cohort \\(i\\) \\(LAI^{live}_{stand}\\) \\(m^2 \\cdot m^{-2}\\) Maximum leaf area index of living leaves of the stand \\(LAI^{dead}_{stand}\\) \\(m^2 \\cdot m^{-2}\\) Leaf area index of dead leaves of the stand \\(LAI^{\\phi}_{stand}\\) \\(m^2 \\cdot m^{-2}\\) Current expanded leaf area index of live leaves of the stand \\(LAI_{stand}\\) \\(m^2 \\cdot m^{-2}\\) Total leaf area index (live or dead) of the stand \\(LA_{i}\\) \\(m^{2}\\) Leaf area of an individual of cohort \\(i\\) \\(FRP_{i,s}\\) [0-1] V[i,s] The proportion of fine roots of cohort \\(i\\) in soil layer \\(s\\) \\(FRA_{i,s}\\) \\(m^2\\) Fine root area of cohort \\(i\\) in soil layer \\(s\\) \\(L_{radial,i,s}\\) m Radial length of coarse roots of cohort \\(i\\) in soil layer \\(s\\) \\(W_{i}\\) \\(kg \\cdot m^{-2}\\) Fine fuel biomass of cohort \\(i\\) \\(Z_{50,i}\\) mm Z50 Depth above which 50% of the fine root mass of cohort \\(i\\) is located \\(Z_{95,i}\\) mm Z95 Depth above which 95% of the fine root mass of cohort \\(i\\) is located B.4 Meteorology Symbol Units R Description \\(DOY\\) DOY Day of the year \\(T_{mean}\\) \\(^{\\circ} \\mathrm{C}\\) MeanTemperature Mean daily temperature \\(T_{min}\\) \\(^{\\circ} \\mathrm{C}\\) MinTemperature Minimum daily temperature \\(T_{max}\\) \\(^{\\circ} \\mathrm{C}\\) MaxTemperature Maximum daily temperature \\(T_{base}\\) \\(^{\\circ} \\mathrm{C}\\) Base temperature for calculation of \\(GDD\\) \\(RH_{min}\\) % MinRelativeHumidity Minimum daily relative humidity \\(RH_{max}\\) % MaxRelativeHumidity Maximum daily relative humidity \\(P\\) \\(L \\cdot m^{-2} = mm\\) Precipitation Precipitation (including rainfall and snow) \\(Pr\\) \\(L \\cdot m^{-2} = mm\\) Rainfall Liquid water precipitation (rainfall) \\(Ps\\) \\(L \\cdot m^{-2} = mm\\) Snow Snow precipitation \\(PET\\) \\(L \\cdot m^{-2} = mm\\) PET Potential evapotranspiration, preferably calculated using Penman’s equation \\(Rad\\) \\(MJ \\cdot m^{-2}\\) Radiation Solar radiation after accounting for clouds \\(u\\) \\(m \\cdot s^{-1}\\) WindSpeed Wind speed \\(P_{atm}\\) kPa Atmospheric pressure \\(\\rho_{air}\\) \\(kg \\cdot m^{-3}\\) Air density \\(T_{atm}\\) \\(^{\\circ} \\mathrm{C}\\) Tatm Atmospheric (above-canopy) air temperature \\(T_{can}\\) \\(^\\circ \\mathrm{C}\\) Tcan Canopy air temperature \\(T_{air,j}\\) \\(^\\circ \\mathrm{C}\\) Tair Air temperature in canopy layer \\(j\\) \\(T_{soil,s}\\) \\(^\\circ \\mathrm{C}\\) Tsoil.s Temperature of soil layer \\(s\\) \\(e_{atm}\\) kPa Atmospheric (above-canopy) water vapor pressure \\(e_{air,j}\\) kPa VPair Water vapor pressure in canopy layer \\(j\\) \\(C_{atm}\\) kPa Catm Atmospheric (above-canopy) \\(CO_2\\) concentration \\(C_{air,j}\\) kPa VPair \\(CO_2\\) concentration in canopy layer \\(j\\) \\(u_j\\) \\(m \\cdot s^{-1}\\) Wind speed at canopy layer \\(j\\) B.5 Anatomy Symbol Units R Description \\(H_v\\) \\(m^2 \\cdot m^{-2}\\) 1/Al2As Huber value (ratio of sapwood area to leaf area) \\(LW\\) \\(cm\\) LeafWidth Leaf width \\(SLA\\) \\(m^2 \\cdot kg^{-1}\\) SLA Specific leaf area \\(\\rho_{leaf}\\) \\(g \\cdot cm^{-3}\\) LeafDensity Leaf tissue density \\(\\rho_{wood}\\) \\(g \\cdot cm^{-3}\\) WoodDensity Wood tissue density \\(\\rho_{fineroot}\\) \\(g \\cdot cm^{-3}\\) FineRootDensity Fine root tissue density \\(\\Theta_{sapwood}\\) \\(m^3 \\cdot m^{-3}\\) Sapwood porosity (volume of empty spaces over total volume) \\(\\Theta_{leaf}\\) \\(m^3 \\cdot m^{-3}\\) Leaf porosity (volume of empty spaces over total volume) \\(SRL\\) \\(cm \\cdot g^{-1}\\) SRL Specific root length \\(RLD\\) \\(cm \\cdot cm^{-3}\\) RLD Fine root length density (i.e. density of root length per soil volume) \\(r_{6.35}\\) r635 Ratio between the weight of leaves plus branches and the weight of leaves alone for branches of 6.35 mm B.6 Radiation Symbol Units R Description \\(k_{PAR,i}\\) (unitless) kPAR PAR extinction coefficient for cohort \\(i\\) \\(k_{SWR,i}\\) (unitless) SWR extinction coefficient for cohort \\(i\\) \\(k_{LWR}\\) (unitless) LWR extinction coefficient \\(k_{b}\\) (unitless) Extinction coefficient for direct light for cohort \\(i\\) \\(k_{d,i}\\) (unitless) Extinction coefficient for diffuse light for cohort \\(i\\) (equal to \\(k_{PAR,i}\\) or \\(k_{SWR,i}\\)) \\(\\alpha_{SWR,i}\\) [0-1] alphaSWR Short-wave radiation absorbance coefficient for cohort \\(i\\) \\(\\alpha_{PAR,i}\\) [0-1] PAR absorbance coefficient for cohort \\(i\\) \\(\\gamma_{SWR,i}\\) [0-1] gammaSWR Short-wave radiation leaf reflectance (albedo) for cohort \\(i\\) \\(\\gamma_{SWR,soil}\\) [0-1] Short-wave radiation soil reflectance \\(\\gamma_{PAR,i}\\) [0-1] PAR leaf reflectance for cohort \\(i\\) \\(L^{PAR}_{ground}\\) [0-1] LgroundPAR Fraction of PAR reaching the ground \\(L^{SWR}_{ground}\\) [0-1] LgroundSWR Fraction of SWR reaching the ground \\(I_{beam}\\) \\(W·m^{-2}\\) Instantaneous direct shortwave irrradiance from the atmosphere \\(I_{dif}\\) \\(W·m^{-2}\\) Instantaneous diffuse shortwave irrradiance from the atmosphere \\(L_{atm}\\) \\(W·m^{-2}\\) Instantaneous longwave radiation from the atmosphere \\(I_{beam,j}\\) \\(W·m^{-2}\\) Instantaneous direct shortwave irrradiance at the top of canopy layer \\(j\\) \\(I_{dif,j}\\) \\(W·m^{-2}\\) Instantaneous diffuse shortwave irrradiance at the top of canopy layer \\(j\\) \\(I_{beam,soil}\\) \\(W·m^{-2}\\) Instantaneous direct shortwave irrradiance reaching the soil \\(I_{dif,soil}\\) \\(W·m^{-2}\\) Instantaneous diffuse shortwave irrradiance reaching the soil \\(LAI^{sunlit}_{i,j}\\) \\(m^2·m^{-2}\\) Leaf area index of sunlit leaves of cohort \\(i\\) in layer \\(j\\). \\(LAI^{shade}_{i,j}\\) \\(m^2·m^{-2}\\) Leaf area index of shade leaves of cohort \\(i\\) in layer \\(j\\). \\(\\Phi^{sunlit}_{i,j}\\) \\(W·m^{-2}\\) Short-wave radiation absorbed by sunlit leaves of cohort \\(i\\) in layer \\(j\\), per leaf area unit. \\(\\Phi^{shade}_{i,j}\\) \\(W·m^{-2}\\) Short-wave radiation absorbed by sunlit leaves of cohort \\(i\\) in layer \\(j\\), per leaf area unit. \\(K^{sunlit}_{abs,i,j}\\) \\(W·m^{-2}\\) Short-wave radiation absorbed by sunlit foliage of cohort \\(i\\) in layer \\(j\\), per ground area unit. \\(K^{shade}_{abs,i,j}\\) \\(W·m^{-2}\\) Short-wave radiation absorbed by sunlit foliage of cohort \\(i\\) in layer \\(j\\), per ground area unit. B.7 Water balance Symbol Units R Description \\(Ps\\) \\(mm\\) Snow Precipitation as snow \\(Pr\\) \\(mm\\) Rain Precipitation as rainfall \\(Sm\\) \\(mm\\) Snowmelt Snowmelt \\(Pr_{net}\\) \\(mm\\) NetRain Net rainfall \\(In\\) \\(mm\\) Interception Interception loss \\(Ru\\) \\(mm\\) Runoff Water exported from the stand as runoff \\(Ro\\) \\(mm\\) Runon Water imported to the stand as runon \\(Dd\\) \\(mm\\) DeepDrainage Water exported from the stand as deep drainage \\(Es\\) \\(mm\\) SoilEvaporation Evaporation from the soil surface \\(Tr\\) \\(mm\\) PlantTranspiration Plant transpiration \\(Tr_{i}\\) \\(mm\\) Transpiration of plant cohort \\(i\\) B.8 Energy balance Symbol Units R Description \\(K_{abs,can}\\) \\(W \\cdot m^{-2}\\) SWRcan Atmosphere shortwave radiation absorbed by the canopy \\(K_{abs,j}\\) \\(W \\cdot m^{-2}\\) Atmosphere shortwave radiation absorbed by canopy layer \\(j\\) \\(K_{abs,soil}\\) \\(W \\cdot m^{-2}\\) SWRsoil Atmosphere shortwave radiation absorbed by the soil \\(L_{net,can}\\) \\(W \\cdot m^{-2}\\) LWRcan Canopy net longwave radiation \\(L_{net,j}\\) \\(W \\cdot m^{-2}\\) Net long-wave radiation of canopy layer \\(j\\) \\(L_{net,soil}\\) \\(W \\cdot m^{-2}\\) LWRsoil Soil net longwave radiation \\(H_{can,atm}\\) \\(W \\cdot m^{-2}\\) Hcan Turbulent heat exchange between the canopy and the atmosphere \\(H_{can,soil}\\) \\(W \\cdot m^{-2}\\) Hcansoil Turbulent heat exchange between the canopy and the soil \\(H_{j}\\) \\(W \\cdot m^{-2}\\) Sensible heat flux between canopy layer \\(j\\) and the leaves it contains \\(LE_{can}\\) \\(W \\cdot m^{-2}\\) LEcan Energy released as latent heat from the canopy towards the atmosphere \\(LE_{j}\\) \\(W \\cdot m^{-2}\\) Energy released as latent heat by canopy layer \\(j\\) \\(LE_{soil}\\) \\(W \\cdot m^{-2}\\) LEsoil Energy released as latent heat from the soil \\(TC_{LAI}\\) \\(J \\cdot m^{-2} \\cdot K^{-1}\\) thermalcapacityLAI Canopy thermal capacitance per LAI unit \\(TC_{can}\\) \\(J \\cdot m^{-2} \\cdot K^{-1}\\) Canopy thermal capacitance \\(TC_{j}\\) \\(J \\cdot m^{-2} \\cdot K^{-1}\\) Thermal capacitance of canopy layer \\(j\\) \\(TC_{soil,s}\\) \\(J \\cdot m^{-2} \\cdot K^{-1}\\) Thermal capacitance of soil layer \\(s\\) \\(VHC_{soil,s}\\) \\(J \\cdot m^{-3} \\cdot K^{-1}\\) Volumetric heat capacity of soil in layer \\(s\\) B.9 Forest hydrology Symbol Units R Description \\(P_G\\) \\(mm\\) Amount of rainfall needed to saturate the canopy for a given event \\(S_{canopy}\\) \\(mm\\) Cm Canopy water storage capacity \\(ER_{ratio}\\) (unitless) Ratio between evaporation rate and rainfall rate \\(C_{canopy}\\) [0-1] Canopy cover \\(PE_{soil}\\) \\(mm\\) Evaporation demand from the soil \\(SE_{soil}\\) \\(mm\\) Evaporation supply from the soil \\(t_{soil}\\) \\(day\\) Time needed to evaporate the current water deficit in the first soil layer B.10 Plant hydraulics Symbol Units R Description \\(K_{stem,max,ref}\\) \\(kg \\cdot s^{-1} \\cdot m^{-1} \\cdot MPa^{-1}\\) Kmax_stemxylem Maximum stem sapwood reference conductivity per leaf area unit \\(K_{root,max,ref}\\) \\(kg \\cdot s^{-1} \\cdot m^{-1} \\cdot MPa^{-1}\\) Kmax_rootxylem Maximum root sapwood reference conductivity per leaf area unit \\(k_{stem, \\max}\\) \\(mmol \\cdot s^{-1} \\cdot m^{-2} \\cdot MPa^{-1}\\) VCstem_kmax Maximum whole-stem conductance (per leaf area unit) \\(k_{root, \\max}\\) \\(mmol \\cdot s^{-1} \\cdot m^{-2} \\cdot MPa^{-1}\\) VCroot_kmax Maximum root conductance (per leaf area unit) \\(k_{rhizo, \\max}\\) \\(mmol \\cdot s^{-1} \\cdot m^{-2} \\cdot MPa^{-1}\\) Maximum rhizosphere conductance (per leaf area unit) \\(k_{leaf, \\max}\\) \\(mmol \\cdot s^{-1} \\cdot m^{-2} \\cdot MPa^{-1}\\) VCleaf_kmax Maximum leaf conductance (per leaf area unit) \\(c_{leaf}\\), \\(d_{leaf}\\) (unitless), MPa VCleaf_c, VCleaf_d Parameters of the vulnerability curve for leaves \\(c_{root}\\), \\(d_{root}\\) (unitless), MPa VCroot_c, VCroot_d Parameters of the vulnerability curve for root xylem \\(c_{stem}\\), \\(d_{stem}\\) (unitless), MPa VCstem_c, VCstem_d Parameters of the vulnerability curve for stem xylem \\(\\Psi\\) MPa Water potential in a given water compartment/segment \\(\\Psi_P\\) MPa Turgor water potential in a given water compartment/segment \\(\\Psi_S\\) MPa Osmotic (solute) water potential in a given water compartment \\(\\Psi_{cav}\\) MPa Minimum water potential experienced by xylem in previous steps (cavitation) \\(\\Psi_{canopy}\\) MPa Canopy water potential \\(\\Psi_{leaf}\\) MPa Leaf water potential \\(\\Psi_{rootcrown}\\) MPa Water potential at the root crown \\(\\Psi_{stem}\\) MPa Water potential at the end (highest part) of the stem \\(PLC\\) [0-1] Proportion of conductance loss \\(PLC_{stem}\\) [0-1] Proportion of conductance loss in stem xylem tissue \\(p_{root}\\) [0-1] pRootDisc Relative root conductance leading to hydraulic disconnection from a soil layer \\(E_i\\) \\(mmol \\cdot s^{-1} \\cdot m^{-2}\\) Steady-state water flow through a hydraulic segment \\(i\\) \\(k_i\\) \\(mmol \\cdot s^{-1} \\cdot m^{-2} \\cdot MPa^{-1}\\) Hydraulic conductance function for segment \\(i\\) \\(\\Psi_{up}\\) MPa Upstream water potential \\(\\Psi_{down}\\) MPa Downstream water potential B.11 Photosynthesis Symbol Units R Description \\(J_{max}\\) \\(\\mu mol\\,e \\cdot m^{-2} \\cdot s^{-1}\\) Jmax Maximum rate of electron transport at current leaf temperature \\(V_{max, 298}\\) \\(\\mu mol\\, CO_2 \\cdot s^{-1} \\cdot m^{-2}\\) Vmax Rubisco’s maximum carboxylation rate at current leaf temperature \\(J_{max, 298}\\) \\(\\mu mol\\,e \\cdot m^{-2} \\cdot s^{-1}\\) Jmax298 Maximum rate of electron transport at 298K \\(V_{max, 298}\\) \\(\\mu mol\\, CO_2 \\cdot s^{-1} \\cdot m^{-2}\\) Vmax298 Rubisco’s maximum carboxylation rate at 298K \\(T_{leaf}\\) \\(^\\circ C\\) Leaf temperature. \\(u_{leaf}\\) \\(m \\cdot s^{-1}\\) Leaf-level wind speed. \\(VPD_{leaf}\\) kPa Leaf vapour pressure deficit. \\(g_{w}\\) \\(mol\\, H_2O \\cdot s^{-1} \\cdot m^{-2}\\) Leaf diffusive conductance to water vapor \\(g_{c}\\) \\(mol\\, CO_2 \\cdot s^{-1} \\cdot m^{-2}\\) Leaf diffusive conductance to carbon dioxide \\(g_{sw}\\) \\(mol\\, H_2O \\cdot s^{-1} \\cdot m^{-2}\\) Leaf stomatal conductance to water vapour \\(g_{sw,\\min}\\) \\(mol\\, H_2O \\cdot s^{-1} \\cdot m^{-2}\\) Gswmin Minimum stomatal conductance to water vapour \\(g_{sw,\\max}\\) \\(mol\\, H_2O \\cdot s^{-1} \\cdot m^{-2}\\) Gswmax Maximum stomatal conductance to water vapour \\(\\Phi^{leaf}_{PAR}\\) \\(W \\cdot m^{-2}\\) Photosynthetically active radiation absorbed per leaf area \\(Q^{leaf}_{PAR}\\) \\(\\mu mol\\,photon \\cdot m^{-2} \\cdot s^{-1}\\) PAR photon flux density per leaf area \\(A_c\\) \\(\\mu mol\\, CO_2 \\cdot s^{-1} \\cdot m^{-2}\\) Rubisco-limited photosynthesis rate \\(A_e\\) \\(\\mu mol\\, CO_2 \\cdot s^{-1} \\cdot m^{-2}\\) Electron transport-limited photosynthesis rate \\(A\\) \\(\\mu mol\\, CO_2 \\cdot s^{-1} \\cdot m^{-2}\\) Leaf gross photosynthesis rate \\(A_n\\) \\(\\mu mol\\, CO_2 \\cdot s^{-1} \\cdot m^{-2}\\) Leaf net photosynthesis rate B.12 Plant water content Symbol Units R Description \\(\\epsilon_{leaf}\\) MPa LeafEPS Modulus of elasticity of leaves \\(\\epsilon_{stem}\\) MPa StemEPS Modulus of elasticity of symplastic xylem tissue \\(\\pi_{0,leaf}\\) MPa LeafPI0 Osmotic potential at full turgor of leaves \\(\\pi_{0,stem}\\) MPa StemPI0 Osmotic potential at full turgor of symplastic xylem tissue \\(RWC\\) [0-1] Relative water content \\(RWC_{sym}\\) [0-1] Relative water content in the symplasm fraction of a tissue \\(RWC_{apo}\\) [0-1] Relative water content in the apoplasm fraction of a tissue \\(V_{segment}\\) \\(l \\cdot m^{-2}\\) Water capacity of a segment (leaf or stem) \\(V_{leaf}\\) \\(l \\cdot m^{-2}\\) Vleaf Leaf water capacity per leaf area unit \\(V_{sapwood}\\) \\(l \\cdot m^{-2}\\) Vsapwood Sapwood water capacity per leaf area unit B.13 Stomatal regulation Symbol Units R Description \\(\\theta_1(\\Psi_{leaf})\\), \\(\\theta_2(\\Psi_{leaf})\\) [0-1] Cost functions 1 and 2 \\(\\beta(\\Psi_{leaf})\\) [0-1] Gain function \\(Profit_1(\\Psi_{leaf})\\), \\(Profit_2(\\Psi_{leaf})\\) [0-1] Profit functions 1 and 2 \\(E_{sunlit}\\) \\(mmol \\cdot s^{-1} \\cdot m^{-2}\\) Instantaneous transpiration flow rate for sunlit leaves \\(E_{shade}\\) \\(mmol \\cdot s^{-1} \\cdot m^{-2}\\) Instantaneous transpiration flow rate for shade leaves B.14 Carbon pools Symbol Units R Description \\(V_{storage,leaf, i}\\) \\(L \\cdot ind^{-1}\\) Leaf (carbon) storage volume for an individual of cohort \\(i\\) \\(V_{storage,sapwood, i}\\) \\(L \\cdot ind^{-1}\\) Sapwood (carbon) storage volume for an individual of cohort \\(i\\) \\(SS_{leaf,i}\\) \\(mol\\,gluc\\cdot L^{-1}\\) SugarLeaf Sugar concentration in leaves of cohort \\(i\\) \\(SS_{sapwood,i}\\) \\(mol\\,gluc\\cdot L^{-1}\\) SugarSapwood Sugar concentration in sapwood of cohort \\(i\\) \\(ST_{leaf,i}\\) \\(mol\\,gluc\\cdot L^{-1}\\) StarchLeaf Starch concentration in leaves of cohort \\(i\\) \\(ST_{sapwood,i}\\) \\(mol\\,gluc\\cdot L^{-1}\\) StarchSapwood Starch concentration in sapwood of cohort \\(i\\) \\(S_{plant}\\) \\(mol\\,gluc\\cdot ind^{-1}\\) Total labile carbon storage in a plant individual \\(B_{leaf}\\) \\(g\\,dry\\cdot ind^{-1}\\) Leaf dry biomass in a plant individual (for respiration costs) \\(B_{sapwood}\\) \\(g\\,dry\\cdot ind^{-1}\\) Sapwood dry biomass in a plant individual \\(B_{living, sapwood}\\) \\(g\\,dry\\cdot ind^{-1}\\) Sapwood dry biomass corresponding to (living) parenchymatic tissues in a plant individual (for respiration costs) \\(B_{fineroot}\\) \\(g\\,dry\\cdot ind^{-1}\\) Fine root dry biomass in a plant individual (for respiration costs) B.15 Carbon balance Symbol Units R Description \\(M_{leaf}\\) \\(mol\\,gluc\\cdot day^{-1}\\) Leaf daily maintenance respiration in a plant individual \\(M_{sapwood}\\) \\(mol\\,gluc\\cdot day^{-1}\\) Sapwood daily maintenance respiration in a plant individual \\(M_{fineroot}\\) \\(mol\\,gluc\\cdot day^{-1}\\) Fine root daily maintenance respiration in a plant individual \\(MR_{leaf}\\) \\(g\\,gluc\\cdot g\\,dry^{-1}\\cdot day^{-1}\\) RERleaf Leaf respiration rate at 20 ºC \\(MR_{sapwood}\\) \\(g\\,gluc\\cdot g\\,dry^{-1}\\cdot day^{-1}\\) RERsapwood Living sapwood (parenchymatic tissue) respiration rate at 20 ºC \\(MR_{fineroot}\\) \\(g\\,gluc\\cdot g\\,dry^{-1}\\cdot day^{-1}\\) RERfineroot Fine root respiration rate at 20 ºC \\(G_{leaf}\\) \\(mol\\,gluc\\cdot day^{-1}\\) Leaf daily growth respiration in a plant individual \\(G_{sapwood}\\) \\(mol\\,gluc\\cdot day^{-1}\\) Sapwood daily growth respiration in a plant individual \\(G_{fineroot}\\) \\(mol\\,gluc\\cdot day^{-1}\\) Fine root daily growth respiration in a plant individual \\(F_{phloem}\\) \\(mol\\,gluc\\cdot day^{-1}\\) Daily phloem transport of sugars from leaves to sapwood \\(SC_{leaf}\\) \\(mol\\,gluc\\cdot day^{-1}\\) Daily conversion from leaf sugar to leaf starch \\(SC_{sapwood}\\) \\(mol\\,gluc\\cdot day^{-1}\\) Daily conversion from sapwood sugar to sapwood starch \\(TS_{leaf}\\) \\(mol\\,gluc\\cdot day^{-1}\\) Daily translocation of leaf sugars (prior to senescence) \\(TS_{sapwood}\\) \\(mol\\,gluc\\cdot day^{-1}\\) Daily translocation of sapwood sugars (prior to senescence) \\(TT_{leaf}\\) \\(mol\\,gluc\\cdot day^{-1}\\) Daily translocation of leaf starch (prior to senescence) \\(RE_{leaf}\\) \\(mol\\,gluc\\cdot day^{-1}\\) Daily root exudation of leaf carbon \\(RE_{sapwood}\\) \\(mol\\,gluc\\cdot day^{-1}\\) Daily root exudation of sapwood carbon B.16 Growth, senescence and mortality Symbol Units R Description \\(RGR_{leaf, max}\\) \\(m^2 \\cdot cm^{-2} \\cdot day^{-1}\\) RGRleafmax Maximum leaf area daily growth rate, relative to sapwood area \\(RGR_{sapwood, max}\\) \\(cm^2 \\cdot cm^{-2} \\cdot day^{-1}\\) RGRsapwoodmax Maximum daily sapwood relative growth rate (in sapwood area basis) \\(RGR_{fineroot, max}\\) \\(g\\,dry \\cdot g\\,dry^{-1} \\cdot day^{-1}\\) RGRfinerootmax Maximum daily fine root relative growth rate \\(LA^{target}\\) \\(m^2\\) Leaf area allocation target \\(\\Delta LA_{alloc}\\) \\(m^2\\) Leaf area increase dictated by the difference between leaf area allocation target and current leaf area \\(\\Delta LA_{source}\\) \\(m^2\\) Leaf area increase according to leaf metabolic carbon availability \\(\\Delta LA_{sink}\\) \\(m^2\\) Leaf area increase dictated by sink limitations (leaf relative growth rate and relative cell expansion rate) \\(\\Delta LA\\) \\(m^2\\) Actual leaf area increase \\(\\Delta SA_{source}\\) \\(cm^2\\) Sapwood area increase according to sapwood storage carbon availability \\(\\Delta SA_{sink}\\) \\(cm^2\\) Sapwood area increase dictated by sink limitations \\(\\Delta SA\\) \\(cm^2\\) Actual sapwood area increase \\(B_{fineroot,target}\\) \\(g\\, dry\\) Fine root biomass allocation target \\(\\Delta B_{fineroot,alloc}\\) \\(g\\, dry\\) Fine root biomass increase dictated by the difference between fine root biomass allocation target and current fine root biomass \\(\\Delta B_{fineroot,source}\\) \\(g\\, dry\\) Fine root biomass increase according to sapwood metabolic carbon availability \\(\\Delta B_{fineroot,sink}\\) \\(g\\, dry\\) Fine root biomass increase dictated by sink limitations (fine root relative growth rate and relative cell expansion rate) \\(\\Delta B_{fineroot}\\) \\(g\\, dry\\) Actual fine root biomass increase Bibliography "],["bibliography.html", "Bibliography", " Bibliography "]]
